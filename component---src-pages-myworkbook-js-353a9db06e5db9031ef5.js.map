{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/mediatemplates/ShowMedia.js","webpack:///./src/pages/myworkbook.js"],"names":["Header","siteTitle","className","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","defaultProps","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","ShowMedia","props","useFirebaseNode","datafirenode","mediaItems","loading","error","console","log","Object","keys","map","mediaItem","mediaItemsIndex","GetReadyScatterQuotesApexChart","key","firenode","GetReadyDatalineQuotesApexChart","ShowImages","urls","images","series","scatter","ScatterQuotesApexChart","options","line","name","line_point","DatalineQuotesApexChart","Image","MyWorkBook","userEmail","useSelector","selectApplication","email","replace","avatarUrl","user","userPosts","item","uniqueThemes","Set","theme","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","Alert","variant","quiz","id","ReactHtmlParser","quizString","answer","date","htmlfeedback","type","content","ShowXlTableArrayOfArrays","xlArray","createProtoArray"],"mappings":"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","file":"component---src-pages-myworkbook-js-353a9db06e5db9031ef5.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          Â© {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\n\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport ScatterQuotesApexChart from \"./ScatterQuotesApexChart\";\nimport DatalineQuotesApexChart from \"./DatalineQuotesApexChart\";\n\nimport Image from \"react-bootstrap/Image\";\n\nexport default function ShowMedia(props) {\n    const { data: mediaItems, loading, error } = useFirebaseNode(\n      props.datafirenode\n    );\n    //  console.log(props.content, mediaItems);\n  \n    if (!!loading || !mediaItems) {\n      return <div>...</div>;\n    }\n    if (!!error) {\n      return <div>:-)</div>;\n    }\n    \n    console.log(mediaItems);\n\n    return (\n      <div>\n        {Object.keys(mediaItems).map((mediaItem, mediaItemsIndex) => {\n          if (\n            mediaItem === \"scatterquotesapexchart\" ||\n            mediaItem === \"scatterquotesapexchartoptions\"\n          ) { return <GetReadyScatterQuotesApexChart key={mediaItemsIndex} firenode={mediaItems[mediaItem]} /> }\n          if (\n            mediaItem === \"datalinequotesapexchart\" ||\n            mediaItem === \"datalinequotesapexchartoptions\"\n          ) { return <GetReadyDatalineQuotesApexChart key={mediaItemsIndex} firenode={mediaItems[mediaItem]} /> }\n  \n          if (mediaItem === \"images\") { return <ShowImages key={mediaItemsIndex} urls={mediaItems.images.urls} /> }\n  \n          return null;\n        })}\n      </div>\n    );\n  }\n\n    \n  function GetReadyScatterQuotesApexChart({ firenode }) {\n    let series = Object.keys(firenode.series).map(\n      (scatter) => {\n        return [\n          firenode[\"series\"][scatter][0],\n          firenode[\"series\"][scatter][1],\n        ];\n      }\n    );\n    //       console.log(series)\n    return <ScatterQuotesApexChart series={series} options={\n      !!firenode?.options\n        ? firenode.options\n        : {}\n    } />\n  }\n  \n  \n  \n  function GetReadyDatalineQuotesApexChart({ firenode }) {\n    let series = Object.keys(firenode.series).map((line) => {\n      return {\n        name: firenode[\"series\"][line][\"name\"],\n        data: Object.keys(\n          firenode[\"series\"][line][\"data\"]\n        ).map((line_point) => {\n          return [\n            firenode[\"series\"][line][\"data\"][line_point][0],\n            firenode[\"series\"][line][\"data\"][line_point][1],\n          ];\n        }),\n      };\n    });\n //    console.log(series);\n    return <DatalineQuotesApexChart\n      series={series}\n      options={\n        !!firenode?.options\n          ? firenode.options\n          : {}\n      }\n    />\n  }\n  \n  function ShowImages({ urls }) {\n    return <>\n      {urls?.[0] ? <Image src={urls[0]} /> : null}\n      {urls?.[1] ? <Image src={urls[1]} /> : null}\n      {urls?.[2] ? <Image src={urls[2]} /> : null}\n      {urls?.[3] ? <Image src={urls[3]} /> : null}\n      {urls?.[4] ? <Image src={urls[4]} /> : null}\n    </>\n  }\n  ","import React from \"react\";\n\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport { useSelector } from \"react-redux\";\n\nimport Layout from \"../components/layout\";\nimport { selectApplication } from \"../features/application/applicationSlice\";\n\nimport { createProtoArray } from \"../features/spreadsheet/spreadsheetSlice\";\n\nimport ShowMedia from \"../mediatemplates/ShowMedia\";\nimport ShowXlTableArrayOfArrays from \"../mediatemplates/ShowXlTableArrayOfArrays\";\n\nimport Alert from \"react-bootstrap/Alert\";\n\nimport ReactHtmlParser from 'react-html-parser'; //, { processNodes, convertNodeToElement, htmlparser2 }\n\nexport default function MyWorkBook() {\n  // const [data, setData] = React.useState(null);\n  const email = useSelector(selectApplication).email;\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n  const avatarUrl = useSelector(selectApplication).avatarUrl;\n  const user = useSelector(selectApplication).user;\n\n  const { data: userPosts, loading, error } = useFirebaseNode(\n    \"usersCraft/\" + userEmail + \"/posts/\"\n  );\n\n  if (!!loading || !userPosts) {\n    return <Layout>...</Layout>;\n  }\n  if (!!error) {\n    return <Layout>:-(</Layout>;\n  }\n  let data = Object.keys(userPosts).map((item) => {\n    return userPosts[item];\n  });\n  const uniqueThemes = !!data\n    ? [...new Set(data.map((item) => item.theme))]\n    : []; // [ 'A', 'B']\n\n  return (\n    <Layout>\n      <div className=\"media border p-3 mb-5\">\n        <img\n          src={avatarUrl}\n          alt=\"\"\n          className=\"m-3\"\n          style={{\n            verticalAlign: \"middle\",\n            width: \"60px\",\n            height: \"60px\",\n            borderRadius: \"50%\",\n            filter: \"grayscale(100%)\",\n            objectFit: \"cover\",\n          }}\n        />\n        <div className=\"media-body\">\n          <h4>\n            {user}{\" \"}\n            <small>\n              <i>\n                {new Intl.DateTimeFormat(\"ru\", {\n                  weekday: \"short\",\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"numeric\",\n                  hour: \"numeric\",\n                  minute: \"numeric\",\n                }).format(new Date())}\n              </i>\n            </small>\n          </h4>\n          <p>Ð Ð°Ð±Ð¾ÑÐ°Ñ ÑÐµÑÑÐ°Ð´Ñ</p>\n        </div>\n      </div>\n      <div>\n        {!!uniqueThemes &&\n          uniqueThemes.map((theme) => (\n            <div key={theme}>\n              <Alert variant=\"primary\">{theme}</Alert>\n              {data\n                .filter((quiz) => quiz.theme === theme)\n                .map((quiz) => {\n                  return (\n                    <div key={quiz.id}>\n                      <Alert variant=\"secondary\" className=\"mt-3\">\n                        {!!quiz.avatarUrl ? (\n                          <img\n                            src={quiz.avatarUrl}\n                            alt=\"\"\n                            className=\"m-2\"\n                            style={{\n                              verticalAlign: \"middle\",\n                              width: \"50px\",\n                              height: \"50px\",\n                              borderRadius: \"50%\",\n                              filter: \"grayscale(100%)\",\n                              objectFit: \"cover\",\n                            }}\n                          />\n                        ) : null}\n                        {quiz.title}\n                      </Alert>\n                      <div>\n                      {ReactHtmlParser(quiz.quizString +\n                          `<br><span>ÐÑÐ²ÐµÑ: ${quiz.answer\n                          }</span><span class=\"ml-5\">ÐÐ°ÑÐ°/Ð²ÑÐµÐ¼Ñ: ${quiz.date\n                          }</span><br>${!!quiz.user ? \"Ð ÐµÑÐµÐ½Ð¾: \" + quiz.user : \"\"\n                          }`)}  \n                      </div>      \n                      \n                    {quiz?.htmlfeedback && <div>{ReactHtmlParser(quiz.htmlfeedback)}</div>}\n\n                      {quiz.type === \"spreadsheet\" && !!quiz?.content && <ShowXlTableArrayOfArrays xlArray={createProtoArray(quiz.content, 0, 0)}/>}\n\n                      {quiz.type === \"media\" ? (\n                        <ShowMedia\n                          datafirenode={\n                            \"/usersCraft/\" + userEmail + \"/data/\" + quiz.content\n                          }\n                        />\n                      ) : null}\n                    </div>\n                  );\n                })}\n            </div>\n          ))}\n      </div>\n    </Layout>\n  );\n}\n\n"],"sourceRoot":""}