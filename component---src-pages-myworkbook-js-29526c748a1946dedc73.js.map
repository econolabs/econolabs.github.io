{"version":3,"sources":["webpack:///./src/mediatemplates/DatalineQuotesApexChartOptions.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/myworkbook.js","webpack:///./src/mediatemplates/ScatterQuotesApexChartOptions.js","webpack:///./src/hooks/useFirebaseNode.js"],"names":["DatalineQuotesApexChartOptionsLazy","React","lazy","props","isSSR","window","Suspense","fallback","Header","siteTitle","className","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","defaultProps","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","MyWokBook","useState","setData","userEmail","useSelector","selectApplication","email","replace","avatarUrl","user","useEffect","firebase","database","ref","once","then","snapshot","userPosts","forEach","childSnapshot","childData","val","push","catch","err","console","log","uniqueThemes","Set","map","item","theme","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","key","variant","quiz","xlArray","type","content","createProtoArray","id","source","quizString","answer","date","escapeHtml","striped","bordered","hover","column","columnIndex","alphabet","row","rowIndex","ShowMedia","datafirenode","useFirebaseNode","mediaItems","loading","error","Object","keys","mediaItem","index","series","scatter","line","name","line_point","ScatterQuotesApexChartOptionsLazy","url","options","undefined","status","setStatus","fetchNow"],"mappings":"8FAAA,yBAEMA,EAAqCC,IAAMC,MAAK,kBAAM,2DAE7C,aAACC,GACZ,IAAMC,EAA0B,oBAAXC,OACrB,OAAO,qCACHD,GACA,kBAAC,IAAME,SAAP,CAAgBC,SAAU,+BAAS,kBAACP,EAAuCG,O,4GCJ7EK,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,yBAAKC,UAAU,kCAAf,IAEE,wBAAIC,MAAO,CAAEC,OAAQ,IACnB,kBAAC,OAAD,CAAMC,GAAG,IAAIF,MAAO,CAAEG,MAAM,OAASC,eAAe,SAAaN,IAEnE,uBAAGC,UAAU,eAAeM,KAAK,8BAC/B,yBACEC,IAAI,4EAGJC,IAAI,GACJP,MAAO,CACLQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,kBACRC,UAAW,cAqCrBhB,EAAOiB,aAAe,CACpBhB,UAAU,IAGGD,Q,UCXAkB,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQnB,UAAWmB,EAAKC,KAAKC,aAAaC,QAC1C,yBACEpB,MAAO,CACLC,OAAO,SACPoB,SAAU,IACVC,QAAS,SAGX,8BAAON,GACP,gCACE,0BAAMhB,MAAO,CAACG,MAAO,aAArB,MACG,IAAIoB,MAAOC,cADd,KAC+B,IAC/B,uBAAGnB,KAAK,6BAA6BL,MAAO,CAACG,MAAO,aAAcc,EAAKC,KAAKC,aAAaM,c,qmCChBpF,SAASC,IAAa,IAAD,EACRpC,IAAMqC,SAAS,MAAhCV,EADyB,KACnBW,EADmB,KAG5BC,EADUC,YAAYC,KAAmBC,MACvBC,QAAQ,gBAAiB,KACzCC,EAAYJ,YAAYC,KAAmBG,UAC3CC,EAAOL,YAAYC,KAAmBI,KAE5C7C,IAAM8C,WAAU,WACZC,IACKC,WACAC,IAAI,cAAgBV,EAAY,WAChCW,KAAK,SACLC,MAAK,SAAAC,GACF,IAAIC,EAAY,GAChBD,EAASE,SAAQ,SAAUC,GAIvB,IAAIC,EAAYD,EAAcE,MAC9BJ,EAAUK,KAAKF,MAEnBlB,EAAQe,MAGXM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAE/B,IAEH,IAAMG,EAAiBpC,EAAF,EAAa,IAAIqC,IAAIrC,EAAKsC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,WAAW,GAE3E,OAAO,kBAAC,IAAD,KACH,yBAAK1D,UAAU,yBACX,yBAAKO,IAAK4B,EAAW3B,IAAI,GACrBR,UAAU,MACVC,MAAO,CACHQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,kBACRC,UAAW,WAEnB,yBAAKd,UAAU,cACX,4BAAKoC,EAAL,IAAW,+BAAO,2BAAI,IAAIuB,KAAKC,eAAe,KAAM,CAChDC,QAAS,QACTC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,YACTC,OAAO,IAAI3C,SACd,gDAGR,+BAAQ8B,GAAgBA,EAAaE,KAAI,SAAAE,GAAK,OAC1C,yBAAKU,IAAKV,GACN,kBAAC,IAAD,CAAOW,QAAQ,WACVX,GAEJxC,EAAKL,QAAO,SAAAyD,GAAI,OAAIA,EAAKZ,QAAUA,KAAOF,KAAI,SAAAc,GAC3C,IAAIC,EAAwB,gBAAdD,EAAKE,OAA4BF,aAAD,EAACA,EAAMG,SAAUC,YAAiBJ,EAAKG,QAAS,EAAG,GAAK,KAItG,OAAO,yBAAKL,IAAKE,EAAKK,IAClB,kBAAC,IAAD,CAAON,QAAQ,YAAYrE,UAAU,QAC9BsE,EAAKnC,UAAY,yBAAK5B,IAAK+D,EAAKnC,UAAW3B,IAAI,GAC9CR,UAAU,MACVC,MAAO,CACHQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,kBACRC,UAAW,WACP,KACXwD,EAAKjD,OAEV,kBAAC,IAAD,CAAeuD,OAAQN,EAAKO,WAAL,oBAAsCP,EAAKQ,OAA3C,yCAA0FR,EAAKS,KAA/F,eAAmHT,EAAKlC,KAAO,WAAakC,EAAKlC,KAAO,IAAM4C,YAAY,IAClL,gBAAdV,EAAKE,MAA4BD,EAC9B,kBAAC,IAAD,CAAOU,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,4BAAK,KACJZ,EAAQ,GAAGf,KAAI,SAAC4B,EAAQC,GAAT,OAAyB,wBAAIjB,IAAKiB,EAAarF,UAAU,eAAesF,IAASD,SAGzG,+BACKd,EAAQf,KAAI,SAAC+B,EAAKC,GAAN,OACT,wBAAIpB,IAAKoB,GACL,gCAAK,2BAAOxF,UAAU,QAAQwF,EAAW,IACxCD,EAAI/B,KAAI,SAAC4B,EAAQC,GAAT,OAAyB,wBAAIjB,IAAKoB,EAAWH,GAAa,+BAAQE,EAAIF,cAK7F,KAES,UAAdf,EAAKE,KACF,kBAACiB,EAAD,CAAWC,aAAc,eAAiB5D,EAAY,SAAWwC,EAAKG,UACpE,eAU9B,SAASgB,EAAUhG,GAAQ,IAAD,EACuBkG,YAAgBlG,EAAMiG,cAArDE,EADQ,EACd1E,KAAkB2E,EADJ,EACIA,QADJ,EACaC,MAGnC,OAAMD,IAAYD,EAAqB,oCAEhC,6BACFG,OAAOC,KAAKJ,GAAYpC,KAAI,SAACyC,EAAWC,GACrC,GAAkB,kCAAdD,EAA+C,CAC/C,IAAIE,EAASJ,OAAOC,KAAKJ,EAAWK,GAAWE,QAAQ3C,KAAI,SAAA4C,GAAa,MAAO,CAACR,EAAWK,GAAX,OAAgCG,GAAS,GAAIR,EAAWK,GAAX,OAAgCG,GAAS,OAGtK,OAAO,kBAAC,IAAD,CAA+BhC,IAAK8B,EAAOC,OAAQA,IAE9D,GAAkB,mCAAdF,EAAgD,CAChD,IAAIE,EAASJ,OAAOC,KAAKJ,EAAWK,GAAWE,QAAQ3C,KAAI,SAAA6C,GACvD,MAAO,CACHC,KAAMV,EAAWK,GAAX,OAAgCI,GAAhC,KACNnF,KAAM6E,OAAOC,KAAKJ,EAAWK,GAAX,OAAgCI,GAAhC,MAA+C7C,KAAI,SAAA+C,GACjE,MAAO,CAACX,EAAWK,GAAX,OAAgCI,GAAhC,KAA8CE,GAAY,GAAIX,EAAWK,GAAX,OAAgCI,GAAhC,KAA8CE,GAAY,WAK5I,OAAO,kBAAC,IAAD,CAAgCnC,IAAK8B,EAAOC,OAAQA,IAE/D,OAAO,W,mKChKnB,yBAEMK,EAAoCjH,IAAMC,MAAK,kBAAM,2DAE5C,aAACC,GACZ,IAAMC,EAA0B,oBAAXC,OACrB,OAAO,qCACHD,GACA,kBAAC,IAAME,SAAP,CAAgBC,SAAU,+BAAS,kBAAC2G,EAAsC/G,O,m1BCL3E,SAASkG,EAAgBc,EAAKC,GAAU,IAAD,EAChB9E,mBAAS,CACnCiE,SAAS,EACT3E,UAAMyF,EACNb,WAAOa,IAHFC,EADqC,KAC7BC,EAD6B,KAO5C,SAASC,EAASL,EAAKC,GACrBG,EAAU,CAAEhB,SAAS,IACrBvD,IACGC,WACAC,IAAIiE,GACJhE,KAAK,SACLC,MAAK,SAAAC,GACJkE,EAAU,CAAEhB,SAAS,EAAO3E,KAAMyB,EAASK,WAE5CE,OAAM,SAAC4C,GACNe,EAAU,CAAEhB,SAAS,EAAOC,aAUlC,OANAzD,qBAAU,WACJoE,GACFK,EAASL,KAEV,IAEI,EAAP,KAAYG,GAAZ,IAAoBE","file":"component---src-pages-myworkbook-js-29526c748a1946dedc73.js","sourcesContent":["import React from \"react\";\n\nconst DatalineQuotesApexChartOptionsLazy = React.lazy(() => import(\"./DatalineQuotesApexChartOptionsLazy.js\"))\n\nexport default (props) => {\n    const isSSR = typeof window === \"undefined\"\n    return <>\n      {!isSSR && (\n        <React.Suspense fallback={<div />}><DatalineQuotesApexChartOptionsLazy {...props} /></React.Suspense>\n      )}\n    </>\n}\n  \n  \n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          Â© {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport firebase from \"gatsby-plugin-firebase\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport { useSelector } from \"react-redux\";\n\nimport Layout from \"../components/layout\"\nimport {\n    selectApplication,\n} from \"../features/application/applicationSlice\";\n\nimport { alphabet } from \"../features/spreadsheet/AlphabetRow\";\nimport { createProtoArray } from \"../features/spreadsheet/spreadsheetSlice\";\n\nimport ScatterQuotesApexChartOptions from \"../mediatemplates/ScatterQuotesApexChartOptions\";\nimport DatalineQuotesApexChartOptions from \"../mediatemplates/DatalineQuotesApexChartOptions\";\n\n\nimport Alert from 'react-bootstrap/Alert'\nimport Table from 'react-bootstrap/Table'\n\n\n\nexport default function MyWokBook() {\n    const [data, setData] = React.useState(null);\n    const email = useSelector(selectApplication).email;\n    let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n    const avatarUrl = useSelector(selectApplication).avatarUrl;\n    const user = useSelector(selectApplication).user;\n\n    React.useEffect(() => {\n        firebase\n            .database()\n            .ref('usersCraft/' + userEmail + '/posts/')\n            .once(\"value\")\n            .then(snapshot => {\n                let userPosts = [];\n                snapshot.forEach(function (childSnapshot) {\n                    // key will be \"ada\" the first time and \"alan\" the second time\n                    //     var key = childSnapshot.key;\n                    // childData will be the actual contents of the child\n                    let childData = childSnapshot.val();\n                    userPosts.push(childData);\n                });\n                setData(userPosts);\n                //           console.log(userPosts);\n            })\n            .catch(err => console.log(err));\n\n    }, [])\n\n    const uniqueThemes = !!data ? [...new Set(data.map(item => item.theme))] : []; // [ 'A', 'B']\n\n    return <Layout>\n        <div className=\"media border p-3 mb-5\">\n            <img src={avatarUrl} alt=\"\"\n                className=\"m-3\"\n                style={{\n                    verticalAlign: 'middle',\n                    width: '60px',\n                    height: '60px',\n                    borderRadius: '50%',\n                    filter: 'grayscale(100%)',\n                    objectFit: 'cover'\n                }} />\n            <div className=\"media-body\">\n                <h4>{user} <small><i>{new Intl.DateTimeFormat(\"ru\", {\n                    weekday: \"short\",\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"numeric\",\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                }).format(new Date())}</i></small></h4>\n                <p>Ð Ð°Ð±Ð¾ÑÐ°Ñ ÑÐµÑÑÐ°Ð´Ñ</p>\n            </div>\n        </div>\n        <div>{!!uniqueThemes && uniqueThemes.map(theme =>\n            <div key={theme}>\n                <Alert variant='primary'>\n                    {theme}\n                </Alert>\n                {data.filter(quiz => quiz.theme === theme).map(quiz => {\n                    let xlArray = quiz.type === 'spreadsheet' && !!quiz?.content ? createProtoArray(quiz.content, 0, 0) : null;\n                    //      user: user, avatarUrl: !!avatarUrl ? avatarUrl : null,\n\n\n                    return <div key={quiz.id} >\n                        <Alert variant='secondary' className=\"mt-3\">\n                            {!!quiz.avatarUrl ? <img src={quiz.avatarUrl} alt=\"\"\n                                className=\"m-2\"\n                                style={{\n                                    verticalAlign: 'middle',\n                                    width: '50px',\n                                    height: '50px',\n                                    borderRadius: '50%',\n                                    filter: 'grayscale(100%)',\n                                    objectFit: 'cover'\n                                }} /> : null}\n                            {quiz.title}\n                        </Alert>\n                        <ReactMarkdown source={quiz.quizString + `<br><span>ÐÑÐ²ÐµÑ: ${quiz.answer}</span><span class=\"ml-5\">ÐÐ°ÑÐ°/Ð²ÑÐµÐ¼Ñ: ${quiz.date}</span><br>${!!quiz.user ? 'Ð ÐµÑÐµÐ½Ð¾: ' + quiz.user : \"\"}`} escapeHtml={false} />\n                        {quiz.type === 'spreadsheet' && !!xlArray ?\n                            <Table striped bordered hover>\n                                <thead>\n                                    <tr>\n                                        <th>{\" \"}</th>\n                                        {xlArray[0].map((column, columnIndex) => <th key={columnIndex} className=\"text-center\">{alphabet[columnIndex]}</th>)}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {xlArray.map((row, rowIndex) =>\n                                        <tr key={rowIndex} >\n                                            <td> <small className=\"ml-1\">{rowIndex + 1}</small></td>\n                                            {row.map((column, columnIndex) => <td key={rowIndex + columnIndex}><small>{row[columnIndex]}</small></td>)}\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </Table>\n                            : null}\n\n                        {quiz.type === \"media\" ?\n                            <ShowMedia datafirenode={'/usersCraft/' + userEmail + '/data/' + quiz.content} />\n                            : null}\n                    </div>\n                })}\n            </div>\n        )}\n        </div>\n    </Layout>\n}\n\n\nfunction ShowMedia(props) {\n    const { data: mediaItems, loading, error } = useFirebaseNode(props.datafirenode);\n  //  console.log(props.content, mediaItems);\n\n    if (!!loading || !mediaItems) { return <div>...</div> }\n\n    return <div>\n        {Object.keys(mediaItems).map((mediaItem, index) => {\n            if (mediaItem === 'scatterquotesapexchartoptions') {\n                let series = Object.keys(mediaItems[mediaItem].series).map(scatter => { return [mediaItems[mediaItem]['series'][scatter][0], mediaItems[mediaItem]['series'][scatter][1]] }\n                );\n         //       console.log(series)\n                return <ScatterQuotesApexChartOptions key={index} series={series} />\n            }\n            if (mediaItem === 'datalinequotesapexchartoptions') {\n                let series = Object.keys(mediaItems[mediaItem].series).map(line => {\n                    return {\n                        name: mediaItems[mediaItem]['series'][line]['name'],\n                        data: Object.keys(mediaItems[mediaItem]['series'][line]['data']).map(line_point => {\n                            return [mediaItems[mediaItem]['series'][line]['data'][line_point][0], mediaItems[mediaItem]['series'][line]['data'][line_point][1]]\n                        })\n                    }\n                });\n     //           console.log(series);\n                return <DatalineQuotesApexChartOptions key={index} series={series} />\n            }\n            return null\n        })}\n    </div>\n}\n","import React from \"react\";\n\nconst ScatterQuotesApexChartOptionsLazy = React.lazy(() => import(\"./ScatterQuotesApexChartOptionsLazy.js\"))\n\nexport default (props) => {\n    const isSSR = typeof window === \"undefined\"\n    return <>\n      {!isSSR && (\n        <React.Suspense fallback={<div />}><ScatterQuotesApexChartOptionsLazy {...props} /></React.Suspense>\n      )}\n    </>\n}\n","import { useState, useEffect } from \"react\";\nimport firebase from \"gatsby-plugin-firebase\";\n\nexport function useFirebaseNode(url, options) {\n  const [status, setStatus] = useState({\n    loading: false,\n    data: undefined,\n    error: undefined\n  });\n\n  function fetchNow(url, options) {\n    setStatus({ loading: true });\n    firebase\n      .database()\n      .ref(url)\n      .once(\"value\")\n      .then(snapshot => {\n        setStatus({ loading: false, data: snapshot.val() });\n      })\n      .catch((error) => {\n        setStatus({ loading: false, error });\n      });\n  }\n\n  useEffect(() => {\n    if (url) {\n      fetchNow(url, options);\n    }\n  }, []);\n\n  return { ...status, fetchNow };\n}\n"],"sourceRoot":""}