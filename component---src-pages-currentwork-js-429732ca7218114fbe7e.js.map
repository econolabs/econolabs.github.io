{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/currentwork.js"],"names":["Header","siteTitle","className","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","defaultProps","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","currentDay","Intl","DateTimeFormat","weekday","year","month","day","format","replace","Currentwork","React","useState","setData","useEffect","firebase","database","ref","once","then","snapshot","currentDayPosts","forEach","childSnapshot","key","childData","val","push","console","log","catch","err","uniqueUsers","Set","map","item","user","uniqueTitles","striped","bordered","hover","size","length","titleIndex","data-toggle","data-placement","userIndex"],"mappings":"qKAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,yBAAKC,UAAU,kCAAf,IAEE,wBAAIC,MAAO,CAAEC,OAAQ,IACnB,kBAAC,OAAD,CAAMC,GAAG,IAAIF,MAAO,CAAEG,MAAM,OAASC,eAAe,SAAaN,IAEnE,uBAAGC,UAAU,eAAeM,KAAK,8BAC/B,yBACEC,IAAI,4EAGJC,IAAI,GACJP,MAAO,CACLQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,kBACRC,UAAW,cAqCrBhB,EAAOiB,aAAe,CACpBhB,UAAU,IAGGD,Q,UCXAkB,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQnB,UAAWmB,EAAKC,KAAKC,aAAaC,QAC1C,yBACEpB,MAAO,CACLC,OAAO,SACPoB,SAAU,IACVC,QAAS,SAGX,8BAAON,GACP,gCACE,0BAAMhB,MAAO,CAACG,MAAO,aAArB,MACG,IAAIoB,MAAOC,cADd,KAC+B,IAC/B,uBAAGnB,KAAK,6BAA6BL,MAAO,CAACG,MAAO,aAAcc,EAAKC,KAAKC,aAAaM,c,s+BCjCnG,IAAIC,EAAa,IAAIC,KAAKC,eAAe,KAAM,CAC3CC,QAAS,QACTC,KAAM,UACNC,MAAO,QACPC,IAAK,YACNC,OAAO,IAAIV,MAAQW,QAAQ,gBAAiB,KAEhC,SAASC,IAAe,IAAD,EACVC,IAAMC,SAAS,MAAhCpB,EAD2B,KACrBqB,EADqB,KAGlCF,IAAMG,WAAU,WACZC,IACKC,WACAC,IAAI,cAAgBhB,EAAa,WACjCiB,KAAK,SACLC,MAAK,SAAAC,GACF,IAAIC,EAAkB,GACtBD,EAASE,SAAQ,SAAUC,GAEbA,EAAcC,IAAxB,IAEIC,EAAYF,EAAcG,MAC9BL,EAAgBM,KAAKF,MAEzBZ,EAAQQ,GACRO,QAAQC,IAAIR,MAEfS,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAE/B,IAEH,IAAMC,EAAgBxC,EAAF,EAAa,IAAIyC,IAAIzC,EAAK0C,KAAI,SAAAC,GAAI,OAAIA,EAAKC,UAAU,GACnEC,EAAiB7C,EAAF,EAAa,IAAIyC,IAAIzC,EAAK0C,KAAI,SAAAC,GAAI,OAAIA,EAAKxC,WAAW,GAE3E,OAAO,kBAAC,IAAD,KACH,6BAAQH,EACJ,kBAAC,IAAD,CAAO8C,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MAC/B,+BACI,4BACI,4BAAK,2BAAOnE,UAAU,QAAjB,SACJ+D,EAAaK,OAAS,GAAKL,EAAaH,KAAI,SAACvC,EAAOgD,GAAR,OACzC,wBACCnB,IAAK7B,EACLiD,cAAY,UACZC,iBAAe,SACflD,MAAOA,GACN,+BAAQgD,SAItB,+BACKX,EAAYU,OAAS,GAAKV,EAAYE,KAAI,SAACE,EAAMU,GAAP,OACvC,wBAAItB,IAAKY,GACL,4BAAI,2BAAO9D,UAAU,QAAQ8D,IAC5BC,EAAaK,OAAS,GAAKL,EAAaH,KAAI,SAACvC,EAAOgD,GAAR,OACzC,wBAAInB,IAAKY,EAAOzC,GAAO,+BAAQH,EAAKL,QAAO,SAAAgD,GAAI,OAAIA,EAAKC,OAASA,GAAQD,EAAKxC,QAAUA,KAAO+C,OAAS,EAAI,IAAM,eAMpI,iB","file":"component---src-pages-currentwork-js-429732ca7218114fbe7e.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          Â© {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\nimport firebase from \"gatsby-plugin-firebase\";\n\nimport Table from 'react-bootstrap/Table'\n\nimport Layout from \"../components/layout\"\n\nlet currentDay = new Intl.DateTimeFormat(\"en\", {\n    weekday: \"short\",\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\"\n}).format(new Date()).replace(/[^a-zA-Z0-9]/g, \"_\");\n\nexport default function Currentwork() {\n    const [data, setData] = React.useState(null);\n\n    React.useEffect(() => {\n        firebase\n            .database()\n            .ref('currentDay/' + currentDay + '/posts/')\n            .once(\"value\")\n            .then(snapshot => {\n                let currentDayPosts = [];\n                snapshot.forEach(function (childSnapshot) {\n                    // key will be \"ada\" the first time and \"alan\" the second time\n                    var key = childSnapshot.key;\n                    // childData will be the actual contents of the child\n                    var childData = childSnapshot.val();\n                    currentDayPosts.push(childData);\n                });\n                setData(currentDayPosts);\n                console.log(currentDayPosts);\n            })\n            .catch(err => console.log(err));\n\n    }, [])\n\n    const uniqueUsers = !!data ? [...new Set(data.map(item => item.user))] : []; // [ 'A', 'B']\n    const uniqueTitles = !!data ? [...new Set(data.map(item => item.title))] : []; // [ 'A', 'B']\n\n    return <Layout>\n        <div>{!!data ?\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th ><small className=\"ml-1\">User</small></th>\n                        {uniqueTitles.length > 0 && uniqueTitles.map((title, titleIndex) =>\n                            <th\n                             key={title}\n                             data-toggle=\"tooltip\"\n                             data-placement=\"bottom\"\n                             title={title}                             \n                             ><small>{titleIndex}</small></th>\n                        )}\n                    </tr>\n                </thead>\n                <tbody>\n                    {uniqueUsers.length > 0 && uniqueUsers.map((user, userIndex) =>\n                        <tr key={user}>\n                            <td><small className=\"ml-1\">{user}</small></td>\n                            {uniqueTitles.length > 0 && uniqueTitles.map((title, titleIndex) =>\n                                <td key={user + title}><small>{data.filter(item => item.user === user && item.title === title).length > 0 ? '+' : '-'}</small></td>\n                            )}\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n            : \"Loading...\"}</div>\n    </Layout>\n}"],"sourceRoot":""}