{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/mediatemplates/ShowXlTableWithPredefinedIndicators.js","webpack:///./src/mediatemplates/PrepareDataFromDictionaryForChart.js","webpack:///./src/pages/myworkbook.js","webpack:///./src/mediatemplates/ShowMedia.js"],"names":["Header","siteTitle","className","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","defaultProps","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","ShowXlTableWithPredefinedIndicators","quiz","xlArray","useFirebaseNode","answer","projectData","loading","error","projectDataArray","Object","keys","map","item","tableWithData","doFindValuesForArrayOfArraysTable","Table","striped","bordered","hover","size","column","columnIndex","key","row","rowIndex","PrepareDataFromDictionaryForChart","props","projectdata","userData","console","log","requiredcategories","content","requiredseries","series","indicator","name","doFindValuesForChartDataSeriesByIndicator","ApexEmptyOptionsChart","showAs","categories","options","chart","stacked","MyWorkBook","userEmail","useSelector","selectApplication","email","replace","avatarUrl","user","userPosts","uniqueThemes","Set","theme","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","Alert","variant","id","ReactHtmlParser","quizString","type","comment","date","htmlfeedback","ShowXlTableArrayOfArrays","createProtoArray","ShowMedia","datafirenode","mediaItems","mediaItem","mediaItemsIndex","GetSeriesCategoriesOptionsForApexChart","firenode","GetReadyScatterQuotesApexChart","GetReadyDatalineQuotesApexChart","ShowImages","urls","images","line","line_point","scatter"],"mappings":"sKAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,yBAAKC,UAAU,kCAAf,IAEE,wBAAIC,MAAO,CAAEC,OAAQ,IACnB,kBAAC,OAAD,CAAMC,GAAG,IAAIF,MAAO,CAAEG,MAAM,OAASC,eAAe,SAAaN,IAEnE,uBAAGC,UAAU,eAAeM,KAAK,8BAC/B,yBACEC,IAAI,4EAGJC,IAAI,GACJP,MAAO,CACLQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,kBACRC,UAAW,cAqCrBhB,EAAOiB,aAAe,CACpBhB,UAAU,IAGGD,Q,UCXAkB,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQnB,UAAWmB,EAAKC,KAAKC,aAAaC,QAC1C,yBACEpB,MAAO,CACLC,OAAO,SACPoB,SAAU,IACVC,QAAS,SAGX,8BAAON,GACP,gCACE,0BAAMhB,MAAO,CAACG,MAAO,aAArB,MACG,IAAIoB,MAAOC,cADd,KAC+B,IAC/B,uBAAGnB,KAAK,6BAA6BL,MAAO,CAACG,MAAO,aAAcc,EAAKC,KAAKC,aAAaM,c,8UC/BpF,SAASC,EAAT,GAAiE,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAAW,EAC/BC,YAAgB,iBAAmBF,EAAKG,QAAxEC,EAD+D,EACrEd,KAAmBe,EADkD,EAClDA,QAASC,EADyC,EACzCA,MAEpC,GAAMD,IAAYD,EAAe,OAAO,oCACxC,GAAME,EAAS,OAAO,oCAEtB,IAAIC,EAAmBC,OAAOC,KAAKL,GAChCM,KAAI,SAACC,GAAW,OAAOP,EAAYO,MAKlCC,EAAgBC,YAAkCN,EAAkBN,GAIxE,OAAO,kBAACa,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MACxC,+BACE,4BACGN,EAAc,GAAGF,KAAI,SAACS,EAAQC,GAAT,OACpB,wBAAIC,IAAKD,EAAahD,UAAU,eAC7BwC,EAAc,GAAGQ,SAK1B,+BACGR,EAAcF,KAAI,SAACY,EAAKC,GACvB,GAAIA,EAAW,EACb,OAAO,wBAAIF,IAAKE,GACbD,EAAIZ,KAAI,SAACS,EAAQC,GAAT,OACP,wBAAIC,IAAKE,EAAWH,GAClBE,EAAIF,GADN,c,gBChCC,SAASI,EAAkCC,GAAQ,IAAD,EACfvB,YAAgB,iBAAmBuB,EAAMzB,KAAKG,QAA9EuB,EAD+C,EACrDpC,KAAmBe,EADkC,EAClCA,QAASC,EADyB,EACzBA,MAEpC,GAAMD,IAAYqB,EACd,OAAO,oCAET,GAAMpB,EACJ,OAAO,oCAET,IAAIqB,EAAWnB,OAAOC,KAAKiB,GAAahB,KAAI,SAACC,GAC3C,OAAOe,EAAYf,MAGvBiB,QAAQC,IAAIJ,EAAMzB,MAElB,IAAI8B,EAAqBtB,OAAOC,KAAKgB,EAAMzB,KAAK+B,QAAQD,oBAAoBpB,KAAI,SAAAC,GAAU,OAAOc,EAAMzB,KAAK+B,QAAQD,mBAAmBnB,MACnIqB,EAAiBxB,OAAOC,KAAKgB,EAAMzB,KAAK+B,QAAQC,gBAAgBtB,KAAI,SAAAC,GAAU,OAAOc,EAAMzB,KAAK+B,QAAQC,eAAerB,MAE3HiB,QAAQC,IAAIC,GACZF,QAAQC,IAAIG,GAEZ,IAAIC,EAASD,EAAetB,KAAI,SAAAwB,GAC5B,MAAO,CACHC,KAAMD,EAAW5C,KAAM8C,YAA0CT,EAAUO,EAAWJ,OAI9F,OAAS,kBAACO,EAAA,EAAD,CACTC,OAAQ,uBACJC,WAAYT,EACZG,OAAQA,EASRO,QAAS,CAAEC,MAAO,CAAEC,SAAS,M,+wBC1BtB,SAASC,IAEtB,IACIC,EADUC,YAAYC,KAAmBC,MACvBC,QAAQ,gBAAiB,KACzCC,EAAYJ,YAAYC,KAAmBG,UAC3CC,EAAOL,YAAYC,KAAmBI,KALT,EAOShD,YAC1C,cAAgB0C,EAAY,WADhBO,EAPqB,EAO3B7D,KAAiBe,EAPU,EAOVA,QAASC,EAPC,EAODA,MAIlC,GAAMD,IAAY8C,EAChB,OAAO,kBAAC,IAAD,YAET,GAAM7C,EACJ,OAAO,kBAAC,IAAD,YAET,IAAIhB,EAAOkB,OAAOC,KAAK0C,GAAWzC,KAAI,SAACC,GACrC,OAAOwC,EAAUxC,MAEbyC,EAAiB9D,EAAF,EAAa,IAAI+D,IAAI/D,EAAKoB,KAAI,SAACC,GAAD,OAAUA,EAAK2C,WAAW,GAE7E,OACE,kBAAC,IAAD,KACE,yBAAKlF,UAAU,yBACb,yBACEO,IAAKsE,EACLrE,IAAI,GACJR,UAAU,MACVC,MAAO,CACLQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,kBACRC,UAAW,WAGf,yBAAKd,UAAU,cACb,4BACG8E,EAAM,IACP,+BACE,2BACG,IAAIK,KAAKC,eAAe,KAAM,CAC7BC,QAAS,QACTC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,YACPC,OAAO,IAAInE,SAIpB,gDAGJ,+BACKwD,GACDA,EAAa1C,KAAI,SAAC4C,GAAD,OACf,yBAAKjC,IAAKiC,GACR,kBAACU,EAAA,EAAD,CAAOC,QAAQ,WAAWX,GACzBhE,EACEL,QAAO,SAACe,GAAD,OAAUA,EAAKsD,QAAUA,KAChC5C,KAAI,SAACV,GACJ,OACE,yBAAKqB,IAAKrB,EAAKkE,IACb,kBAACF,EAAA,EAAD,CAAOC,QAAQ,YAAY7F,UAAU,QAChC4B,EAAKiD,UACN,yBACEtE,IAAKqB,EAAKiD,UACVrE,IAAI,GACJR,UAAU,MACVC,MAAO,CACLQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,kBACRC,UAAW,WAGb,KACHc,EAAKP,OAER,6BACC0E,IAAgBnE,EAAKoE,WAAL,iDAEgB,gBAAdpE,EAAKqE,KAAyBrE,EAAKsE,QAAUtE,EAAKG,QAFpD,qEAGoBH,EAAKuE,KAHzB,2CAITvE,EAAKkD,KAAO,WAAalD,EAAKkD,KAAO,IAJ5B,kCAUlBlD,aAAA,EAAAA,EAAMwE,eAAgB,6BAAML,IAAgBnE,EAAKwE,eAEjC,gBAAdxE,EAAKqE,SAA4BrE,aAAD,EAACA,EAAM+B,UAAW,kBAAC0C,EAAA,EAAD,CAA0BxE,QAASyE,YAAiB1E,EAAK+B,QAAS,EAAG,KAEzG,gBAAd/B,EAAKqE,MAA0B,kBAACtE,EAAD,CAAqCC,KAAMA,EAAMC,QAASyE,YAAiB1E,EAAK+B,QAAS,EAAG,KAE7G,sCAAd/B,EAAKqE,MAAgD,kBAAC7C,EAAD,CAAmCxB,KAAMA,IAIhF,UAAdA,EAAKqE,KACJ,kBAACM,EAAA,EAAD,CACEC,aACE,eAAiBhC,EAAY,SAAW5C,EAAK+B,UAG/C,iB,yUCzHX,SAAS4C,EAAUlD,GAAQ,IAAD,EACMvB,YAC3CuB,EAAMmD,cADMC,EADyB,EAC/BvF,KAAkBe,EADa,EACbA,QAASC,EADI,EACJA,MAKnC,OAAMD,IAAYwE,EACT,oCAEHvE,EACG,oCAMP,6BACGE,OAAOC,KAAKoE,GAAYnE,KAAI,SAACoE,EAAWC,GAEvC,MAAkB,SAAdD,EAA+B,yBAAKzD,IAAK0D,GAAkBZ,IAAgBU,EAAWC,KAExE,yBAAdA,GAAsD,0BAAdA,GAC9B,iCAAdA,GAA8D,gCAAdA,EAG9C,kBAACE,EAAD,CACE3D,IAAK0D,EACLE,SAAUJ,EAAWC,GACrBA,UAAWA,IAMC,2BAAdA,GACc,kCAAdA,EAGE,kBAACI,EAAD,CACE7D,IAAK0D,EACLE,SAAUJ,EAAWC,KAKX,4BAAdA,GACc,mCAAdA,EAGE,kBAACK,EAAD,CACE9D,IAAK0D,EACLE,SAAUJ,EAAWC,KAKT,WAAdA,EAEA,kBAACM,EAAD,CAAY/D,IAAK0D,EAAiBM,KAAMR,EAAWS,OAAOD,OAIvD,SAMf,SAASL,EAAT,GAA0E,IAAxBC,EAAuB,EAAvBA,SAAUH,EAAa,EAAbA,UAEtD7C,EAASzB,OAAOC,KAAKwE,EAAShD,QAAQvB,KAAI,SAAC6E,GAC7C,MAAO,CACLpD,KAAM8C,EAAQ,OAAWM,GAAnB,KACNjG,KAAMkB,OAAOC,KAAKwE,EAAQ,OAAWM,GAAnB,MAAkC7E,KAAI,SAAC8E,GACvD,OAAOP,EAAQ,OAAWM,GAAnB,KAAiCC,UAK1CjD,EAAa/B,OAAOC,KAAKwE,EAAS1C,YAAY7B,KAAI,SAAC8E,GAAiB,OAAOP,EAAS1C,WAAWiD,MAKnG,OAAO,kBAAC,IAAD,CACLlD,OAAQwC,EAAW7C,OAAQA,EAC3BO,SAAWyC,aAAD,EAACA,EAAUzC,SAAUyC,EAASzC,QAAU,GAClDD,WAAYA,IAIhB,SAAS2C,EAAT,GAAuD,IAAbD,EAAY,EAAZA,SACpChD,EAASzB,OAAOC,KAAKwE,EAAShD,QAAQvB,KAAI,SAAC+E,GAC7C,MAAO,CAACR,EAAQ,OAAWQ,GAAS,GAAIR,EAAQ,OAAWQ,GAAS,OAGtE,OACE,kBAAC,IAAD,CACEnD,OAAQ,yBACRL,OAAQA,EACRO,SAAWyC,aAAD,EAACA,EAAUzC,SAAUyC,EAASzC,QAAU,KAUxD,SAAS2C,EAAT,GAAwD,IAAbF,EAAY,EAAZA,SACrChD,EAASzB,OAAOC,KAAKwE,EAAShD,QAAQvB,KAAI,SAAC6E,GAC7C,MAAO,CACLpD,KAAM8C,EAAQ,OAAWM,GAAnB,KACNjG,KAAMkB,OAAOC,KAAKwE,EAAQ,OAAWM,GAAnB,MAAkC7E,KAAI,SAAC8E,GACvD,MAAO,CACLP,EAAQ,OAAWM,GAAnB,KAAiCC,GAAY,GAC7CP,EAAQ,OAAWM,GAAnB,KAAiCC,GAAY,WAMrD,OACE,kBAAC,IAAD,CACElD,OAAQ,0BAERL,OAAQA,EACRO,SAAWyC,aAAD,EAACA,EAAUzC,SAAUyC,EAASzC,QAAU,KAKxD,SAAS4C,EAAT,GAA+B,IAATC,EAAQ,EAARA,KACpB,OACE,qCACGA,aAAA,EAAAA,EAAO,IAAK,kBAAC,IAAD,CAAO1G,IAAK0G,EAAK,KAAS,MACtCA,aAAA,EAAAA,EAAO,IAAK,kBAAC,IAAD,CAAO1G,IAAK0G,EAAK,KAAS,MACtCA,aAAA,EAAAA,EAAO,IAAK,kBAAC,IAAD,CAAO1G,IAAK0G,EAAK,KAAS,MACtCA,aAAA,EAAAA,EAAO,IAAK,kBAAC,IAAD,CAAO1G,IAAK0G,EAAK,KAAS,MACtCA,aAAA,EAAAA,EAAO,IAAK,kBAAC,IAAD,CAAO1G,IAAK0G,EAAK,KAAS","file":"component---src-pages-myworkbook-js-cfdb0c90b54a594d5ccf.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          © {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport { doFindValuesForArrayOfArraysTable } from \"../features/data/dataSlice\";\n\nimport Table from \"react-bootstrap/Table\";\n\n\n\nexport default function ShowXlTableWithPredefinedIndicators({ quiz, xlArray }) {\n  const { data: projectData, loading, error } = useFirebaseNode('openmediadata/' + quiz.answer);\n\n  if (!!loading || !projectData) { return <div>...</div> }\n  if (!!error) { return <div>:-(</div> }\n\n  let projectDataArray = Object.keys(projectData)\n    .map((item) => { return projectData[item] })\n\n  // console.log(quiz);\n  // console.log(projectDataArray);\n\n  let tableWithData = doFindValuesForArrayOfArraysTable(projectDataArray, xlArray);\n  // console.log(tableWithData);\n\n\n  return <Table striped bordered hover size=\"sm\">\n    <thead>\n      <tr>\n        {tableWithData[0].map((column, columnIndex) => (\n          <th key={columnIndex} className=\"text-center\">\n            {tableWithData[0][columnIndex]}\n          </th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {tableWithData.map((row, rowIndex) => {\n        if (rowIndex > 0) {\n          return <tr key={rowIndex}>\n            {row.map((column, columnIndex) => (\n              <td key={rowIndex + columnIndex}>\n               {row[columnIndex]} {/* <small>{row[columnIndex]}</small>  */}\n              </td>\n            ))}\n          </tr>\n        }\n      })}\n    </tbody>\n  </Table>\n}\n\n\n","import React from \"react\";\n\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport { doFindValuesForChartDataSeriesByIndicator } from \"../features/data/dataSlice\"; // selectUserDataItems,\n\nimport ApexEmptyOptionsChart from \"./ApexEmptyOptionsChart\";\n\nexport default function PrepareDataFromDictionaryForChart(props) {\n    const { data: projectdata, loading, error } = useFirebaseNode(\"openmediadata/\" + props.quiz.answer);\n\n    if (!!loading || !projectdata) {\n        return <div>...</div>;\n      }\n      if (!!error) {\n        return <div>:-(</div>;\n      }\n      let userData = Object.keys(projectdata).map((item) => {\n        return projectdata[item];\n      });\n\n    console.log(props.quiz);\n\n    let requiredcategories = Object.keys(props.quiz.content.requiredcategories).map(item => { return props.quiz.content.requiredcategories[item] })\n    let requiredseries = Object.keys(props.quiz.content.requiredseries).map(item => { return props.quiz.content.requiredseries[item] })\n\n    console.log(requiredcategories);\n    console.log(requiredseries);\n\n    let series = requiredseries.map(indicator => {\n        return {\n            name: indicator, data: doFindValuesForChartDataSeriesByIndicator(userData, indicator, requiredcategories)\n        }\n    })\n\n    return   <ApexEmptyOptionsChart\n    showAs={\"apexbarchartsgrouped\"}\n        categories={requiredcategories} // [\"2017\", \"2018\", \"2019\", \"2020\", \"2021\"]\n        series={series\n            // [{\n            //     name: 'Кэш фло',\n            //     data: [44, 55, 41, 64, 22, 43, 21],\n            // }, {\n            //     name: \"Дисконтированный кэш-фло\",\n            //     data: [44, 50, 33, 52, 13, 31, 14]\n            // }]\n        }\n        options={{ chart: { stacked: false } }}\n    />\n}","import React from \"react\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\nimport { useSelector } from \"react-redux\";\n\nimport Layout from \"../components/layout\";\n// import DeleteFireNodeButton from \"../components/DeleteFireNodeButton\";\n// import MarkDeleteFireNodeButton from \"../components/MarkDeleteFireNodeButton\";\n\nimport { selectApplication } from \"../features/application/applicationSlice\";\nimport { createProtoArray } from \"../features/spreadsheet/spreadsheetSlice\";\n\nimport ShowMedia from \"../mediatemplates/ShowMedia\";\nimport ShowXlTableArrayOfArrays from \"../mediatemplates/ShowXlTableArrayOfArrays\";\nimport ShowXlTableWithPredefinedIndicators from \"../mediatemplates/ShowXlTableWithPredefinedIndicators\";\nimport PrepareDataFromDictionaryForChart from \"../mediatemplates/PrepareDataFromDictionaryForChart\";\n\n\nimport Alert from \"react-bootstrap/Alert\";\n\nimport ReactHtmlParser from 'react-html-parser'; //, { processNodes, convertNodeToElement, htmlparser2 }\n\nexport default function MyWorkBook() {\n  // const [data, setData] = React.useState(null);\n  const email = useSelector(selectApplication).email;\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n  const avatarUrl = useSelector(selectApplication).avatarUrl;\n  const user = useSelector(selectApplication).user;\n\n  const { data: userPosts, loading, error } = useFirebaseNode(\n    \"usersCraft/\" + userEmail + \"/posts/\"\n  );\n\n  if (!!loading || !userPosts) {\n    return <Layout>...</Layout>;\n  }\n  if (!!error) {\n    return <Layout>:-(</Layout>;\n  }\n  let data = Object.keys(userPosts).map((item) => {\n    return userPosts[item];\n  });\n  const uniqueThemes = !!data ? [...new Set(data.map((item) => item.theme))] : []; // [ 'A', 'B']\n\n  return (\n    <Layout>\n      <div className=\"media border p-3 mb-5\">\n        <img\n          src={avatarUrl}\n          alt=\"\"\n          className=\"m-3\"\n          style={{\n            verticalAlign: \"middle\",\n            width: \"60px\",\n            height: \"60px\",\n            borderRadius: \"50%\",\n            filter: \"grayscale(100%)\",\n            objectFit: \"cover\",\n          }}\n        />\n        <div className=\"media-body\">\n          <h4>\n            {user}{\" \"}\n            <small>\n              <i>\n                {new Intl.DateTimeFormat(\"ru\", {\n                  weekday: \"short\",\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"numeric\",\n                  hour: \"numeric\",\n                  minute: \"numeric\",\n                }).format(new Date())}\n              </i>\n            </small>\n          </h4>\n          <p>Рабочая тетрадь</p>\n        </div>\n      </div>\n      <div>\n        {!!uniqueThemes &&\n          uniqueThemes.map((theme) => (\n            <div key={theme}>\n              <Alert variant=\"primary\">{theme}</Alert>\n              {data\n                .filter((quiz) => quiz.theme === theme)\n                .map((quiz) => {\n                  return (\n                    <div key={quiz.id}>\n                      <Alert variant=\"secondary\" className=\"mt-3\">\n                        {!!quiz.avatarUrl ? (\n                          <img\n                            src={quiz.avatarUrl}\n                            alt=\"\"\n                            className=\"m-2\"\n                            style={{\n                              verticalAlign: \"middle\",\n                              width: \"50px\",\n                              height: \"50px\",\n                              borderRadius: \"50%\",\n                              filter: \"grayscale(100%)\",\n                              objectFit: \"cover\",\n                            }}\n                          />\n                        ) : null}\n                        {quiz.title}\n                      </Alert>\n                      <div>\n                      {ReactHtmlParser(quiz.quizString +\n                          `<br>\n                          <span>Ответ: ${quiz.type === \"calculation\" ? quiz.comment : quiz.answer}</span>\n                          <span class=\"ml-5\">Дата/время: ${quiz.date}</span><br>\n                          ${!!quiz.user ? \"Решено: \" + quiz.user : \"\"}\n                          `)}  \n                      </div>      \n                       {/* <DeleteFireNodeButton nodeRef={\"usersCraft/\" + userEmail + \"/posts/\"} id={quiz.id}/> \n                      <MarkDeleteFireNodeButton nodeRef={\"usersCraft/\" + userEmail + \"/posts/\"} id={quiz.id}/> */}\n                      \n                    {quiz?.htmlfeedback && <div>{ReactHtmlParser(quiz.htmlfeedback)}</div>}\n\n                      {quiz.type === \"spreadsheet\" && !!quiz?.content && <ShowXlTableArrayOfArrays xlArray={createProtoArray(quiz.content, 0, 0)}/>}\n\n                      {quiz.type === \"calculation\" && <ShowXlTableWithPredefinedIndicators quiz={quiz} xlArray={createProtoArray(quiz.content, 0, 0)}/>}\n\n                      {quiz.type === \"chartwithpredefineddictionarydata\" && <PrepareDataFromDictionaryForChart quiz={quiz}/>}\n\n                      \n\n                      {quiz.type === \"media\" ? (\n                        <ShowMedia\n                          datafirenode={\n                            \"/usersCraft/\" + userEmail + \"/data/\" + quiz.content\n                          }\n                        />\n                      ) : null}\n                    </div>\n                  );\n                })}\n            </div>\n          ))}\n      </div>\n    </Layout>\n  );\n}\n\n","import React from \"react\";\n\nimport ReactHtmlParser from 'react-html-parser'\n\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\n// import ScatterQuotesApexChart from \"./ScatterQuotesApexChart\";\n// import DatalineQuotesApexChart from \"./DatalineQuotesApexChart\";\nimport ApexEmptyOptionsChart from \"./ApexEmptyOptionsChart\";\n\nimport Image from \"react-bootstrap/Image\";\n\nexport default function ShowMedia(props) {\n  const { data: mediaItems, loading, error } = useFirebaseNode(\n    props.datafirenode\n  );\n  //  console.log(props.content, mediaItems);\n\n  if (!!loading || !mediaItems) {\n    return <div>...</div>;\n  }\n  if (!!error) {\n    return <div>:-)</div>;\n  }\n\n  //  console.log(mediaItems);\n\n  return (\n    <div>\n      {Object.keys(mediaItems).map((mediaItem, mediaItemsIndex) => {\n\n        if (mediaItem === \"html\") { return <div key={mediaItemsIndex}>{ReactHtmlParser(mediaItems[mediaItem])}</div> }\n\n        if (mediaItem === \"datetimebarapexchart\" || mediaItem === \"datetimelineapexchart\" ||\n        mediaItem === \"arraycategorieslineapexchart\" || mediaItem === \"arraycategoriesbarapexchart\"\n      ) {\n        return (\n          <GetSeriesCategoriesOptionsForApexChart\n            key={mediaItemsIndex}\n            firenode={mediaItems[mediaItem]}\n            mediaItem={mediaItem}\n          />\n        );\n      }\n\n        if (\n          mediaItem === \"scatterquotesapexchart\" ||\n          mediaItem === \"scatterquotesapexchartoptions\"\n        ) {\n          return (\n            <GetReadyScatterQuotesApexChart\n              key={mediaItemsIndex}\n              firenode={mediaItems[mediaItem]}\n            />\n          );\n        }\n        if (\n          mediaItem === \"datalinequotesapexchart\" ||\n          mediaItem === \"datalinequotesapexchartoptions\"\n        ) {\n          return (\n            <GetReadyDatalineQuotesApexChart\n              key={mediaItemsIndex}\n              firenode={mediaItems[mediaItem]}\n            />\n          );\n        }\n\n        if (mediaItem === \"images\") {\n          return (\n            <ShowImages key={mediaItemsIndex} urls={mediaItems.images.urls} />\n          );\n        }\n\n        return null;\n      })}\n    </div>\n  );\n}\n\nfunction GetSeriesCategoriesOptionsForApexChart({ firenode, mediaItem }) {\n\n  let series = Object.keys(firenode.series).map((line) => {\n    return {\n      name: firenode[\"series\"][line][\"name\"],\n      data: Object.keys(firenode[\"series\"][line][\"data\"]).map((line_point) => {\n        return firenode[\"series\"][line][\"data\"][line_point]\n      }),\n    };\n  });\n\n  let categories = Object.keys(firenode.categories).map((line_point) => { return firenode.categories[line_point] });\n\n//   console.log(series);\n//   console.log(categories);\n\n  return <ApexEmptyOptionsChart\n    showAs={mediaItem} series={series}\n    options={!!firenode?.options ? firenode.options : {}}\n    categories={categories}\n  />\n}\n\nfunction GetReadyScatterQuotesApexChart({ firenode }) {\n  let series = Object.keys(firenode.series).map((scatter) => {\n    return [firenode[\"series\"][scatter][0], firenode[\"series\"][scatter][1]];\n  });\n  //       console.log(series)\n  return (\n    <ApexEmptyOptionsChart\n      showAs={\"scatterquotesapexchart\"}\n      series={series}\n      options={!!firenode?.options ? firenode.options : {}}\n    />\n  );\n  // <ScatterQuotesApexChart series={series} options={\n  //   !!firenode?.options\n  //     ? firenode.options\n  //     : {}\n  // } />\n}\n\nfunction GetReadyDatalineQuotesApexChart({ firenode }) {\n  let series = Object.keys(firenode.series).map((line) => {\n    return {\n      name: firenode[\"series\"][line][\"name\"],\n      data: Object.keys(firenode[\"series\"][line][\"data\"]).map((line_point) => {\n        return [\n          firenode[\"series\"][line][\"data\"][line_point][0],\n          firenode[\"series\"][line][\"data\"][line_point][1],\n        ];\n      }),\n    };\n  });\n  //    console.log(series);\n  return (\n    <ApexEmptyOptionsChart\n      showAs={\"datalinequotesapexchart\"}\n      // <DatalineQuotesApexChart\n      series={series}\n      options={!!firenode?.options ? firenode.options : {}}\n    />\n  );\n}\n\nfunction ShowImages({ urls }) {\n  return (\n    <>\n      {urls?.[0] ? <Image src={urls[0]} /> : null}\n      {urls?.[1] ? <Image src={urls[1]} /> : null}\n      {urls?.[2] ? <Image src={urls[2]} /> : null}\n      {urls?.[3] ? <Image src={urls[3]} /> : null}\n      {urls?.[4] ? <Image src={urls[4]} /> : null}\n    </>\n  );\n}\n"],"sourceRoot":""}