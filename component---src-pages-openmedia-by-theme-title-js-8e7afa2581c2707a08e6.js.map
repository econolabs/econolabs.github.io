{"version":3,"sources":["webpack:///./src/pages/openmedia_by_theme_title.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/mediatemplates/ShowMedia.js"],"names":["OpenMediaByTheme","useFirebaseNode","usersCraft","data","loading","error","allposts","Object","keys","forEach","openmedia_key","push","uniqueThemes","Set","map","item","theme","index","ResultsByTheme","key","theme_posts","filter","props","React","useState","open","setOpen","uniqueTitles","title","className","Header","Body","onClick","aria-controls","aria-expanded","variant","length","in","id","ResultsByTitle","title_posts","openTitle","setOpenTitle","post","CollapsablePost","user","htmlfeedback","ReactHtmlParser","comment","type","datafirenode","content","siteTitle","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","objectFit","defaultProps","Layout","children","site","siteMetadata","maxWidth","padding","Date","getFullYear","author","ShowMedia","mediaItems","mediaItem","mediaItemsIndex","GetSeriesCategoriesOptionsForApexChart","firenode","GetReadyScatterQuotesApexChart","GetReadyDatalineQuotesApexChart","ShowImages","urls","images","series","line","name","line_point","categories","showAs","options","scatter"],"mappings":"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","file":"component---src-pages-openmedia-by-theme-title-js-8e7afa2581c2707a08e6.js","sourcesContent":["import React from \"react\";\nimport ReactHtmlParser from 'react-html-parser'; //, { processNodes, convertNodeToElement, htmlparser2 }\n\nimport ShowMedia from \"../mediatemplates/ShowMedia\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport Layout from \"../components/layout\"\nimport Button from 'react-bootstrap/Button'\nimport Collapse from 'react-bootstrap/Collapse'\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\n\nexport default function OpenMediaByTheme() {\n    const { data: usersCraft, loading, error } = useFirebaseNode('openmedia');\n\n    if (!!loading || !usersCraft) { return <Layout><div>...</div></Layout> }\n\n    if (!!error) { return <Layout><div>:-(</div></Layout> }\n\n    let allposts = [];\n    Object.keys(usersCraft).forEach(openmedia_key => { allposts.push(usersCraft[openmedia_key]) });\n\n    //  console.log(allposts);\n\n    const uniqueThemes = !!allposts ? [...new Set(allposts.map(item => item.theme))] : []; // [ 'A', 'B']\n\n    // console.log(uniqueThemes);\n\n    return <Layout>\n        {uniqueThemes.map((theme, index) => <ResultsByTheme key={theme} theme={theme} index={index} theme_posts={allposts.filter(item => item.theme === theme)} />)}\n    </Layout>\n}\n\nfunction ResultsByTheme(props) {\n    const [open, setOpen] = React.useState(false);\n\n    const uniqueTitles = !!props.theme_posts ? [...new Set(props.theme_posts.map(item => item.title))] : [];\n    return (\n        <Card className=\"m-3\">\n            <Card.Header>{props.theme}</Card.Header>\n            <Card.Body>\n                <Button\n                    onClick={() => setOpen(!open)}\n                    aria-controls={\"collapse-theme\" + props.index}\n                    aria-expanded={open}\n                    variant=\"outline-secondary\"\n                    className=\"m-2\"\n                >\n                    {props.theme} <Badge variant=\"secondary\">{props.theme_posts.length}</Badge>\n                </Button>\n                <Collapse in={open}>\n                    <div id={\"collapse-theme\" + props.index}>\n                        {uniqueTitles.map((title, index) => <ResultsByTitle index={index} title={title} title_posts={props.theme_posts.filter(item => item.title === title)} />)}\n                    </div>\n                </Collapse>\n            </Card.Body>\n        </Card>\n\n    );\n}\n\nfunction ResultsByTitle(props) {\n    const [openTitle, setOpenTitle] = React.useState(false);\n\n    return <div key={props.title}>\n        <Button\n            onClick={() => setOpenTitle(!openTitle)}\n            aria-controls={\"collapse-theme\" + props.index}\n            aria-expanded={openTitle}\n            variant=\"outline-secondary\"\n            className=\"m-1\"\n        >\n            {props.title} <Badge variant=\"secondary\">{props.title_posts.length}</Badge>\n        </Button>\n\n        <Collapse in={openTitle}>\n            <div id={\"collapse-theme\" + props.index}>\n                {props.title_posts.map(post => <CollapsablePost post={post} />)}\n            </div>\n        </Collapse>\n    </div>\n}\n\nfunction CollapsablePost(props) {\n    const [open, setOpen] = React.useState(false);\n\n    return <Card className=\"mt-1\">\n        <Card.Header>{props.post.user}</Card.Header>\n        <Card.Body>\n            <Button\n                onClick={() => setOpen(!open)}\n                aria-controls={\"collapse-post\" + props.post.id}\n                aria-expanded={open}\n                variant=\"outline-secondary\"\n            >\n                {open ? 'Свернуть' : 'Раскрыть'}\n            </Button>\n            <Collapse in={open}>\n                <div id={\"collapse-post\" + props.post.id}>\n                    {!!props.post?.htmlfeedback ? ReactHtmlParser(props.post.htmlfeedback) : props.post?.comment}\n                    {props.post.type === \"media\" ? (\n                        <ShowMedia datafirenode={\"/openmediadata/\" + props.post.content} />) : null}\n                </div>\n            </Collapse>\n        </Card.Body>\n    </Card>\n\n}","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          © {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\n\nimport ReactHtmlParser from 'react-html-parser'\n\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\n// import ScatterQuotesApexChart from \"./ScatterQuotesApexChart\";\n// import DatalineQuotesApexChart from \"./DatalineQuotesApexChart\";\nimport ApexEmptyOptionsChart from \"./ApexEmptyOptionsChart\";\n\nimport Image from \"react-bootstrap/Image\";\n\nexport default function ShowMedia(props) {\n  const { data: mediaItems, loading, error } = useFirebaseNode(\n    props.datafirenode\n  );\n  //  console.log(props.content, mediaItems);\n\n  if (!!loading || !mediaItems) {\n    return <div>...</div>;\n  }\n  if (!!error) {\n    return <div>:-)</div>;\n  }\n\n  //  console.log(mediaItems);\n\n  return (\n    <div>\n      {Object.keys(mediaItems).map((mediaItem, mediaItemsIndex) => {\n\n        if (mediaItem === \"html\") { return <div key={mediaItemsIndex}>{ReactHtmlParser(mediaItems[mediaItem])}</div> }\n\n        if (mediaItem === \"datetimebarapexchart\" || mediaItem === \"datetimelineapexchart\" ||\n        mediaItem === \"arraycategorieslineapexchart\" || mediaItem === \"arraycategoriesbarapexchart\"\n      ) {\n        return (\n          <GetSeriesCategoriesOptionsForApexChart\n            key={mediaItemsIndex}\n            firenode={mediaItems[mediaItem]}\n            mediaItem={mediaItem}\n          />\n        );\n      }\n\n        if (\n          mediaItem === \"scatterquotesapexchart\" ||\n          mediaItem === \"scatterquotesapexchartoptions\" || \n          mediaItem === \"scatterapexchart\"\n        ) {\n          return (\n            <GetReadyScatterQuotesApexChart\n              key={mediaItemsIndex}\n              firenode={mediaItems[mediaItem]}\n            />\n          );\n        }\n        if (\n          mediaItem === \"datalinequotesapexchart\" ||\n          mediaItem === \"datalinequotesapexchartoptions\" ||\n        mediaItem ===\"datetimeareanocategoriesapexchart\"\n        ) {\n          return (\n            <GetReadyDatalineQuotesApexChart\n              key={mediaItemsIndex}\n              firenode={mediaItems[mediaItem]}\n            />\n          );\n        }\n\n        if (mediaItem === \"images\") {\n          return (\n            <ShowImages key={mediaItemsIndex} urls={mediaItems.images.urls} />\n          );\n        }\n\n        return null;\n      })}\n    </div>\n  );\n}\n\nfunction GetSeriesCategoriesOptionsForApexChart({ firenode, mediaItem }) {\n\n  let series = Object.keys(firenode.series).map((line) => {\n    return {\n      name: firenode[\"series\"][line][\"name\"],\n      data: Object.keys(firenode[\"series\"][line][\"data\"]).map((line_point) => {\n        return firenode[\"series\"][line][\"data\"][line_point]\n      }),\n    };\n  });\n\n  let categories = Object.keys(firenode.categories).map((line_point) => { return firenode.categories[line_point] });\n\n//   console.log(series);\n//   console.log(categories);\n\n  return <ApexEmptyOptionsChart\n    showAs={mediaItem} series={series}\n    options={!!firenode?.options ? firenode.options : {}}\n    categories={categories}\n  />\n}\n\nfunction GetReadyScatterQuotesApexChart({ firenode }) {\n  let series = Object.keys(firenode.series).map((scatter) => {\n    return [firenode[\"series\"][scatter][0], firenode[\"series\"][scatter][1]];\n  });\n  //       console.log(series)\n  return (\n    <ApexEmptyOptionsChart\n      showAs={\"scatterquotesapexchart\"}\n      series={series}\n      options={!!firenode?.options ? firenode.options : {}}\n    />\n  );\n  // <ScatterQuotesApexChart series={series} options={\n  //   !!firenode?.options\n  //     ? firenode.options\n  //     : {}\n  // } />\n}\n\nfunction GetReadyDatalineQuotesApexChart({ firenode }) {\n  let series = Object.keys(firenode.series).map((line) => {\n    return {\n      name: firenode[\"series\"][line][\"name\"],\n      data: Object.keys(firenode[\"series\"][line][\"data\"]).map((line_point) => {\n        return [\n          firenode[\"series\"][line][\"data\"][line_point][0],\n          firenode[\"series\"][line][\"data\"][line_point][1],\n        ];\n      }),\n    };\n  });\n  //    console.log(series);\n  return (\n    <ApexEmptyOptionsChart\n      showAs={\"datalinequotesapexchart\"}\n      // <DatalineQuotesApexChart\n      series={series}\n      options={!!firenode?.options ? firenode.options : {}}\n    />\n  );\n}\n\nfunction ShowImages({ urls }) {\n  return (\n    <>\n      {urls?.[0] ? <Image src={urls[0]} /> : null}\n      {urls?.[1] ? <Image src={urls[1]} /> : null}\n      {urls?.[2] ? <Image src={urls[2]} /> : null}\n      {urls?.[3] ? <Image src={urls[3]} /> : null}\n      {urls?.[4] ? <Image src={urls[4]} /> : null}\n    </>\n  );\n}\n"],"sourceRoot":""}