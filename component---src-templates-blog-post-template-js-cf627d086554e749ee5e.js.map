{"version":3,"sources":["webpack:///./src/templates/blogPostTemplate.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["data","mdx","frontmatter","body","fields","className","title","date","slug","RenderSmoothImage","src","featuredImage","alt","query","React","useState","imageLoaded","setImageLoaded","style","visibility","width","height","borderStyle","borderColor","borderWidth","onLoad","MDXRenderer","require","module","Header","siteTitle","margin","to","color","textDecoration","href","verticalAlign","borderRadius","filter","objectFit","defaultProps","Layout","children","site","siteMetadata","maxWidth","padding","Date","getFullYear","author","useMDXComponents","useMDXScope","scope","components","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"8FACA,wGAMe,sBAAe,IAAD,IAAXA,KAC2BC,IAAnCC,EADmB,EACnBA,YAAaC,EADM,EACNA,KAAMC,EADA,EACAA,OAC3B,OACE,kBAAC,IAAD,KACE,wBAAIC,UAAU,kBAAkBH,EAAYI,OAC5C,2BAAIJ,EAAYK,MAChB,2BAAI,sBAAwBH,EAAOI,MAEnC,kBAACC,EAAD,CAAmBC,IAAKR,EAAYS,cAAeC,IAAKV,EAAYI,QACpE,kBAAC,cAAD,KAAcH,KAKb,IAAMU,EAAK,aAgBlB,SAASJ,EAAT,GAA0C,IAAbC,EAAY,EAAZA,IAAKE,EAAO,EAAPA,IAAO,EACDE,IAAMC,UAAS,GAA9CC,EADgC,KACnBC,EADmB,KAGvC,OACE,6BACGD,EAAc,yBACbN,IAAKA,EACLE,IAAKA,EACLM,MAAO,CAAEC,WAAY,aAErB,yBAAKd,UAAU,UAAUa,MAAO,CAAEE,MAAO,QAASC,OAAQ,QAASC,YAAa,QAASC,YAAa,YAAaC,YAAa,QAC9H,yBACEd,IAAKA,EACLE,IAAKA,EACLM,MAAO,CAAEC,WAAY,UAErBM,OAAQ,kBAAMR,GAAe,U,gDC/CzC,IAAMS,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,mFCLTG,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,yBAAKzB,UAAU,kCAAf,IAEE,wBAAIa,MAAO,CAAEa,OAAQ,IACnB,kBAAC,OAAD,CAAMC,GAAG,IAAId,MAAO,CAAEe,MAAM,OAASC,eAAe,SAAaJ,IAEnE,uBAAGzB,UAAU,eAAe8B,KAAK,8BAC/B,yBACEzB,IAAI,4EAGJE,IAAI,GACJM,MAAO,CACLkB,cAAe,SACfhB,MAAO,OACPC,OAAQ,OACRgB,aAAc,MACdC,OAAQ,kBACRC,UAAW,cAqCrBV,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCXAY,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACV1C,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQ8B,UAAW9B,EAAK2C,KAAKC,aAAatC,QAC1C,yBACEY,MAAO,CACLa,OAAO,SACPc,SAAU,IACVC,QAAS,SAGX,8BAAOJ,GACP,gCACE,0BAAMxB,MAAO,CAACe,MAAO,aAArB,MACG,IAAIc,MAAOC,cADd,KAC+B,IAC/B,uBAAGb,KAAK,6BAA6BjB,MAAO,CAACe,MAAO,aAAcjC,EAAK2C,KAAKC,aAAaK,c,4sECxCnG,IAAMnC,EAAQa,EAAd,Q,EACkCA,EAAQ,QAAlCuB,E,EAAAA,iBAAkBjD,E,EAAAA,IAClBkD,EAAgBxB,EAAQ,QAAxBwB,YAERvB,UAAiB,SAAqB,GAKlC,IAJFwB,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAX,EAEC,EAFDA,SACGY,E,oIACF,sCACKC,EAAgBL,EAAtB,GACMM,EAAWL,EAFhB,GAKKM,EAAM3C,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAM4C,EAAS,GAGb5C,MAHa,EAIbb,OAJF,GAQM0D,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACrB,EAlBJ,IAoBA,OAAO5B,EAAA,mBAA2BuC,WAAYE,GAA9C,M","file":"component---src-templates-blog-post-template-js-cf627d086554e749ee5e.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React from 'react';\nimport Layout from '../components/layout';\n//import Img from 'gatsby-image';\nimport './blogPostTemplate.css';\n\nexport default ({ data }) => {\n  const { frontmatter, body, fields } = data.mdx;\n  return (\n    <Layout>\n      <h1 className=\"text-secondary\">{frontmatter.title}</h1>\n      <p>{frontmatter.date}</p>\n      <p>{'econolabs.github.io' + fields.slug}</p>\n      {/* <img src={frontmatter.featuredImage}/> */}\n      <RenderSmoothImage src={frontmatter.featuredImage} alt={frontmatter.title} />\n      <MDXRenderer>{body}</MDXRenderer>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostsBySlug($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        title\n        date(formatString: \"YYYY MMMM Do\")\n        featuredImage \n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n\nfunction RenderSmoothImage({ src, alt }) {\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n\n  return (\n    <div>\n      {imageLoaded ? <img\n        src={src}\n        alt={alt}\n        style={{ visibility: 'visible' }}\n      /> :\n        <div className=\"fade-in\" style={{ width: '640px', height: '400px', borderStyle: 'solid', borderColor: 'lightgray', borderWidth: '1px' }} >\n          <img\n            src={src}\n            alt={alt}\n            style={{ visibility: 'hidden' }}\n            // className={imageLoaded ? 'visible' : 'hidden'}\n            onLoad={() => setImageLoaded(true)}\n          />\n        </div>\n      }\n    </div>\n  )\n}","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          Â© {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}