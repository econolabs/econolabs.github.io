{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Badge.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/budgetingformeditor.js"],"names":["Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","Header","siteTitle","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","Budgeting"],"mappings":"6FAAA,kFAQIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAAYL,EAAKK,UACjBC,EAAUN,EAAKO,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CG,EAAQ,YAA8BT,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFU,EAAS,YAAmBR,EAAU,SAC1C,OAAoB,IAAMS,cAAcH,EAAW,YAAS,CAC1DP,IAAKA,GACJQ,EAAO,CACRJ,UAAW,IAAWA,EAAWK,EAAQN,GAAQM,EAAS,QAASP,GAAWO,EAAS,IAAMP,SAGjGL,EAAMc,YAAc,QACpBd,EAAMe,aApBa,CACjBT,MAAM,GAoBO,O,4GCtBTU,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,yBAAKV,UAAU,kCAAf,IAEE,wBAAIW,MAAO,CAAEC,OAAQ,IACnB,kBAAC,OAAD,CAAMC,GAAG,IAAIF,MAAO,CAAEG,MAAM,OAASC,eAAe,SAAaL,IAEnE,uBAAGV,UAAU,eAAegB,KAAK,8BAC/B,yBACEC,IAAI,4EAGJC,IAAI,GACJP,MAAO,CACLQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,kBACRC,UAAW,cAqCrBf,EAAOD,aAAe,CACpBE,UAAU,IAGGD,Q,UCXAgB,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQjB,UAAWiB,EAAKC,KAAKC,aAAaC,QAC1C,yBACEnB,MAAO,CACLC,OAAO,SACPmB,SAAU,IACVC,QAAS,SAGX,8BAAON,GACP,gCACE,0BAAMf,MAAO,CAACG,MAAO,aAArB,MACG,IAAImB,MAAOC,cADd,KAC+B,IAC/B,uBAAGlB,KAAK,6BAA6BL,MAAO,CAACG,MAAO,aAAca,EAAKC,KAAKC,aAAaM,c,kCCxCnG,kJAyDe,SAASC,IACpB,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,S","file":"component---src-pages-budgetingformeditor-js-5117c5491600462b6d1c.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          © {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\n\nimport TemplateTableEditor from \"../components/TemplateTableEditor\";\n\nimport Layout from \"../components/layout\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Badge from \"react-bootstrap/Badge\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport dictionary_ru_project_expert from \"../laboratory/dictionary_ru_project_expert\";\n\n\n\n\n// let report_data = [\n//     { ru_title: \"Валовый объем продаж\", value: 1000 },    \n//     { ru_title: \"Сдельная зарплата\", value: 400 },\n//     { ru_title: \"Материалы и комплектующие\", value: 300 },\n//     { ru_title: \"Амортизация\", value: 120 }\n    \n// ];\n\n// let report_fields = [\n//     \"Чистый объем продаж\",\n//     \"Суммарные прямые издержки\",\n//     \"Валовая прибыль\",\n//     \"Налогооблагаемая прибыль\"\n// ];\n\n// function look_down(array) {\n//     let result = 0;\n//     array.map(item => {\n//         result = !!item?.add ?\n//             result + calculatedValue(item.ru_title) :\n//             result - calculatedValue(item.ru_title)\n//     }\n//     )\n//     return result\n// }\n\n// function calculatedValue(field) {\n//     let items = dictionary_ru_project_expert.filter(item => item.ru_title === field);\n//     let dependent = !!items && items[0]?.dependent;\n\n//     if (!!dependent && dependent.length > 0) {\n//         return look_down(dependent);\n//     } else {\n//         let valueArray = report_data.filter(item => item.ru_title === field);\n//         return valueArray.length > 0 ? valueArray[0].value : 0; //look_down(props.ru_title)\n//     }\n// }\n\nexport default function Budgeting() {\n    return <Layout>\n        <TemplateTableEditor />\n        {/* <Container>\n            {report_fields.map(field =>\n                <Row key={field}>\n                    <Col>{field}</Col>\n                    <Col>{calculatedValue(field)}</Col>\n                </Row>\n            )}\n        </Container> */}\n        {/* {dictionary_ru_project_expert.map(item => <Indicator key={item.ru_title} indicator={item} />)} */}\n    </Layout>\n}\n\n\n\nfunction Indicator(props) {\n    const [open, setOpen] = React.useState(false);\n\n    if (props?.indicator?.dependent && props.indicator.dependent.length > 0) {\n        return <Container>\n            <Button\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n                variant=\"outline-secondary\"\n            >\n                {props.indicator.ru_title} <Badge variant=\"secondary\">{props.indicator.dependent.length}</Badge>\n            </Button>\n            <Collapse in={open} className=\"ml-3\">\n                <div id=\"example-collapse-text\">\n                    {props.indicator.dependent.map(dependentItem => {\n                        let show_indicator = dictionary_ru_project_expert.filter(item => item.ru_title === dependentItem)[0];\n                        // console.log(dependentItem);\n                        // console.log(show_indicator);\n                        // console.log('_________________');\n                        return <Indicator key={props.indicator.ru_title + '___' + dependentItem}\n                            indicator={show_indicator}\n                        />\n                        // <div key={props.indicator.ru_title + '___' + dependentItem}>{dependentItem}</div>\n                    }\n                    )}\n                </div>\n            </Collapse>\n        </Container>\n    }\n\n    return <div>{props.indicator.ru_title}</div>\n} "],"sourceRoot":""}