{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Badge.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/TemplateTableEditor.js","webpack:///./src/pages/budgeting.js","webpack:///./src/components/DropDownInputGroup.js"],"names":["Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","Header","siteTitle","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","generateArrayOfYears","current","max","years","i","push","createProtoObjectFromTable","rows","columns","protoObject","length","toString","alphabet","TemplateTableEditor","email","useSelector","selectApplication","user","avatarUrl","React","useState","setRows","setColumns","reportIndicatorsDictionary","setReportIndicatorsDictionary","comment","formDataObject","setFormDataObject","editPostTitleComment","doEditPostTitleComment","savedSuccessfully","DoSavedSuccessfully","reportIndicators","dictionary_ru_project_expert","map","item","ru_title","Container","DropDownInputGroup","items","buttonTitle","setSelectedItem","newRow","newCol","Table","striped","bordered","hover","key","row","PostFormHook","setFormObject","objectWithNamesValues","Card","Body","Title","Text","Button","onClick","userEmail","replace","idPost","firebase","database","child","postObject","id","theme","answer","type","content","quizString","deleted","date","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","console","log","updates","update","then","savePost","modalForm","name","useForm","defaultValues","register","handleSubmit","reset","watch","errors","useEffect","onSubmit","InputGroup","size","Prepend","FormControl","report_data","value","report_fields","calculatedValue","field","dependent","result","add","valueArray","Budgeting","Row","Col","chosenItem","setChosenItem","setValue","placeholder","aria-label","aria-describedby","Append","autoFocus","onChange","e","target","includes","Item","md"],"mappings":"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","file":"component---src-pages-budgeting-js-f69585c90e7eda8c07e6.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          © {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"gatsby-plugin-firebase\";\n\nimport { useForm } from \"react-hook-form\";\nimport { selectApplication } from \"../features/application/applicationSlice\";\n\nimport DropDownInputGroup from \"./DropDownInputGroup\";\n\nimport dictionary_ru_project_expert from \"../laboratory/dictionary_ru_project_expert\";\nimport { alphabet } from \"../features/spreadsheet/AlphabetRow\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction generateArrayOfYears() {\n    let current = new Date().getFullYear()\n    let max = current + 10;\n    let years = []\n\n    for (var i = current - 10; i <= max; i++) {\n        years.push(i)\n    }\n    return years\n}\n\n\nfunction createProtoObjectFromTable(rows, columns) {\n    let protoObject = {};\n\n    for (var i = 0; i < rows.length; i++) {\n        let num = i + 2\n        protoObject[\"A\" + num.toString()] = rows[i];\n    }\n\n    for (var i = 0; i < columns.length; i++) {\n        protoObject[alphabet[i + 1] + \"1\"] = columns[i] + \"\";\n    }\n\n    return protoObject;\n}\n\nexport default function TemplateTableEditor() {\n    const email = useSelector(selectApplication).email;\n    const user = useSelector(selectApplication).user;\n    const avatarUrl = useSelector(selectApplication)?.avatarUrl;\n\n    const [rows, setRows] = React.useState([]);\n    const [columns, setColumns] = React.useState([]);\n    const [reportIndicatorsDictionary, setReportIndicatorsDictionary] = React.useState(null);\n\n    const [formDataObject, setFormDataObject] = React.useState({\n        title: \"\",\n        comment: \"\",\n    });\n    const [editPostTitleComment, doEditPostTitleComment] = React.useState(true);\n    const [savedSuccessfully, DoSavedSuccessfully] = React.useState(false);\n\n    function setFormObject(objectWithNamesValues) {\n        doEditPostTitleComment(false);\n        setFormDataObject(objectWithNamesValues);\n    }\n\n    function addNewRow(newRow) {\n        setRows(rows => [...rows, newRow])\n    }\n\n    function addNewColumn(newCol) {\n        setColumns(columns => [...columns, newCol])\n    }\n\n    function savePost() {\n        if (email.length > 6) {\n            let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n            let idPost = firebase.database().ref(userEmail).child('posts').push().key;\n\n            let postObject = {\n                id: idPost,\n                title: formDataObject.title.length > 2 ? formDataObject.title : 'Расчет',\n                theme: reportIndicatorsDictionary,\n                answer: \"\",\n                comment: formDataObject.comment + \" (\" + reportIndicatorsDictionary + \")\", //Тема\n                type: \"calculation\",\n                content: createProtoObjectFromTable(rows, columns),\n                quizString: createProtoObjectFromTable(rows, columns),\n                deleted: false,\n                email: email,\n                user: user,\n                avatarUrl: !!avatarUrl ? avatarUrl : null,\n                date: new Intl.DateTimeFormat(\"ru\", {\n                    weekday: \"short\",\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"numeric\",\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                }).format(new Date()), //Date().toJSON()\n            };\n\n            console.log(postObject);\n            //    dispatch(createPost(postObject));\n            var updates = {};\n            //updates['/usersCraft/' + userEmail + '/posts/' + idPost] = postObject;\n            updates['/usersTemplates/posts/' + idPost] = postObject;\n\n            return firebase.database().ref().update(updates).then(() => DoSavedSuccessfully(true));\n\n        }\n    }\n\n    let reportIndicators = reportIndicatorsDictionary === \"Project Expert\" ? dictionary_ru_project_expert.map(item => item.ru_title) : [];\n\n    return <Container>\n\n        <DropDownInputGroup\n            items={[\"Project Expert\"]}\n            title={\"Стандарт отчетности\"}\n            buttonTitle={\"Выбрать\"}\n            setSelectedItem={setReportIndicatorsDictionary}\n        />\n\n        <DropDownInputGroup\n            items={reportIndicators}\n            title={\"Новая строка\"}\n            buttonTitle={\"Добавить\"}\n            setSelectedItem={addNewRow}\n        />\n\n        <DropDownInputGroup\n            items={generateArrayOfYears()}\n            title={\"Новая дата (период)\"}\n            buttonTitle={\"Добавить\"}\n            setSelectedItem={addNewColumn}\n        />\n        <Container> {(!!rows && rows.length > 0) || (!!columns && columns.length > 0) ?\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th><span className=\"ml-1\">Показатель</span></th>\n                        {columns.map(item => <th key={item}>{item}</th>)}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row =>\n                        <tr key={row}>\n                            <td><span className=\"ml-1\">{row}</span></td>\n                            {columns.map(item => <td key={item}>...</td>)}\n                        </tr>)}\n                </tbody>\n            </Table>\n            : null}\n        </Container>\n\n        {editPostTitleComment && (!!rows && rows.length > 0) && (!!columns && columns.length > 0) ?\n            <PostFormHook title={''} setFormObject={setFormObject} /> :\n            <Card>\n                <Card.Header>Шаблон</Card.Header>\n                <Card.Body>\n                    <Card.Title>{formDataObject.title}</Card.Title>\n                    <Card.Text>\n                        {formDataObject.comment}\n                    </Card.Text>\n                    {savedSuccessfully ? \"Сохранено\" :\n                        <Button\n                            variant=\"outline-secondary\"\n                            onClick={() => savePost()}>\n                            Сохранить шаблон\n                     </Button>\n                    }\n                </Card.Body>\n            </Card>\n        }\n\n    </Container>\n}\n\nlet modalForm = [\n    { name: \"title\", title: \"Название\", type: \"text\" },\n    { name: \"comment\", title: \"Комментарий\", type: \"textarea\" }\n];\n\nfunction PostFormHook(props) {\n    const { register, handleSubmit, reset, watch, errors } = useForm({\n        defaultValues: { title: props.title }\n    });\n\n    React.useEffect(() => { reset({ title: props.title }) }, [props.title]);\n\n    return <form onSubmit={handleSubmit(props.setFormObject)}>\n        {modalForm.map(item =>\n            <InputGroup className=\"mb-3\" size=\"sm\" key={item.name}>\n                <InputGroup.Prepend><InputGroup.Text style={{ width: '8rem' }}>{item.title}</InputGroup.Text></InputGroup.Prepend>\n                <FormControl\n                    key={item.name}\n                    name={item.name}\n                    type={item.type}\n                    ref={register}\n                    as={item.type === \"textarea\" ? \"textarea\" : \"input\"}\n                />\n            </InputGroup>\n        )}\n        <Button variant=\"outline-secondary\" type=\"submit\" size=\"sm\">Сохранить</Button>\n    </form>\n}\n\n\n\n\n","import React from \"react\";\n\nimport TemplateTableEditor from \"../components/TemplateTableEditor\";\n\nimport Layout from \"../components/layout\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Badge from \"react-bootstrap/Badge\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport dictionary_ru_project_expert from \"../laboratory/dictionary_ru_project_expert\";\n\n\nlet report_data = [\n    { ru_title: \"Валовый объем продаж\", value: 1000 },    \n    { ru_title: \"Сдельная зарплата\", value: 400 },\n    { ru_title: \"Материалы и комплектующие\", value: 300 },\n    { ru_title: \"Амортизация\", value: 120 }\n    \n];\n\nlet report_fields = [\n    \"Чистый объем продаж\",\n    \"Суммарные прямые издержки\",\n    \"Валовая прибыль\",\n    \"Налогооблагаемая прибыль\"\n];\n\nfunction look_down(array) {\n    let result = 0;\n    array.map(item => {\n        result = !!item?.add ?\n            result + calculatedValue(item.ru_title) :\n            result - calculatedValue(item.ru_title)\n    }\n    )\n    return result\n}\n\nfunction calculatedValue(field) {\n    let items = dictionary_ru_project_expert.filter(item => item.ru_title === field);\n    let dependent = !!items && items[0]?.dependent;\n\n    if (!!dependent && dependent.length > 0) {\n        return look_down(dependent);\n    } else {\n        let valueArray = report_data.filter(item => item.ru_title === field);\n        return valueArray.length > 0 ? valueArray[0].value : 0; //look_down(props.ru_title)\n    }\n}\n\nexport default function Budgeting() {\n    return <Layout>\n        <TemplateTableEditor />\n        <Container>\n            {report_fields.map(field =>\n                <Row key={field}>\n                    <Col>{field}</Col>\n                    <Col>{calculatedValue(field)}</Col>\n                </Row>\n            )}\n        </Container>\n        {/* {dictionary_ru_project_expert.map(item => <Indicator key={item.ru_title} indicator={item} />)} */}\n    </Layout>\n}\n\n\n\nfunction Indicator(props) {\n    const [open, setOpen] = React.useState(false);\n\n    if (props?.indicator?.dependent && props.indicator.dependent.length > 0) {\n        return <Container>\n            <Button\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n                variant=\"outline-secondary\"\n            >\n                {props.indicator.ru_title} <Badge variant=\"secondary\">{props.indicator.dependent.length}</Badge>\n            </Button>\n            <Collapse in={open} className=\"ml-3\">\n                <div id=\"example-collapse-text\">\n                    {props.indicator.dependent.map(dependentItem => {\n                        let show_indicator = dictionary_ru_project_expert.filter(item => item.ru_title === dependentItem)[0];\n                        // console.log(dependentItem);\n                        // console.log(show_indicator);\n                        // console.log('_________________');\n                        return <Indicator key={props.indicator.ru_title + '___' + dependentItem}\n                            indicator={show_indicator}\n                        />\n                        // <div key={props.indicator.ru_title + '___' + dependentItem}>{dependentItem}</div>\n                    }\n                    )}\n                </div>\n            </Collapse>\n        </Container>\n    }\n\n    return <div>{props.indicator.ru_title}</div>\n} ","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function DropDownInputGroup(props) {\n    const [chosenItem, setChosenItem] = React.useState(null);\n    const [value, setValue] = React.useState('');\n\n    return <Container className=\"mb-3\">\n        <Row>\n            <Col>\n                <InputGroup>\n                    <FormControl\n                        placeholder={chosenItem}\n                        aria-label=\"selectedItem\"\n                        aria-describedby=\"basic-selectedItem\"\n                    />\n                    <DropdownButton\n                        as={InputGroup.Append}\n                        variant=\"outline-secondary\"\n                        title={props.title}\n                        id=\"input-group-dropdown-2\"\n                    >\n                        {props.items.length > 20 && <FormControl\n                            autoFocus\n                            className=\"mx-3 my-2 w-auto\"\n                            placeholder=\"Фильтровать по...\"\n                            onChange={(e) => setValue(e.target.value)}\n                            value={value}\n                        />}\n\n                        {props.items.length > 20 && value.length > 2 && props.items.filter(item => item.includes(value)).map(item =>\n                            <Dropdown.Item\n                                key={item}\n                                onClick={() => setChosenItem(item)}\n                            >{item}</Dropdown.Item>)}\n\n\n                        {value.length < 3 && props.items.map(item =>\n                            <Dropdown.Item\n                                key={item}\n                                onClick={() => setChosenItem(item)}\n                            >{item}</Dropdown.Item>)}\n\n                    </DropdownButton>\n                </InputGroup>\n            </Col>\n            <Col md=\"auto\">\n                <Button\n                    variant=\"outline-secondary\"\n                    onClick={() => props.setSelectedItem(chosenItem)}>\n                    {props.buttonTitle}\n                </Button>\n            </Col>\n        </Row>\n    </Container>\n}"],"sourceRoot":""}