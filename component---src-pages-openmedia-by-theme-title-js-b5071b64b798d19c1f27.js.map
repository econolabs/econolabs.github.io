{"version":3,"sources":["webpack:///./src/pages/openmedia_by_theme_title.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["StudentsByTheme","useFirebaseNode","usersCraft","data","loading","error","allposts","Object","keys","forEach","openmedia_key","push","uniqueThemes","Set","map","item","theme","index","ResultsByTheme","key","theme_posts","filter","props","React","useState","open","setOpen","uniqueTitles","title","className","Header","Body","onClick","aria-controls","aria-expanded","variant","in","id","length","siteTitle","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","objectFit","defaultProps","Layout","children","site","siteMetadata","maxWidth","padding","Date","getFullYear","author"],"mappings":"mlCAWe,SAASA,IAAmB,IAAD,EACOC,YAAgB,aAA/CC,EADwB,EAC9BC,KAAkBC,EADY,EACZA,QAASC,EADG,EACHA,MAEnC,GAAMD,IAAYF,EAAc,OAAO,kBAAC,IAAD,KAAQ,qCAE/C,GAAMG,EAAS,OAAO,kBAAC,IAAD,KAAQ,qCAE9B,IAAIC,EAAW,GACfC,OAAOC,KAAKN,GAAYO,SAAQ,SAAAC,GAAmBJ,EAASK,KAAKT,EAAWQ,OAI5E,IAAME,EAAiBN,EAAF,EAAiB,IAAIO,IAAIP,EAASQ,KAAI,SAAAC,GAAI,OAAIA,EAAKC,WAAW,GAInF,OAAO,kBAAC,IAAD,KACFJ,EAAaE,KAAI,SAACE,EAAOC,GAAR,OAAkB,kBAACC,EAAD,CAAgBC,IAAKH,EAAOA,MAAOA,EAAOC,MAAOA,EAAOG,YAAad,EAASe,QAAO,SAAAN,GAAI,OAAIA,EAAKC,QAAUA,WAIxJ,SAASE,EAAeI,GAAQ,IAAD,EACHC,IAAMC,UAAS,GAAhCC,EADoB,KACdC,EADc,KAGrBC,EAAiBL,EAAMF,YAAR,EAA0B,IAAIP,IAAIS,EAAMF,YAAYN,KAAI,SAAAC,GAAI,OAAIA,EAAKa,WAAW,GACrG,OACI,kBAAC,IAAD,CAAMC,UAAU,OACZ,kBAAC,IAAKC,OAAN,KAAcR,EAAMN,OACpB,kBAAC,IAAKe,KAAN,KACI,kBAAC,IAAD,CACIC,QAAS,kBAAMN,GAASD,IACxBQ,gBAAe,gBAAkBX,EAAML,MACvCiB,gBAAeT,EACfU,QAAQ,qBAEPb,EAAMN,OAEX,kBAAC,IAAD,CAAUoB,GAAIX,GACV,yBAAKY,GAAI,gBAAkBf,EAAML,OAC5BK,EAAMF,YAAYkB,OAClBX,EAAab,KAAI,SAAAc,GAAK,OAAI,yBAAKT,IAAKS,GAAQA,Y,mFC/C/DE,EAAS,SAAC,GAAD,IAAGS,EAAH,EAAGA,UAAH,OACb,yBAAKV,UAAU,kCAAf,IAEE,wBAAIW,MAAO,CAAEC,OAAQ,IACnB,kBAAC,OAAD,CAAMC,GAAG,IAAIF,MAAO,CAAEG,MAAM,OAASC,eAAe,SAAaL,IAEnE,uBAAGV,UAAU,eAAegB,KAAK,8BAC/B,yBACEC,IAAI,4EAGJC,IAAI,GACJP,MAAO,CACLQ,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACd9B,OAAQ,kBACR+B,UAAW,cAqCrBtB,EAAOuB,aAAe,CACpBd,UAAU,IAGGT,Q,UCXAwB,IAtCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVpD,EAAI,OAWV,OACE,oCACE,kBAAC,EAAD,CAAQoC,UAAWpC,EAAKqD,KAAKC,aAAa7B,QAC1C,yBACEY,MAAO,CACLC,OAAO,SACPiB,SAAU,IACVC,QAAS,SAGX,8BAAOJ,GACP,gCACE,0BAAMf,MAAO,CAACG,MAAO,aAArB,MACG,IAAIiB,MAAOC,cADd,KAC+B,IAC/B,uBAAGhB,KAAK,6BAA6BL,MAAO,CAACG,MAAO,aAAcxC,EAAKqD,KAAKC,aAAaK,c","file":"component---src-pages-openmedia-by-theme-title-js-b5071b64b798d19c1f27.js","sourcesContent":["import React from \"react\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport Layout from \"../components/layout\"\n\nimport Button from 'react-bootstrap/Button'\nimport Collapse from 'react-bootstrap/Collapse'\nimport Card from 'react-bootstrap/Card'\n\n\n\nexport default function StudentsByTheme() {\n    const { data: usersCraft, loading, error } = useFirebaseNode('openmedia');\n\n    if (!!loading || !usersCraft) { return <Layout><div>...</div></Layout> }\n\n    if (!!error) { return <Layout><div>:-(</div></Layout> }\n\n    let allposts = [];\n    Object.keys(usersCraft).forEach(openmedia_key => { allposts.push(usersCraft[openmedia_key]) });\n\n    //  console.log(allposts);\n\n    const uniqueThemes = !!allposts ? [...new Set(allposts.map(item => item.theme))] : []; // [ 'A', 'B']\n\n    // console.log(uniqueThemes);\n\n    return <Layout>\n        {uniqueThemes.map((theme, index) => <ResultsByTheme key={theme} theme={theme} index={index} theme_posts={allposts.filter(item => item.theme === theme)} />)}\n    </Layout>\n}\n\nfunction ResultsByTheme(props) {\n    const [open, setOpen] = React.useState(false);\n\n    const uniqueTitles = !!props.theme_posts ? [...new Set(props.theme_posts.map(item => item.title))] : [];\n    return (\n        <Card className=\"m-3\">\n            <Card.Header>{props.theme}</Card.Header>\n            <Card.Body>\n                <Button\n                    onClick={() => setOpen(!open)}\n                    aria-controls={\"collapse-text\" + props.index}\n                    aria-expanded={open}\n                    variant=\"outline-secondary\"\n                >\n                    {props.theme}\n                </Button>\n                <Collapse in={open}>\n                    <div id={\"collapse-text\" + props.index}>\n                        {props.theme_posts.length}\n                        {uniqueTitles.map(title => <div key={title}>{title}</div>)}\n                    </div>\n                </Collapse>\n            </Card.Body>\n        </Card>\n\n    );\n}","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          Â© {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}