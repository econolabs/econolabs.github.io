{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/MarkdownEditor.js","webpack:///./node_modules/react-bootstrap/esm/ButtonToolbar.js","webpack:///./src/mediatemplates/MediaEditor.js","webpack:///./src/pages/mediaeditor.js"],"names":["Header","siteTitle","className","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","defaultProps","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","MarkdownEditorLazy","React","lazy","props","isSSR","window","Suspense","fallback","ButtonToolbar","forwardRef","_ref","ref","bsPrefix","prefix","createElement","displayName","role","NewMedia","dispatch","useDispatch","dataString","useSelector","selectTempData","chartDataObject","dataObject","useState","activeEditor","setActiveEditor","applicationState","selectApplication","savedOpenMediaURL","setSavedOpenMediaURL","Container","aria-label","ButtonGroup","Button","variant","onClick","Alert","Link","PostFormHook","setFormObject","objectWithNamesValues","console","log","email","length","idPost","firebase","database","push","key","html","datetimebarapexchart","datetimelineapexchart","arraycategorieslineapexchart","arraycategoriesbarapexchart","postObject","id","theme","comment","type","content","deleted","user","avatarUrl","date","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","updates","update","then","emptyTempData","HTMLEditor","showAs","MarkdownEditorBlock","DateTimeApexChartEditor","DateTimeAreaNoCategoriesApexChartEditor","ArrayCategoriesApexChartEditor","ScatterApexChartEditor","htmlfeedback","HTMLEditorBallonBlock","setHtmlfeedback","MarkdownEditor","name","series","setSeries","EditMediaTableNoCategories","doUpdateChartSeries","ApexEmptyOptionsChart","seriesWithNames","doCreateProtoArrayFromChartSeries","newProtoArray","element","doCreateChartSeriesFromSpreadsheet","seriesData","selectSpreadsheetData","useEffect","load_data","protoData","set_spreadsheetTitle","spreadsheetTitle","SpreadsheetLayout","Array","map","item","index","d","setMonth","getMonth","categories","setCategories","EditMediaTable","doUpdateChartCategoriesSeries","object","docreateProtoArrayFromChartCategoriesSeries","firstRow","newRow","doUpdateChart","slice","newSerie","docreateChartDataFromSpreadsheet","options","chart","toolbar","show","text","align","fontFamily","marginTop","fontWeight","plotOptions","bar","horizontal","columnWidth","dataLabels","enabled","stroke","colors","xaxis","yaxis","fontSize","cssClass","fill","opacity","tooltip","x","curve","markers","size","strokeColors","strokeWidth","hover","tickAmount","setTempDataObject","modalForm","useForm","defaultValues","register","handleSubmit","reset","onSubmit","InputGroup","Prepend","Text","FormControl","MediaEditorLayout"],"mappings":"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","file":"component---src-pages-mediaeditor-js-7112fab31f036028ed47.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          © {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\n\nconst MarkdownEditorLazy = React.lazy(() => import(\"./MarkdownEditorLazy.js\"))\n\nexport default (props) => {\n    const isSSR = typeof window === \"undefined\"\n    return <>\n      {!isSSR && (\n        <React.Suspense fallback={<div />}><MarkdownEditorLazy {...props} /></React.Suspense>\n      )}\n    </>\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nimport firebase from \"gatsby-plugin-firebase\";\n//import { withFirebase } from \"../firebase\";\n\n\nimport SpreadsheetLayout from \"../features/spreadsheet/SpreadsheetLayout\";\n\nimport {\n  load_data,\n  set_spreadsheetTitle,\n  selectSpreadsheetData,\n} from \"../features/spreadsheet/spreadsheetSlice\";\nimport { selectApplication } from \"../features/application/applicationSlice\";\n// import { selectUserDataItems, doFindValuesForChartDataSeriesByIndicator } from \"../features/data/dataSlice\";\n\nimport { selectTempData, emptyTempData, setTempDataObject } from \"../features/temp/tempSlice\";\n\n\n\nimport HTMLEditorBallonBlock from \"../components/HTMLEditorBallonBlock\";\nimport MarkdownEditor from \"../components/MarkdownEditor\";\n\nimport ApexEmptyOptionsChart from \"./ApexEmptyOptionsChart\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\n\nexport default function NewMedia(props) {\n  const dispatch = useDispatch();\n  const dataString = useSelector(selectTempData).dataString;\n  const chartDataObject = useSelector(selectTempData).dataObject;\n\n  const [activeEditor, setActiveEditor] = useState(null);\n\n  const applicationState = useSelector(selectApplication);\n  // const userData = useSelector(selectUserDataItems);\n\n  const [savedOpenMediaURL, setSavedOpenMediaURL] = React.useState(false);\n\n  function setFormObject(objectWithNamesValues) {\n    console.log(objectWithNamesValues);\n    if (applicationState.email.length > 6) {\n      // let userEmail = applicationState.email.replace(/[^a-zA-Z0-9]/g, \"_\");\n\n      let idPost = firebase.database().ref('openmedia').push().key;\n\n      let dataObject = (() => {\n        if (activeEditor === 'html' || activeEditor === 'markdown') { return { html: dataString } }\n\n        if (activeEditor === \"datetimebarapexchart\") { return { datetimebarapexchart: chartDataObject } }\n        if (activeEditor === \"datetimelineapexchart\") { return { datetimelineapexchart: chartDataObject } }\n        if (activeEditor === \"arraycategorieslineapexchart\") { return { arraycategorieslineapexchart: chartDataObject } }\n        if (activeEditor === \"arraycategoriesbarapexchart\") { return { arraycategoriesbarapexchart: chartDataObject } }\n\n        return {};\n      })();\n\n      //       let dataObject = {\n      //         requiredseries: props.reportIndicators,\n      //         requiredcategories: props.categories,\n      //         type,\n      //         options\n      //       }\n\n      let postObject = {\n        id: idPost,\n        title:\n          objectWithNamesValues.title.length > 2\n            ? objectWithNamesValues.title\n            : \"Диаграмма\",\n        theme: objectWithNamesValues.theme,\n        // answer: applicationState.currentProjectMediaAndDataAndTemplatesURL,\n        comment: objectWithNamesValues.comment,\n        type: \"media\", // activeEditor,\n        content: idPost,\n        // quizString: applicationState.currentProjectReportIndicatorsDictionary,\n        deleted: false,\n        email: applicationState.email,\n        user: applicationState.user,\n        avatarUrl: !!applicationState?.avatarUrl\n          ? applicationState.avatarUrl\n          : null,\n        date: new Intl.DateTimeFormat(\"ru\", {\n          weekday: \"short\",\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n          hour: \"numeric\",\n          minute: \"numeric\",\n        }).format(new Date()), //Date().toJSON()\n      };\n\n      console.log(postObject);\n\n\n\n      // props.firebase.openmedia(idPost).set(postObject)\n      //   .then(() => {\n      //     props.firebase.openmediadata(idPost).set(dataObject).\n      //       then(() => { setActiveEditor(false); setSavedOpenMediaURL(idPost); dispatch(emptyTempData()) })\n      //       .catch(error => console.log(error))\n      //   })\n      //   .catch(error => console.log(error))\n\n     \n      let updates = {};\n      updates[\"/openmedia/\" + idPost] = postObject;\n      updates[\"/openmediadata/\" + idPost] = dataObject;\n      console.log(updates);\n      return firebase.database().ref().update(updates).then(() => {\n        setActiveEditor(false); setSavedOpenMediaURL(idPost); dispatch(emptyTempData())\n      });\n    }\n  }\n\n\n  return (\n    <Container>\n      <ButtonToolbar className=\"m-3\" aria-label=\"Toolbar with Button groups\">\n        <ButtonGroup className=\"mb-2\" aria-label=\"Second group\">\n          <Button\n            variant={\n              activeEditor === \"markdown\" ? \"secondary\" : \"outline-secondary\"\n            }\n            onClick={() => setActiveEditor(\"markdown\")}\n          >\n            Markdown\n          </Button>{\" \"}\n          <Button\n            variant={\n              activeEditor === \"html\" ? \"secondary\" : \"outline-secondary\"\n            }\n            onClick={() => setActiveEditor(\"html\")}\n          >\n            HTML\n          </Button>{\" \"}\n          <Button\n            variant={\n              activeEditor === \"datetimeareanocategoriesapexchart\"\n                ? \"secondary\"\n                : \"outline-secondary\"\n            }\n            onClick={() => setActiveEditor(\"datetimeareanocategoriesapexchart\")}\n          >\n            DateTimeAreaNoCategoriesApexChart\n          </Button>\n          <Button\n            variant={\n              activeEditor === \"scatterapexchart\"\n                ? \"secondary\"\n                : \"outline-secondary\"\n            }\n            onClick={() => setActiveEditor(\"scatterapexchart\")}\n          >\n            ScatterApexChart\n          </Button>\n        </ButtonGroup>\n\n        <ButtonGroup className=\"mb-2\" aria-label=\"First group\">\n          <Button\n            variant={\n              activeEditor === \"datetimebarapexchart\"\n                ? \"secondary\"\n                : \"outline-secondary\"\n            }\n            onClick={() => setActiveEditor(\"datetimebarapexchart\")}\n          >\n            DateTimeBarApexChart\n          </Button>{\" \"}\n          <Button\n            variant={\n              activeEditor === \"datetimelineapexchart\"\n                ? \"secondary\"\n                : \"outline-secondary\"\n            }\n            onClick={() => setActiveEditor(\"datetimelineapexchart\")}\n          >\n            DateTimeLineApexChart\n          </Button>\n          <Button\n            variant={\n              activeEditor === \"arraycategorieslineapexchart\"\n                ? \"secondary\"\n                : \"outline-secondary\"\n            }\n            onClick={() => setActiveEditor(\"arraycategorieslineapexchart\")}\n          >\n            ArrayCategoriesLineApexChart\n          </Button>\n          <Button\n            variant={\n              activeEditor === \"arraycategoriesbarapexchart\"\n                ? \"secondary\"\n                : \"outline-secondary\"\n            }\n            onClick={() => setActiveEditor(\"arraycategoriesbarapexchart\")}\n          >\n            ArrayCategoriesBarApexChart\n          </Button>\n        </ButtonGroup>\n      </ButtonToolbar>\n\n      {!activeEditor && !!savedOpenMediaURL && <Alert variant='success'>\n        <p>Сохранено</p>\n        <Alert.Link href={\"econolabs.github.io/openmedia/?\" + savedOpenMediaURL}>Проверить</Alert.Link> {/* https://fincalculations.firebaseapp.com/#/emptyspreadsheet/ */}\n      </Alert>}\n\n\n      {!!activeEditor && <PostFormHook setFormObject={setFormObject} />}\n\n      {activeEditor === \"html\" && <HTMLEditor showAs={activeEditor} />}\n\n      {activeEditor === \"markdown\" && (\n        <MarkdownEditorBlock showAs={activeEditor} />\n      )}\n\n      {activeEditor === \"datetimebarapexchart\" && (\n        <DateTimeApexChartEditor showAs={activeEditor} />\n      )}\n      {activeEditor === \"datetimelineapexchart\" && (\n        <DateTimeApexChartEditor showAs={activeEditor} />\n      )}\n\n      {activeEditor === \"datetimeareanocategoriesapexchart\" && (\n        <DateTimeAreaNoCategoriesApexChartEditor showAs={activeEditor} />\n      )}\n\n      {activeEditor === \"arraycategorieslineapexchart\" && (\n        <ArrayCategoriesApexChartEditor showAs={activeEditor} />\n      )}\n      {activeEditor === \"arraycategoriesbarapexchart\" && (\n        <ArrayCategoriesApexChartEditor showAs={activeEditor} />\n      )}\n\n      {activeEditor === \"scatterapexchart\" && (\n        <ScatterApexChartEditor showAs={activeEditor} />\n      )}\n    </Container>\n  );\n}\n\nfunction HTMLEditor() {\n  const [htmlfeedback, setHtmlfeedback] = useState(\"\");\n  function updateHtmlContent(htmlfeedback) { }\n  return (\n    <Container className=\"mt-3\">\n      <HTMLEditorBallonBlock\n        htmlfeedback={htmlfeedback}\n        setHtmlfeedback={updateHtmlContent}\n      />\n    </Container>\n  );\n}\n\nfunction MarkdownEditorBlock() {\n  const [htmlfeedback, setHtmlfeedback] = useState(\"\");\n  return (\n    <Container className=\"mt-3\">\n      <MarkdownEditor\n        htmlfeedback={htmlfeedback}\n        setHtmlfeedback={setHtmlfeedback}\n      />\n    </Container>\n  );\n}\n\n\nfunction ScatterApexChartEditor({ showAs }) {\n  const [series, setSeries] = useState([\n    {\n      name: \"Данные\",\n      data: [\n        [5, 5],\n        [-5, 5],\n        [-5, -5],\n        [5, -5],\n        [1, 1],\n        [-2, -2],\n      ],\n    },\n  ]);\n\n  function doUpdateChartSeries(series) {\n    console.log(series);\n    setSeries(series);\n  }\n\n  return (\n    <Container className=\"mt-3\">\n      <EditMediaTableNoCategories\n        series={series}\n        doUpdateChartSeries={doUpdateChartSeries}\n      />\n      <ApexEmptyOptionsChart\n        seriesWithNames={series}\n        //   series={series[0].data}\n        showAs={showAs}\n      />\n    </Container>\n  );\n}\n\nfunction DateTimeAreaNoCategoriesApexChartEditor({ showAs }) {\n  const [series, setSeries] = useState([\n    {\n      name: \"dataline1\",\n      data: [\n        [\"Dec 23 2017\", 100],\n        [\"Dec 23 2020\", 120],\n      ],\n    },\n    {\n      name: \"dataline2\",\n      data: [\n        [\"Dec 23 2017\", 150],\n        [\"Dec 23 2020\", 80],\n      ],\n    },\n  ]);\n\n  function doUpdateChartSeries(series) {\n    console.log(series);\n    setSeries(series);\n  }\n\n  return (\n    <Container className=\"mt-3\">\n      <EditMediaTableNoCategories\n        series={series}\n        doUpdateChartSeries={doUpdateChartSeries}\n      />\n      <ApexEmptyOptionsChart series={series} showAs={showAs} />\n    </Container>\n  );\n}\n\nfunction doCreateProtoArrayFromChartSeries(series) {\n  let newProtoArray = [];\n  for (const element of series[0].data) {\n    newProtoArray.push([element[0], element[1]]);\n  }\n  return newProtoArray;\n}\n\nfunction doCreateChartSeriesFromSpreadsheet(data) {\n  console.log(data);\n  let seriesData = [];\n  for (const element of data) {\n    seriesData.push([element[0], element[1]]);\n  }\n  return seriesData;\n}\n\nfunction EditMediaTableNoCategories(props) {\n  const dispatch = useDispatch();\n  const data = useSelector(selectSpreadsheetData);\n\n  useEffect(() => {\n    dispatch(\n      load_data({ protoData: doCreateProtoArrayFromChartSeries(props.series) })\n    );\n    dispatch(set_spreadsheetTitle({ spreadsheetTitle: \"Chart Data\" }));\n  }, []);\n\n  if (props.series.length === 0) {\n    return <div>...</div>;\n  }\n\n  function doUpdateChart() {\n    //   console.log(docreateChartDataFromSpreadsheet(data));\n    props.doUpdateChartSeries([\n      { name: \"Данные\", data: doCreateChartSeriesFromSpreadsheet(data) },\n    ]);\n  }\n\n  return (\n    <Container>\n      <SpreadsheetLayout />\n      <Button\n        variant={\"outline-secondary\"}\n        className=\"m-3\"\n        onClick={() => doUpdateChart()}\n      >\n        Обновить Not active yet\n      </Button>{\" \"}\n    </Container>\n  );\n}\n\nfunction DateTimeApexChartEditor({ showAs }) {\n  const [series, setSeries] = useState([\n    { name: \"Компания A\", data: [100, 1500, 1150, 3000] },\n    { name: \"Компания Б\", data: [1000, 900, 1460, 1300] },\n    { name: \"Компания В\", data: [1000, 1300, 1250, 1550] },\n    { name: \"Индекс\", data: [1000, 1400, 1200, 1600] },\n  ]);\n\n  const [categories, setCategories] = useState(\n    [...new Array(4)].map((item, index) => {\n      var d = new Date();\n      return d.setMonth(d.getMonth() - 4 + index);\n    })\n  ); //\n\n  function doUpdateChartCategoriesSeries(object) {\n    console.log(object);\n    //  console.log(object.series);\n    setSeries(object.series);\n    setCategories(object.categories);\n  }\n\n  return (\n    <Container className=\"mt-3\">\n      <EditMediaTable\n        series={series}\n        categories={categories}\n        doUpdateChartCategoriesSeries={doUpdateChartCategoriesSeries}\n        showAs={showAs}\n      />\n      <ApexEmptyOptionsChart\n        series={series}\n        categories={categories}\n        showAs={showAs}\n      />\n    </Container>\n  );\n}\n\nfunction ArrayCategoriesApexChartEditor({ showAs }) {\n  const [series, setSeries] = useState([\n    { name: \"Компания A\", data: [100, 1500, 1150, 3000] },\n    { name: \"Компания Б\", data: [1000, 900, 1460, 1300] },\n    { name: \"Компания В\", data: [1000, 1300, 1250, 1550] },\n    { name: \"Индекс\", data: [1000, 1400, 1200, 1600] },\n  ]);\n  const [categories, setCategories] = useState([\n    \"1кв. 2022г.\",\n    \"2кв. 2022г.\",\n    \"3кв. 2022г.\",\n    \"4кв. 2022г.\",\n  ]);\n\n  function doUpdateChartCategoriesSeries(object) {\n    console.log(object);\n    //  console.log(object.series);\n    setSeries(object.series);\n    setCategories(object.categories);\n  }\n\n  return (\n    <Container className=\"mt-3\">\n      <EditMediaTable\n        series={series}\n        categories={categories}\n        doUpdateChartCategoriesSeries={doUpdateChartCategoriesSeries}\n        showAs={showAs}\n      />\n      <ApexEmptyOptionsChart\n        series={series}\n        categories={categories}\n        showAs={showAs}\n      />\n    </Container>\n  );\n}\n\nfunction docreateProtoArrayFromChartCategoriesSeries(categories, series) {\n  let newProtoArray = [];\n  let firstRow = [\"Показатели\"];\n  for (const element of categories) {\n    firstRow.push(element);\n  }\n  newProtoArray[0] = firstRow;\n\n  for (let element of series) {\n    let newRow = [element.name, ...element.data];\n    newProtoArray.push(newRow);\n  }\n  return newProtoArray;\n}\n\nfunction docreateChartDataFromSpreadsheet(data) {\n  let categories = [];\n  for (const element of data[0].slice(1)) {\n    categories.push(element);\n  }\n\n  let series = [];\n  for (const element of data.slice(1)) {\n    let newSerie = { name: element[0], data: element.slice(1) };\n    series.push(newSerie);\n  }\n\n  return { categories, series };\n}\n\nfunction EditMediaTable(props) {\n  const dispatch = useDispatch();\n  const data = useSelector(selectSpreadsheetData);\n\n  useEffect(() => {\n    dispatch(\n      load_data({\n        protoData: docreateProtoArrayFromChartCategoriesSeries(\n          props.categories,\n          props.series\n        ),\n      })\n    );\n    dispatch(set_spreadsheetTitle({ spreadsheetTitle: \"Chart Data\" }));\n  }, []);\n\n  if (props.series.length === 0 || props.categories.length === 0) {\n    return <div>...</div>;\n  }\n\n  function doUpdateChart() {\n\n    let { categories, series } = docreateChartDataFromSpreadsheet(data);\n\n    let options = (() => {\n      if (props.showAs === \"datetimebarapexchart\") {\n        return {\n          chart: { type: 'bar', toolbar: { show: false } },\n          title: { text: \"\", align: \"left\", style: { fontFamily: \"Helvetica, Arial, sans-serif\", marginTop: \"2rem\", fontWeight: 'normal' } },\n          plotOptions: { bar: { horizontal: false, columnWidth: '55%' } }, // columnWidth: '55%', endingShape: 'rounded'\n          dataLabels: { enabled: false },\n          stroke: { show: true, width: 1, colors: ['transparent'] },\n          xaxis: {\n            type: \"datetime\", // categories: makeCategories(categories),\n            title: { text: \"Дата\", style: { fontFamily: \"Helvetica, Arial, sans-serif\", margin: \"1rem\", padding: \"1rem\", fontWeight: 'normal' } }\n          },\n          yaxis: { title: { text: \"Значение\" }, style: { fontSize: '1rem', fontFamily: 'Helvetica, Arial, sans-serif', fontWeight: 'normal', cssClass: 'apexcharts-yaxis-title' } },\n          fill: { opacity: 1 },\n          tooltip: {\n            x: { format: \"MMM yy\" }, //'20' + 'yy'\n            //        y: { formatter: function (val) { return val } }\n          },\n        }\n      };\n\n      if (props.showAs === \"datetimelineapexchart\") {\n        return {\n          chart: { type: \"line\", toolbar: { show: false } },\n          title: { text: \"\", align: \"left\", style: { fontFamily: \"Helvetica, Arial, sans-serif\", marginTop: \"2rem\", fontWeight: 'normal' } },\n          stroke: { curve: \"smooth\" },\n          xaxis: {\n            type: \"datetime\",\n            //  categories: makeCategories(categories),\n            title: { text: \"Дата\", style: { fontFamily: \"Helvetica, Arial, sans-serif\", margin: \"1rem\", padding: \"1rem\", fontWeight: 'normal' } },\n            tooltip: { x: { format: \"dd MMM yyyy\" } }\n          },\n          markers: { size: 2, colors: [\"#D3D3D3\"], strokeColors: \"#808080\", strokeWidth: 2, hover: { size: 4 } },\n          yaxis: {\n            title: {\n              text: \"Значение\",\n              style: { fontSize: '1rem', fontFamily: 'Helvetica, Arial, sans-serif', fontWeight: 'normal', cssClass: 'apexcharts-yaxis-title' }\n            },\n            tickAmount: 5,\n            //        labels: { formatter: function (val) { return parseFloat(val).toFixed(1) } },\n            // min: 800, max: 1800,\n          },\n        }\n      }\n\n      if (props.showAs === \"arraycategorieslineapexchart\") {\n        return {\n          chart: { type: 'line', toolbar: { show: false } },\n          title: { text: \"\", align: \"left\", style: { fontFamily: \"Helvetica, Arial, sans-serif\", marginTop: \"2rem\", fontWeight: 'normal' } },\n          // stroke: { width: 7, curve: 'smooth' },\n          dataLabels: { enabled: true },\n          xaxis: {\n            categories: categories,\n            title: { text: \"\", style: { fontFamily: \"Helvetica, Arial, sans-serif\", margin: \"1rem\", padding: \"1rem\", fontWeight: 'normal', cssClass: 'apexcharts-xaxis-title' } }\n          },\n          markers: { size: 2, colors: [\"#D3D3D3\"], strokeColors: \"#808080\", strokeWidth: 2, hover: { size: 4 } },\n          yaxis: {\n            title: {\n              text: \"Значение\",\n              style: { fontSize: '1rem', fontFamily: 'Helvetica, Arial, sans-serif', fontWeight: 'normal', cssClass: 'apexcharts-yaxis-title' }\n            },\n            //  tickAmount: 8,\n            //  labels: { formatter: function (val) { return parseFloat(val).toFixed(1) } }\n            // min: -20,\n            // max: 20,\n          }\n        }\n      }\n\n      if (props.showAs === \"arraycategoriesbarapexchart\") {\n        return {\n          chart: { type: 'bar', toolbar: { show: false } },\n          title: { text: \"\", align: \"left\", style: { fontFamily: \"Helvetica, Arial, sans-serif\", marginTop: \"2rem\", fontWeight: 'normal' } },\n          // stroke: { width: 7, curve: 'smooth' },\n          dataLabels: { enabled: true },\n          xaxis: {\n            categories: categories,\n            title: { text: \"\", style: { fontFamily: \"Helvetica, Arial, sans-serif\", margin: \"1rem\", padding: \"1rem\", fontWeight: 'normal', cssClass: 'apexcharts-xaxis-title' } }\n          },\n          markers: { size: 2, colors: [\"#D3D3D3\"], strokeColors: \"#808080\", strokeWidth: 2, hover: { size: 4 } },\n          yaxis: {\n            title: {\n              text: \"Значение\",\n              style: { fontSize: '1rem', fontFamily: 'Helvetica, Arial, sans-serif', fontWeight: 'normal', cssClass: 'apexcharts-yaxis-title' }\n            },\n            //  tickAmount: 8,\n            //  labels: { formatter: function (val) { return parseFloat(val).toFixed(1) } }\n            // min: -20,\n            // max: 20,\n          }\n        }\n      }\n      return {};\n    })();\n\n\n    props.doUpdateChartCategoriesSeries({ categories, series });\n    dispatch(setTempDataObject({ dataObject: { categories, series, options } }));\n  }\n\n  return (\n    <Container>\n      <SpreadsheetLayout />\n      <Button\n        variant={\"outline-secondary\"}\n        className=\"m-3\"\n        onClick={() => doUpdateChart()}\n      >\n        Обновить\n      </Button>{\" \"}\n    </Container>\n  );\n}\n\nlet modalForm = [\n  { name: \"theme\", title: \"Тема\", type: \"text\" },\n  { name: \"title\", title: \"Название\", type: \"text\" },\n  { name: \"comment\", title: \"Комментарий\", type: \"text\" },\n];\n\nfunction PostFormHook(props) {\n  const { register, handleSubmit, reset } = useForm({\n    //, watch, errors\n    defaultValues: { title: props?.title },\n  });\n\n  React.useEffect(() => {\n    reset({ title: props?.title });\n  }, [props?.title]);\n\n  return (\n    <form onSubmit={handleSubmit(props.setFormObject)}>\n      {modalForm.map((item) => (\n        <InputGroup className=\"mb-3\" size=\"sm\" key={item.name}>\n          <InputGroup.Prepend>\n            <InputGroup.Text style={{ width: \"8rem\" }}>\n              {item.title}\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            key={item.name}\n            name={item.name}\n            type={item.type}\n            ref={register}\n          //       as={item.type === \"textarea\" ? \"textarea\" : \"input\"}\n          />\n        </InputGroup>\n      ))}\n      <Button variant=\"outline-secondary\" type=\"submit\" size=\"sm\">\n        Сохранить\n      </Button>\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport MediaEditor from \"../mediatemplates/MediaEditor\";\n\nimport Layout from \"../components/layout\";\n\nexport default function MediaEditorLayout() {\n  return (\n    <Layout>\n      <MediaEditor />\n    </Layout>\n  );\n}\n\n"],"sourceRoot":""}