{"version":3,"sources":["webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js","webpack:///./src/components/LocalForageUniforms.js","webpack:///./src/pages/financial_analysis_lab.js","webpack:///./node_modules/react-bootstrap/esm/ButtonGroup.js"],"names":["getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","byteToHex","push","toString","substr","buf","offset_","offset","toLowerCase","options","rnds","random","i","ajv","Ajv","allErrors","createValidator","uniformSchema","validator","compile","input","errors","length","details","LocalForageUniforms","props","useState","isReady","setReady","formInitialValues","setFormInitialValues","currentTask","setCurrentTask","formDictionaryTitles","setFormDictionaryTitles","formDictionaryTypes","setFormDictionaryTypes","dictionary","useDictionary","useEffect","allDictionaryItems","edges","forEach","item","node","keys","formDictionaryTitlesObject","formDictionaryTypesObject","Object","properties","map","propertiesKey","filter","dictionaryItem","dictionaryId","comment","type","Promise","all","key","userCraft","getItem","then","value","catch","error","console","log","arr","assign","initialValues","currenttask","columns","Container","Nav","fill","className","Item","title","OneColumnUniform","ManyColumnsUniforms","formColumns","model","setModel","newproperties","setNewproperties","newrequired","setRequired","modelWithValues","columnTitle","tableCellName","dictionaryIdObject","uid","period","schema","required","uniformWithValidator","JSONSchemaBridge","onSubmit","values","dataObjects","rowsItem","valuesKey","includes","nameBlocks","split","keyIninitialValues","element","currentObject","context","uuidv4","matches","valueKey","setItem","submitUniform","Row","Col","propertyKey","name","style","margin","maxWidth","padding","taskSlides","currentcompanyfullname","label","currentcompanyreporturl","currentcompanyunitofmoney","additionalInfo","code2110_minfin_ru_66n","code1100_minfin_ru_66n","code1200_minfin_ru_66n","code1300_minfin_ru_66n","code1400_minfin_ru_66n","code1500_minfin_ru_66n","page","setPage","show","setShow","slideObject","setSlideObject","React","timer","setTimeout","clearTimeout","siteTitle","sm","ButtonGroup","vertical","size","with","index","Button","variant","onClick","forwardRef","ref","bsPrefix","toggle","_props$as","as","Component","rest","prefix","baseClass","createElement","displayName","defaultProps","role"],"mappings":"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","file":"component---src-pages-financial-analysis-lab-js-b44b0e80ef9859ff4ba2.js","sourcesContent":["import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.function.bind\";\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction bytesToUuid(buf, offset_) {\n  var offset = offset_ || 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (byteToHex[buf[offset + 0]] + byteToHex[buf[offset + 1]] + byteToHex[buf[offset + 2]] + byteToHex[buf[offset + 3]] + '-' + byteToHex[buf[offset + 4]] + byteToHex[buf[offset + 5]] + '-' + byteToHex[buf[offset + 6]] + byteToHex[buf[offset + 7]] + '-' + byteToHex[buf[offset + 8]] + byteToHex[buf[offset + 9]] + '-' + byteToHex[buf[offset + 10]] + byteToHex[buf[offset + 11]] + byteToHex[buf[offset + 12]] + byteToHex[buf[offset + 13]] + byteToHex[buf[offset + 14]] + byteToHex[buf[offset + 15]]).toLowerCase();\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return bytesToUuid(rnds);\n}\n\nexport default v4;","import React, { useState, useEffect } from \"react\";\n\nimport {\n    AutoForm,\n    AutoField,\n    ErrorField,\n    SubmitField,\n    LongTextField\n} from \"uniforms-bootstrap4\";\nimport Ajv from \"ajv\";\nimport { JSONSchemaBridge } from \"uniforms-bridge-json-schema\";\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { userCraft } from \"../pages/login\"\nimport useDictionary from \"../hooks/useDictionary\";\n\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\n\nconst ajv = new Ajv({ allErrors: true });\n\nconst getLocalForageDataByKeys = (keys) => {\n    return Promise.all([\"currenttask\", ...keys].map(key => {\n        return userCraft.getItem(key)\n            .then(value => {\n                return { [key]: value }\n            })\n            .catch(error => {\n                console.log(error)\n                return { [key]: null }\n            })\n    }))\n        .then(arr => { return Object.assign(...arr) })\n}\n\nfunction createValidator(uniformSchema) {\n    const validator = ajv.compile(uniformSchema);\n\n    return input => {\n        validator(input);\n\n        if (validator.errors && validator.errors.length) {\n            let errorMessage = { details: validator.errors };\n            throw errorMessage;\n        }\n    };\n}\n\n\nfunction LocalForageUniforms(props) {\n    const [isReady, setReady] = useState(false);\n    const [formInitialValues, setFormInitialValues] = useState({});\n    const [currentTask, setCurrentTask] = useState(null);\n    const [formDictionaryTitles, setFormDictionaryTitles] = useState({});\n    const [formDictionaryTypes, setFormDictionaryTypes] = useState({});\n    const dictionary = useDictionary();\n\n    useEffect(() => {\n        // userCraft.clear().then(function() { console.log('Database is now empty.');})\n        // .catch(function(err) { console.log(err); });\n\n        let allDictionaryItems = [];\n        dictionary.edges.forEach(item => {\n            allDictionaryItems.push(item.node);\n        });\n\n        let formDictionaryTitlesObject = {}\n        let formDictionaryTypesObject = {}\n\n        Object.keys(props.uniformSchema.properties).map(propertiesKey => {\n            formDictionaryTitlesObject[propertiesKey] = allDictionaryItems.filter(dictionaryItem => dictionaryItem.dictionaryId === propertiesKey)[0]?.comment || \"Показатель\";\n            formDictionaryTypesObject[propertiesKey] = allDictionaryItems.filter(dictionaryItem => dictionaryItem.dictionaryId === propertiesKey)[0]?.type || \"text\";\n        })\n\n        setFormDictionaryTitles(formDictionaryTitlesObject);\n        setFormDictionaryTypes(formDictionaryTypesObject);\n\n\n        getLocalForageDataByKeys(props.uniformSchema?.properties ? Object.keys(props.uniformSchema.properties) : [])\n            .then(initialValues => {\n                //     console.log(initialValues);\n                let { currenttask: currenttask, ...formInitialValues } = initialValues;\n                //     console.log(currenttask, formInitialValues);\n                setCurrentTask(currenttask);\n                setFormInitialValues(formInitialValues);\n                setReady(true)\n            }).catch(error => {\n                console.log(error) // do sth with error\n            })\n    }, [])\n\n    console.log(props);\n\n    if (isReady && !props.uniformSchema?.columns) return <Container>\n        <Nav fill className=\"justify-content-center\">\n            <Nav.Item><small>{currentTask}</small></Nav.Item>\n            <Nav.Item><small>{props.uniformSchema.title}</small></Nav.Item>\n        </Nav>\n        <OneColumnUniform\n            formDictionaryTitles={formDictionaryTitles}\n            formDictionaryTypes={formDictionaryTypes}\n            formInitialValues={formInitialValues}\n            currentTask={currentTask}\n            uniformSchema={props.uniformSchema}\n        />\n    </Container>\n\n\n    if (isReady && props.uniformSchema?.columns && props.uniformSchema.columns.length > 1) return <Container>\n        <Nav fill className=\"justify-content-center\">\n            <Nav.Item><small>{currentTask}</small></Nav.Item>\n            <Nav.Item><small>{props.uniformSchema.title}</small></Nav.Item>\n        </Nav>\n        <ManyColumnsUniforms\n            formDictionaryTitles={formDictionaryTitles}\n            formDictionaryTypes={formDictionaryTypes}\n            formInitialValues={formInitialValues}\n            formColumns={props.uniformSchema.columns}\n            currentTask={currentTask}\n            uniformSchema={props.uniformSchema}\n        />\n    </Container>\n\n\n    return null\n}\n\nexport default LocalForageUniforms\n\nfunction ManyColumnsUniforms(props) {\n    const [isReady, setReady] = useState(false);\n    const [model, setModel] = useState({\n        // currentcompanyfullname: \"ПАО Газпром\",\n        // currentcompanyreporturl: \"http://www.gazprom.ru\",\n        // currentcompanyunitofmoney: \"млрд. руб.\"\n    });\n    const [newproperties, setNewproperties] = useState({});\n    const [newrequired, setRequired] = useState([]);\n\n    let currentTask = props.currentTask;\n\n\n    useEffect(() => {\n\n        let newproperties = {};\n        let newrequired =[]\n        let modelWithValues = {};\n        console.log(props.formInitialValues);\n\n        Object.keys(props.uniformSchema.properties).map(propertiesKey => {\n            props.formColumns.map(columnTitle => {\n                //        console.log(propertiesKey, columnTitle, props.uniformSchema.properties[propertiesKey]  )\n                let tableCellName = propertiesKey + '_|_' + columnTitle;\n                newproperties[tableCellName] = props.uniformSchema.properties[propertiesKey];\n                newrequired.push(tableCellName);\n                //       modelWithValues[propertiesKey + '_|_' + columnTitle] = Math.floor(Math.random() * 1000);\n            })\n        }\n        );\n        console.log(newproperties);\n\n        //    console.log(props);\n\n        Object.keys(props.formInitialValues || {}).forEach(dictionaryId => {\n            let dictionaryIdObject = props.formInitialValues[dictionaryId];\n            Object.keys(dictionaryIdObject || {}).forEach(uid => {\n                if (!!dictionaryIdObject[uid]?.currenttask && dictionaryIdObject[uid].currenttask === currentTask) {\n                    //        console.log(dictionaryIdObject[uid].currenttask);\n                    let period = dictionaryIdObject?.[uid]?.period;\n                    let value = dictionaryIdObject?.[uid]?.value;\n                    modelWithValues[dictionaryId + '_|_' + period] = value; //Math.floor(Math.random() * 1000);\n                }\n            })\n        });\n        //      console.log(modelWithValues);\n\n        // Object.keys(foundInitialValues || {}).forEach(item => {\n        //     formik.setFieldValue(item, foundInitialValues[item])\n        // });\n        setRequired(newrequired);\n        setNewproperties(newproperties);\n        setModel(modelWithValues);\n        setReady(true);\n    }, [])\n\n    console.log(props);\n    // console.log(props.uniformSchema.properties);\n\n    function submitUniform(values) {\n        console.log(values);\n        let dataObjects = {};\n        Object.keys(props.formInitialValues).map(rowsItem => {\n            //    console.log(rowsItem);\n            dataObjects[rowsItem] = { ...props.formInitialValues[rowsItem] };\n            Object.keys(values).map(valuesKey => {\n                if (valuesKey.includes(rowsItem)) {\n                    let nameBlocks = valuesKey.split('_|_');\n                    //        console.log(nameBlocks[1]);\n                    //        console.log(values[valuesKey]);\n\n                    let keyIninitialValues = null\n                    !!props.formInitialValues[rowsItem] && Object.keys(props.formInitialValues[rowsItem]).forEach(element => {\n                        let currentObject = props.formInitialValues[rowsItem][element];\n                        if ((currentObject.currenttask === currentTask) && (currentObject.period === nameBlocks[1])) {\n                            keyIninitialValues = element;\n                        }\n                    });\n                    if (!!keyIninitialValues) {\n                        dataObjects[rowsItem][keyIninitialValues] =\n                        {\n                            currenttask: currentTask,\n                            period: nameBlocks[1],\n                            context: 'Default',\n                            value: values[valuesKey]\n                        };\n                        console.log(dataObjects[rowsItem]);\n                    } else {\n                        dataObjects[rowsItem][uuidv4()] =\n                        {\n                            currenttask: currentTask,\n                            period: nameBlocks[1],\n                            context: 'Default',\n                            value: values[valuesKey]\n                        };\n                        console.log(dataObjects[rowsItem]);\n                    }\n                }\n            })\n        })\n        //  console.log(dataObjects);\n\n        let matches = []\n        for (let i in Object.keys(dataObjects)) {\n            let valueKey = Object.keys(dataObjects)[i];\n            // matches will be an array of promises\n            matches.push(userCraft.setItem(valueKey, dataObjects[valueKey]))\n        }\n        Promise.all(matches).then(() => { setReady(true) }) //console.log('Form data saved!')   \n    }\n\n    let schema = { ...props.uniformSchema, properties: newproperties, required: newrequired };\n    let uniformWithValidator = new JSONSchemaBridge(schema, createValidator(schema));\n\n    console.log(model);\n\n    return <Container>\n        {isReady ?\n            <AutoForm schema={uniformWithValidator} model={model} onSubmit={input => submitUniform(input)} className=\"m-3\">\n                <Row>\n                    <Col>Показатели</Col>\n                    {props.formColumns.map(columnTitle => <Col key={columnTitle}>{columnTitle}</Col>)}\n                </Row>\n\n                {Object.keys(props.uniformSchema.properties).map(propertyKey =>\n                    <Row key={propertyKey}>\n                        <Col>{props.formDictionaryTitles[propertyKey]}</Col>\n                        {props.formColumns.map(columnTitle => <Col key={columnTitle}><AutoField name={propertyKey + '_|_' + columnTitle} key={propertyKey + '_|_' + columnTitle} /></Col>)}\n                    </Row>\n                )}\n\n                {Object.keys(newproperties).map(propertyKey => <Row key={propertyKey}><ErrorField name={propertyKey} key={propertyKey} /></Row>)}\n\n                <SubmitField />\n            </AutoForm>\n            :\n            null}\n    </Container>\n}\n\n\nfunction OneColumnUniform(props) {\n    const [isReady, setReady] = useState(false);\n    const [model, setModel] = useState({\n        // currentcompanyfullname: \"ПАО Газпром\",\n        // currentcompanyreporturl: \"http://www.gazprom.ru\",\n        // currentcompanyunitofmoney: \"млрд. руб.\"\n    });\n\n    let currentTask = props.currentTask;\n\n    // If you're curious, you can run this Effect\n    useEffect(() => {\n        // console.log({ formik });\n        let modelWithValues = {};\n\n        Object.keys(props.formInitialValues || {}).forEach(dictionaryId => {\n            let dictionaryIdObject = props.formInitialValues[dictionaryId];\n            Object.keys(dictionaryIdObject || {}).forEach(uid => {\n\n                if (!!dictionaryIdObject[uid]?.currenttask && dictionaryIdObject[uid].currenttask === currentTask) {\n                    // console.log(dictionaryIdObject[uid].currenttask);\n                    let value = dictionaryIdObject?.[uid]?.value;\n                    modelWithValues[dictionaryId] = value;\n                    // console.log(dictionaryId, value, currentTask);\n                }\n            })\n        });\n        setModel(modelWithValues);\n        setReady(true);\n    }, [])\n\n    console.log(model);\n\n    function submitUniform(values) {\n        //     console.log(values);\n\n        let dataObjects = {};\n        Object.keys(props.formInitialValues).map(rowsItem => {\n            console.log(rowsItem);\n            dataObjects[rowsItem] = { ...props.formInitialValues[rowsItem] };\n            console.log(rowsItem);\n            Object.keys(values).map(valuesKey => {\n                if (valuesKey.includes(rowsItem)) {\n                    //   console.log(props.formInitialValues[rowsItem]);\n                    let keyIninitialValues = null\n                    !!props.formInitialValues[rowsItem] && Object.keys(props.formInitialValues[rowsItem]).forEach(element => {\n                        let currentObject = props.formInitialValues[rowsItem][element];\n                        if (currentObject.currenttask === currentTask) { keyIninitialValues = element }\n                    });\n                    if (!!keyIninitialValues) {\n                        dataObjects[rowsItem][keyIninitialValues] =\n                        {\n                            currenttask: currentTask,\n                            context: 'Default',\n                            value: values[valuesKey]\n                        };\n                        console.log(dataObjects[rowsItem]);\n                    } else {\n                        dataObjects[rowsItem][uuidv4()] =\n                        {\n                            currenttask: currentTask,\n                            context: 'Default',\n                            value: values[valuesKey]\n                        };\n                        console.log(dataObjects[rowsItem]);\n                    }\n                }\n            })\n        })\n        //  console.log(dataObjects);\n\n        let matches = []\n        for (let i in Object.keys(dataObjects)) {\n            let valueKey = Object.keys(dataObjects)[i];\n            // matches will be an array of promises\n            matches.push(userCraft.setItem(valueKey, dataObjects[valueKey]))\n        }\n        Promise.all(matches).then(() => { setReady(true) }) //console.log('Form data saved!')\n    }\n\n    let schema = { ...props.uniformSchema };\n    let uniformWithValidator = new JSONSchemaBridge(schema, createValidator(schema));\n\n    if (!isReady) return null\n\n    return <div\n        style={{\n            margin: `0 auto`,\n            maxWidth: 800,\n            padding: '2rem'\n        }}>\n        <div className=\"m-3\">\n            <AutoForm\n                schema={uniformWithValidator}\n                model={model}\n                onSubmit={input => submitUniform(input)}\n            />\n        </div>\n    </div>\n}","import React, { useState } from \"react\";\n\nimport LocalForageUniforms from '../components/LocalForageUniforms';\n\nimport Header from '../components/header';\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\n\n\nlet taskSlides = [\n    {\n        title: 'Сведения о проекте',\n        type: 'object',\n        properties: {\n            currentcompanyfullname: { type: 'string', label: 'Название компании' },\n            currentcompanyreporturl: { type: 'string', label: 'Название компании' },\n            currentcompanyunitofmoney: { type: 'string', label: 'Ден. ед.' },\n            additionalInfo: {\n                type: 'string',\n                label: \"Комментарий\",\n                // uniforms: { component: 'LongTextField' }\n            }\n        },\n        required: ['currentcompanyfullname', 'currentcompanyreporturl', \"currentcompanyunitofmoney\"]\n    },\n    {\n        title: 'Структура баланса',\n        type: 'object',\n        columns: [\"2017\", \"2018\", \"2019\"],\n        properties: {\n            code2110_minfin_ru_66n: { type: 'integer', label: '' },\n            code1100_minfin_ru_66n: { type: 'integer', label: '' },\n            code1200_minfin_ru_66n: { type: 'integer', label: '' },\n            code1300_minfin_ru_66n: { type: 'integer', label: '' },\n            code1400_minfin_ru_66n: { type: 'integer', label: '' },\n            code1500_minfin_ru_66n: { type: 'integer', label: '' },\n            // additionalInfo: {\n            //     type: 'string',\n            //     label: \"Комментарий\",\n            //     // uniforms: { component: 'LongTextField' }\n            // }\n        },\n        required: ['code2110_minfin_ru_66n', 'code1100_minfin_ru_66n', \"code1200_minfin_ru_66n\", \"code1300_minfin_ru_66n\", \"code1400_minfin_ru_66n\", \"code1500_minfin_ru_66n\"]\n    }\n\n];\n\nexport default () => {\n    const [page, setPage] = useState(0);\n    const [show, setShow] = useState(true);\n    const [slideObject, setSlideObject] = useState(taskSlides[0]);\n\n    React.useEffect(() => {\n        setShow(false);\n        setSlideObject(taskSlides[page]);\n        const timer = setTimeout(() => {\n            setShow(true);\n        }, 0);\n        return () => clearTimeout(timer);\n      }, [page]);\n\n     console.log(taskSlides[page]);\n\n       return <>\n        <Header siteTitle={\"Econolabs\"} />\n\n        <Row>\n            <Col sm=\"3\">\n                <ButtonGroup vertical className=\"m-5\" size=\"sm\" style={{ with: \"100%\" }}>\n                    {taskSlides.map((slideObject, index) =>\n                        <Button key={index} variant=\"outline-secondary\" onClick={() => setPage(index)}>{slideObject.title}</Button>\n                    )}\n                </ButtonGroup>\n            </Col>\n            <Col sm=\"9\"><Container>\n                {show ? <LocalForageUniforms uniformSchema={slideObject} /> : null}\n            </Container></Col>\n        </Row>\n\n    </>\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"sourceRoot":""}