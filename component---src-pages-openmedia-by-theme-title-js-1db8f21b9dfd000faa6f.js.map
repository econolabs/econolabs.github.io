{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Badge.js","webpack:///./src/pages/openmedia_by_theme_title.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/mediatemplates/ShowMedia.js"],"names":["Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","OpenMediaByTheme","useFirebaseNode","usersCraft","data","loading","error","allposts","Object","keys","forEach","openmedia_key","push","uniqueThemes","Set","map","item","theme","index","ResultsByTheme","key","theme_posts","filter","React","useState","open","setOpen","uniqueTitles","title","Header","Body","onClick","aria-controls","aria-expanded","length","in","id","ResultsByTitle","title_posts","openTitle","setOpenTitle","post","CollapsablePost","user","htmlfeedback","ReactHtmlParser","comment","type","datafirenode","content","siteTitle","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","objectFit","Layout","children","site","siteMetadata","maxWidth","padding","Date","getFullYear","author","ShowMedia","mediaItems","console","log","mediaItem","mediaItemsIndex","GetReadyScatterQuotesApexChart","firenode","GetReadyDatalineQuotesApexChart","ShowImages","urls","images","series","scatter","options","line","name","line_point"],"mappings":"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","file":"component---src-pages-openmedia-by-theme-title-js-1db8f21b9dfd000faa6f.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\";\nimport ReactHtmlParser from 'react-html-parser'; //, { processNodes, convertNodeToElement, htmlparser2 }\n\nimport ShowMedia from \"../mediatemplates/ShowMedia\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport Layout from \"../components/layout\"\nimport Button from 'react-bootstrap/Button'\nimport Collapse from 'react-bootstrap/Collapse'\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\n\nexport default function OpenMediaByTheme() {\n    const { data: usersCraft, loading, error } = useFirebaseNode('openmedia');\n\n    if (!!loading || !usersCraft) { return <Layout><div>...</div></Layout> }\n\n    if (!!error) { return <Layout><div>:-(</div></Layout> }\n\n    let allposts = [];\n    Object.keys(usersCraft).forEach(openmedia_key => { allposts.push(usersCraft[openmedia_key]) });\n\n    //  console.log(allposts);\n\n    const uniqueThemes = !!allposts ? [...new Set(allposts.map(item => item.theme))] : []; // [ 'A', 'B']\n\n    // console.log(uniqueThemes);\n\n    return <Layout>\n        {uniqueThemes.map((theme, index) => <ResultsByTheme key={theme} theme={theme} index={index} theme_posts={allposts.filter(item => item.theme === theme)} />)}\n    </Layout>\n}\n\nfunction ResultsByTheme(props) {\n    const [open, setOpen] = React.useState(false);\n\n    const uniqueTitles = !!props.theme_posts ? [...new Set(props.theme_posts.map(item => item.title))] : [];\n    return (\n        <Card className=\"m-3\">\n            <Card.Header>{props.theme}</Card.Header>\n            <Card.Body>\n                <Button\n                    onClick={() => setOpen(!open)}\n                    aria-controls={\"collapse-theme\" + props.index}\n                    aria-expanded={open}\n                    variant=\"outline-secondary\"\n                    className=\"m-2\"\n                >\n                    {props.theme} <Badge variant=\"secondary\">{props.theme_posts.length}</Badge>\n                </Button>\n                <Collapse in={open}>\n                    <div id={\"collapse-theme\" + props.index}>\n                        {uniqueTitles.map((title, index) => <ResultsByTitle index={index} title={title} title_posts={props.theme_posts.filter(item => item.title === title)} />)}\n                    </div>\n                </Collapse>\n            </Card.Body>\n        </Card>\n\n    );\n}\n\nfunction ResultsByTitle(props) {\n    const [openTitle, setOpenTitle] = React.useState(false);\n\n    return <div key={props.title}>\n        <Button\n            onClick={() => setOpenTitle(!openTitle)}\n            aria-controls={\"collapse-theme\" + props.index}\n            aria-expanded={openTitle}\n            variant=\"outline-secondary\"\n            className=\"m-1\"\n        >\n            {props.title} <Badge variant=\"secondary\">{props.title_posts.length}</Badge>\n        </Button>\n\n        <Collapse in={openTitle}>\n            <div id={\"collapse-theme\" + props.index}>\n                {props.title_posts.map(post => <CollapsablePost post={post} />)}\n            </div>\n        </Collapse>\n    </div>\n}\n\nfunction CollapsablePost(props) {\n    const [open, setOpen] = React.useState(false);\n\n    return <Card className=\"mt-1\">\n        <Card.Header>{props.post.user}</Card.Header>\n        <Card.Body>\n            <Button\n                onClick={() => setOpen(!open)}\n                aria-controls={\"collapse-post\" + props.post.id}\n                aria-expanded={open}\n                variant=\"outline-secondary\"\n            >\n                {open ? 'Свернуть' : 'Раскрыть'}\n            </Button>\n            <Collapse in={open}>\n                <div id={\"collapse-post\" + props.post.id}>\n                    {!!props.post?.htmlfeedback ? ReactHtmlParser(props.post.htmlfeedback) : props.post?.comment}\n                    {props.post.type === \"media\" ? (\n                        <ShowMedia datafirenode={\"/openmediadata/\" + props.post.content} />) : null}\n                </div>\n            </Collapse>\n        </Card.Body>\n    </Card>\n\n}","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          © {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\n\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport ScatterQuotesApexChart from \"./ScatterQuotesApexChart\";\nimport DatalineQuotesApexChart from \"./DatalineQuotesApexChart\";\n\nimport Image from \"react-bootstrap/Image\";\n\nexport default function ShowMedia(props) {\n    const { data: mediaItems, loading, error } = useFirebaseNode(\n      props.datafirenode\n    );\n    //  console.log(props.content, mediaItems);\n  \n    if (!!loading || !mediaItems) {\n      return <div>...</div>;\n    }\n    if (!!error) {\n      return <div>:-)</div>;\n    }\n    \n    console.log(mediaItems);\n\n    return (\n      <div>\n        {Object.keys(mediaItems).map((mediaItem, mediaItemsIndex) => {\n          if (\n            mediaItem === \"scatterquotesapexchart\" ||\n            mediaItem === \"scatterquotesapexchartoptions\"\n          ) { return <GetReadyScatterQuotesApexChart key={mediaItemsIndex} firenode={mediaItems[mediaItem]} /> }\n          if (\n            mediaItem === \"datalinequotesapexchart\" ||\n            mediaItem === \"datalinequotesapexchartoptions\"\n          ) { return <GetReadyDatalineQuotesApexChart key={mediaItemsIndex} firenode={mediaItems[mediaItem]} /> }\n  \n          if (mediaItem === \"images\") { return <ShowImages key={mediaItemsIndex} urls={mediaItems.images.urls} /> }\n  \n          return null;\n        })}\n      </div>\n    );\n  }\n\n    \n  function GetReadyScatterQuotesApexChart({ firenode }) {\n    let series = Object.keys(firenode.series).map(\n      (scatter) => {\n        return [\n          firenode[\"series\"][scatter][0],\n          firenode[\"series\"][scatter][1],\n        ];\n      }\n    );\n    //       console.log(series)\n    return <ScatterQuotesApexChart series={series} options={\n      !!firenode?.options\n        ? firenode.options\n        : {}\n    } />\n  }\n  \n  \n  \n  function GetReadyDatalineQuotesApexChart({ firenode }) {\n    let series = Object.keys(firenode.series).map((line) => {\n      return {\n        name: firenode[\"series\"][line][\"name\"],\n        data: Object.keys(\n          firenode[\"series\"][line][\"data\"]\n        ).map((line_point) => {\n          return [\n            firenode[\"series\"][line][\"data\"][line_point][0],\n            firenode[\"series\"][line][\"data\"][line_point][1],\n          ];\n        }),\n      };\n    });\n //    console.log(series);\n    return <DatalineQuotesApexChart\n      series={series}\n      options={\n        !!firenode?.options\n          ? firenode.options\n          : {}\n      }\n    />\n  }\n  \n  function ShowImages({ urls }) {\n    return <>\n      {urls?.[0] ? <Image src={urls[0]} /> : null}\n      {urls?.[1] ? <Image src={urls[1]} /> : null}\n      {urls?.[2] ? <Image src={urls[2]} /> : null}\n      {urls?.[3] ? <Image src={urls[3]} /> : null}\n      {urls?.[4] ? <Image src={urls[4]} /> : null}\n    </>\n  }\n  "],"sourceRoot":""}