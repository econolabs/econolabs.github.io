{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/react-bootstrap/esm/Image.js","webpack:///./src/pages/myworkbook.js","webpack:///./src/hooks/useFirebaseNode.js"],"names":["Header","siteTitle","className","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","defaultProps","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","Image","forwardRef","_ref","ref","bsPrefix","fluid","rounded","roundedCircle","thumbnail","props","classes","createElement","displayName","MyWokBook","userEmail","useSelector","selectApplication","email","replace","avatarUrl","user","useFirebaseNode","userPosts","loading","error","Object","keys","map","item","uniqueThemes","Set","theme","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","key","Alert","variant","quiz","xlArray","type","content","createProtoArray","id","source","quizString","answer","date","escapeHtml","Table","striped","bordered","hover","column","columnIndex","alphabet","row","rowIndex","ShowMedia","datafirenode","mediaItems","mediaItem","mediaItemsIndex","GetReadyScatterQuotesApexChart","firenode","GetReadyDatalineQuotesApexChart","ShowImages","urls","images","series","scatter","ScatterQuotesApexChart","options","line","name","line_point","DatalineQuotesApexChart","url","useState","undefined","status","setStatus","fetchNow","firebase","database","once","then","snapshot","val","catch","useEffect"],"mappings":"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","file":"component---src-pages-myworkbook-js-e756e2d3937f2a029f70.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          Â© {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport firebase from \"gatsby-plugin-firebase\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport { useSelector } from \"react-redux\";\n\nimport Layout from \"../components/layout\";\nimport { selectApplication } from \"../features/application/applicationSlice\";\n\nimport { alphabet } from \"../features/spreadsheet/AlphabetRow\";\nimport { createProtoArray } from \"../features/spreadsheet/spreadsheetSlice\";\n\nimport ScatterQuotesApexChart from \"../mediatemplates/ScatterQuotesApexChart\";\nimport DatalineQuotesApexChart from \"../mediatemplates/DatalineQuotesApexChart\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\n\nexport default function MyWokBook() {\n  // const [data, setData] = React.useState(null);\n  const email = useSelector(selectApplication).email;\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n  const avatarUrl = useSelector(selectApplication).avatarUrl;\n  const user = useSelector(selectApplication).user;\n\n  const { data: userPosts, loading, error } = useFirebaseNode(\n    \"usersCraft/\" + userEmail + \"/posts/\"\n  );\n\n  if (!!loading || !userPosts) {\n    return <Layout>...</Layout>;\n  }\n  if (!!error) {\n    return <Layout>:-(</Layout>;\n  }\n\n  // React.useEffect(() => {\n  //     firebase\n  //         .database()\n  //         .ref('usersCraft/' + userEmail + '/posts/')\n  //         .once(\"value\")\n  //         .then(snapshot => {\n  //             let userPosts = [];\n  //             snapshot.forEach(function (childSnapshot) {\n  //                 // key will be \"ada\" the first time and \"alan\" the second time\n  //                 //     var key = childSnapshot.key;\n  //                 // childData will be the actual contents of the child\n  //                 let childData = childSnapshot.val();\n  //                 userPosts.push(childData);\n  //             });\n  //             setData(userPosts);\n  //             //           console.log(userPosts);\n  //         })\n  //         .catch(err => console.log(err));\n\n  // }, [])\n\n  let data = Object.keys(userPosts).map((item) => {\n    return userPosts[item];\n  });\n  const uniqueThemes = !!data\n    ? [...new Set(data.map((item) => item.theme))]\n    : []; // [ 'A', 'B']\n\n  return (\n    <Layout>\n      <div className=\"media border p-3 mb-5\">\n        <img\n          src={avatarUrl}\n          alt=\"\"\n          className=\"m-3\"\n          style={{\n            verticalAlign: \"middle\",\n            width: \"60px\",\n            height: \"60px\",\n            borderRadius: \"50%\",\n            filter: \"grayscale(100%)\",\n            objectFit: \"cover\",\n          }}\n        />\n        <div className=\"media-body\">\n          <h4>\n            {user}{\" \"}\n            <small>\n              <i>\n                {new Intl.DateTimeFormat(\"ru\", {\n                  weekday: \"short\",\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"numeric\",\n                  hour: \"numeric\",\n                  minute: \"numeric\",\n                }).format(new Date())}\n              </i>\n            </small>\n          </h4>\n          <p>Ð Ð°Ð±Ð¾ÑÐ°Ñ ÑÐµÑÑÐ°Ð´Ñ</p>\n        </div>\n      </div>\n      <div>\n        {!!uniqueThemes &&\n          uniqueThemes.map((theme) => (\n            <div key={theme}>\n              <Alert variant=\"primary\">{theme}</Alert>\n              {data\n                .filter((quiz) => quiz.theme === theme)\n                .map((quiz) => {\n                  let xlArray =\n                    quiz.type === \"spreadsheet\" && !!quiz?.content\n                      ? createProtoArray(quiz.content, 0, 0)\n                      : null;\n                  //      user: user, avatarUrl: !!avatarUrl ? avatarUrl : null,\n\n                  return (\n                    <div key={quiz.id}>\n                      <Alert variant=\"secondary\" className=\"mt-3\">\n                        {!!quiz.avatarUrl ? (\n                          <img\n                            src={quiz.avatarUrl}\n                            alt=\"\"\n                            className=\"m-2\"\n                            style={{\n                              verticalAlign: \"middle\",\n                              width: \"50px\",\n                              height: \"50px\",\n                              borderRadius: \"50%\",\n                              filter: \"grayscale(100%)\",\n                              objectFit: \"cover\",\n                            }}\n                          />\n                        ) : null}\n                        {quiz.title}\n                      </Alert>\n                      <ReactMarkdown\n                        source={\n                          quiz.quizString +\n                          `<br><span>ÐÑÐ²ÐµÑ: ${quiz.answer\n                          }</span><span class=\"ml-5\">ÐÐ°ÑÐ°/Ð²ÑÐµÐ¼Ñ: ${quiz.date\n                          }</span><br>${!!quiz.user ? \"Ð ÐµÑÐµÐ½Ð¾: \" + quiz.user : \"\"\n                          }`\n                        }\n                        escapeHtml={false}\n                      />\n                      {quiz.type === \"spreadsheet\" && !!xlArray ? (\n                        <Table striped bordered hover>\n                          <thead>\n                            <tr>\n                              <th> </th>\n                              {xlArray[0].map((column, columnIndex) => (\n                                <th key={columnIndex} className=\"text-center\">\n                                  {alphabet[columnIndex]}\n                                </th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {xlArray.map((row, rowIndex) => (\n                              <tr key={rowIndex}>\n                                <td>\n                                  {\" \"}\n                                  <small className=\"ml-1\">{rowIndex + 1}</small>\n                                </td>\n                                {row.map((column, columnIndex) => (\n                                  <td key={rowIndex + columnIndex}>\n                                    <small>{row[columnIndex]}</small>\n                                  </td>\n                                ))}\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      ) : null}\n\n                      {quiz.type === \"media\" ? (\n                        <ShowMedia\n                          datafirenode={\n                            \"/usersCraft/\" + userEmail + \"/data/\" + quiz.content\n                          }\n                        />\n                      ) : null}\n                    </div>\n                  );\n                })}\n            </div>\n          ))}\n      </div>\n    </Layout>\n  );\n}\n\nfunction ShowMedia(props) {\n  const { data: mediaItems, loading, error } = useFirebaseNode(\n    props.datafirenode\n  );\n  //  console.log(props.content, mediaItems);\n\n  if (!!loading || !mediaItems) {\n    return <div>...</div>;\n  }\n  if (!!error) {\n    return <div>:-)</div>;\n  }\n\n  return (\n    <div>\n      {Object.keys(mediaItems).map((mediaItem, mediaItemsIndex) => {\n        if (\n          mediaItem === \"scatterquotesapexchart\" ||\n          mediaItem === \"scatterquotesapexchartoptions\"\n        ) { return <GetReadyScatterQuotesApexChart key={mediaItemsIndex} firenode={mediaItems[mediaItem]} /> }\n        if (\n          mediaItem === \"datalinequotesapexchart\" ||\n          mediaItem === \"datalinequotesapexchartoptions\"\n        ) { return <GetReadyDatalineQuotesApexChart key={mediaItemsIndex} firenode={mediaItems[mediaItem]} /> }\n\n        if (mediaItem === \"images\") { return <ShowImages key={mediaItemsIndex} urls={mediaItems.images.urls} /> }\n\n        return null;\n      })}\n    </div>\n  );\n}\n\nfunction GetReadyScatterQuotesApexChart({ firenode }) {\n  let series = Object.keys(firenode.series).map(\n    (scatter) => {\n      return [\n        firenode[\"series\"][scatter][0],\n        firenode[\"series\"][scatter][1],\n      ];\n    }\n  );\n  //       console.log(series)\n  return <ScatterQuotesApexChart series={series} options={\n    !!firenode?.options\n      ? firenode.options\n      : {}\n  } />\n}\n\n\n\nfunction GetReadyDatalineQuotesApexChart({ firenode }) {\n  let series = Object.keys(firenode.series).map((line) => {\n    return {\n      name: firenode[\"series\"][line][\"name\"],\n      data: Object.keys(\n        firenode[\"series\"][line][\"data\"]\n      ).map((line_point) => {\n        return [\n          firenode[\"series\"][line][\"data\"][line_point][0],\n          firenode[\"series\"][line][\"data\"][line_point][1],\n        ];\n      }),\n    };\n  });\n  //           console.log(series);\n  return <DatalineQuotesApexChart\n    series={series}\n    options={\n      !!firenode?.options\n        ? firenode.options\n        : {}\n    }\n  />\n}\n\nfunction ShowImages({ urls }) {\n  return <>\n    {urls?.[0] ? <Image src={urls[0]} /> : null}\n    {urls?.[1] ? <Image src={urls[1]} /> : null}\n    {urls?.[2] ? <Image src={urls[2]} /> : null}\n    {urls?.[3] ? <Image src={urls[3]} /> : null}\n    {urls?.[4] ? <Image src={urls[4]} /> : null}\n  </>\n}\n","import { useState, useEffect } from \"react\";\nimport firebase from \"gatsby-plugin-firebase\";\n\nexport function useFirebaseNode(url, options) {\n  const [status, setStatus] = useState({\n    loading: false,\n    data: undefined,\n    error: undefined\n  });\n\n  function fetchNow(url, options) {\n    setStatus({ loading: true });\n    firebase\n      .database()\n      .ref(url)\n      .once(\"value\")\n      .then(snapshot => {\n        setStatus({ loading: false, data: snapshot.val() });\n      })\n      .catch((error) => {\n        setStatus({ loading: false, error });\n      });\n  }\n\n  useEffect(() => {\n    if (url) {\n      fetchNow(url, options);\n    }\n  }, []);\n\n  return { ...status, fetchNow };\n}\n"],"sourceRoot":""}