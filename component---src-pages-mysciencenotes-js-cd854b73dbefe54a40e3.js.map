{"version":3,"sources":["webpack:///./src/mediatemplates/ScienceNotesEditor.js","webpack:///./src/pages/mysciencenotes.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["ScienceNotesEditor","note","screenSize","email","useSelector","selectApplication","user","avatarUrl","useState","savedAnswer","setSavedAnswer","methods","useForm","defaultValues","content","handleSubmit","currentField","setCurrentField","console","log","onSubmit","data","length","userEmail","replace","idNote","id","firebase","database","ref","child","push","key","old_editions","val","last_edit","Object","keys","map","keyItem","postObject","type","deleted","date","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","Date","updates","update","then","setTimeout","window","location","reload","Container","ButtonGroup","aria-label","size","Button","variant","onClick","Form","ActiveField","name","label","block","disabled","useFormContext","Group","controlId","Label","className","Control","register","as","rows","MyScienceNotes","React","currentEditId","setCurrentEditId","useFirebaseNode","userNotes","loading","error","useMedia","notes","item","filter","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","inline","FormControl","ReactHtmlParser","title","cited_reference","plagiarism","Card","Header","h6","h5","h4","h3","h2","h1","Body","siteTitle","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","objectFit","defaultProps","Layout","children","useStaticQuery","site","siteMetadata","maxWidth","padding","getFullYear","author"],"mappings":"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","file":"component---src-pages-mysciencenotes-js-cd854b73dbefe54a40e3.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useForm, FormProvider, useFormContext } from \"react-hook-form\";\nimport firebase from \"gatsby-plugin-firebase\";\n\nimport { selectApplication } from \"../features/application/applicationSlice\";\n\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\n\nlet formFields = [\n    { id: 0, name: 'h1' },\n    { id: 1, name: 'h2' },\n    { id: 2, name: 'h3' },\n    { id: 3, name: 'h4' },\n    { id: 4, name: 'h5' },\n    { id: 5, name: 'h6' },\n    { id: 6, name: 'last_edit' },\n    { id: 7, name: 'cited_reference' }\n]\n\nfunction isObject(val) { if (val === null) { return false; } return ((typeof val === 'function') || (typeof val === 'object')); }\n\nexport default function ScienceNotesEditor({ note, screenSize }) {\n    const email = useSelector(selectApplication).email;\n    const user = useSelector(selectApplication).user;\n    const avatarUrl = useSelector(selectApplication)?.avatarUrl;\n    const [savedAnswer, setSavedAnswer] = useState(null);\n    const methods = useForm({ defaultValues: !!note?.content ? note.content : {} });\n    const { handleSubmit } = methods;\n    const [currentField, setCurrentField] = useState('last_edit');\n\n    console.log(note);\n\n\n    const onSubmit = data => {\n        console.log(data);\n\n        if (email.length > 6) {\n            let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n            let idNote = !!note?.id && note.id !== \"new\" ? note.id : firebase.database().ref(\"usersScience/\" + userEmail).child(\"notes\").push().key;\n\n            let old_editions = isObject(note?.content?.old_editions) ?\n                [...Object.keys(note.content.old_editions).map((keyItem) => { return note.content.old_editions[keyItem] }), data.last_edit]\n                : [data.last_edit];\n\n            console.log(old_editions);\n\n            let postObject = {\n                id: idNote, //Math.floor(Math.random() * 1001),\n                //         title: props.text,\n                //         theme: currentProjectTitle,\n                //         //    //     answer: value,\n                //         comment: currentProjectMediaAndDataAndTemplatesURL, //Тема\n                type: 'sciencenotes',\n                content: { ...data, old_editions },\n                //         quizString: 'Рассчитано по отчетности ' + currentProjectTitle + ' по адресу ' + currentProjectSourseDataURL,\n                deleted: false,\n                email: email,\n                user: user,\n                avatarUrl: !!avatarUrl ? avatarUrl : null,\n                date: new Intl.DateTimeFormat(\"ru\", {\n                    weekday: \"short\",\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"numeric\",\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                }).format(new Date()), //Date().toJSON()\n            };\n\n            console.log(postObject);\n\n            var updates = {};\n            updates[\"usersScience/\" + userEmail + \"/notes/\" + idNote] = postObject;\n\n            return firebase.database().ref().update(updates).then(() => {\n                setSavedAnswer(true);\n                setTimeout(window.location.reload(), 8000);\n            });\n\n        }\n    }\n\n\n\n\n    return <FormProvider {...methods}>\n\n        {screenSize === \"large\" ?\n            <Container>\n                <ButtonGroup aria-label=\"Basic example\" size=\"sm\">\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h1\")}>h1</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h2\")}>h2</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h3\")}>h3</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h4\")}>h4</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h5\")}>h5</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h6\")}>h6</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"last_edit\")}>Last Edit</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"cited_reference\")}>Cited Reference</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"plagiarism\")}>Plagiarism</Button>\n                </ButtonGroup>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    {(() => {\n                        switch (currentField) {\n                            case \"h1\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 1\"} />;\n                            case \"h2\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 2\"} />;\n                            case \"h3\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 3\"} />;\n                            case \"h4\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 4\"} />;\n                            case \"h5\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 5\"} />;\n                            case \"h6\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 6\"} />;\n                            case \"last_edit\": return <ActiveField key={currentField} name={currentField} label={\"Текст\"} />;\n                            case \"cited_reference\": return <ActiveField key={currentField} name={currentField} label={\"Источник\"} />;\n                            case \"plagiarism\": return <ActiveField key={currentField} name={currentField} label={\"Уникальность\"} />;\n                        }\n                    })()}\n                    <Button\n                        variant=\"outline-secondary\"\n                        type=\"submit\"\n                        size=\"sm\"\n                        block\n                        disabled={savedAnswer}\n                    >\n                        Сохранить\n                    </Button>\n                </Form>\n            </Container> :\n            <Container>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <ActiveField name={\"h6\"} label={\"Заголовок\"} />\n                    <ActiveField name={\"last_edit\"} label={\"Текст\"} />\n                    <ActiveField name={'cited_reference'} label={\"Источник\"} />\n                    <ActiveField name={'plagiarism'} label={\"Уникальность\"} />\n                    <Button\n                        variant=\"outline-secondary\"\n                        type=\"submit\"\n                        size=\"sm\"\n                        block\n                        disabled={savedAnswer}\n                    >\n                        Сохранить\n                    </Button>\n\n                </Form>\n\n            </Container>\n        }\n\n\n\n        {/* {formFields.map((item) =>\n                <ActiveField key={item.name} name={item.name} />\n            )} */}\n\n    </FormProvider>\n}\n\nfunction ActiveField({ name, label = null }) {\n    const methods = useFormContext();\n    return <Form.Group controlId={\"field_\" + name}>\n        <Form.Label className=\"small text-muted\">{!!label ? label : name}</Form.Label>\n        <Form.Control\n            {...methods.register(name)}\n            as=\"textarea\"\n            rows=\"3\"\n        />\n        {/* <Form.Text className=\"text-muted\">Пример: =NPV(0.1;100,200,300)-500</Form.Text> */}\n    </Form.Group>\n}\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\nimport { useSelector } from \"react-redux\";\n\nimport Layout from \"../components/layout\";\n\n//import DeleteFireNodeButton from \"../components/DeleteFireNodeButton\";\n// import MarkDeleteFireNodeButton from \"../components/MarkDeleteFireNodeButton\";\n\nimport { selectApplication } from \"../features/application/applicationSlice\";\nimport useMedia from \"../hooks/useMedia\";\n//import { createProtoArray } from \"../features/spreadsheet/spreadsheetSlice\";\n\n// import ShowMedia, { GetSeriesCategoriesOptionsForApexChart, GetReadyScatterApexChart, GetReadyDatalineQuotesApexChart } from \"../mediatemplates/ShowMedia\";\n// import ShowXlTableArrayOfArrays from \"../mediatemplates/ShowXlTableArrayOfArrays\";\n// import ShowXlTableWithPredefinedIndicators from \"../mediatemplates/ShowXlTableWithPredefinedIndicators\";\n// import PrepareDataFromDictionaryForChart, { GetReadyProcessBalanceStackedBars } from \"../mediatemplates/PrepareDataFromDictionaryForChart\";\n// import MediaTemplatesAccountingWithProfitsCash from \"../mediatemplates/MediaTemplatesAccountingWithProfitsCash\";\n\nimport ScienceNotesEditor from \"../mediatemplates/ScienceNotesEditor\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\n\nimport { SVGBootstrapIconPencilSquare, SVGBootstrapIconSearch } from \"../svgs\";\n\n\nimport ReactHtmlParser from 'react-html-parser'; //, { processNodes, convertNodeToElement, htmlparser2 }\n\nimport \"../mediatemplates/ScienceNotes.css\";\n\n\n\nfunction cardTitle(content) {\n  if (!!content?.h6) { return content.h6 }\n  if (!!content?.h5) { return content.h5 }\n  if (!!content?.h4) { return content.h4 }\n  if (!!content?.h3) { return content.h3 }\n  if (!!content?.h2) { return content.h2 }\n  if (!!content?.h1) { return content.h1 }\n  return \"Заголовок\"\n}\n\nexport default function MyScienceNotes() {\n  // const [data, setData] = React.useState(null);\n  const email = useSelector(selectApplication).email;\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n  const avatarUrl = useSelector(selectApplication).avatarUrl;\n  const user = useSelector(selectApplication).user;\n  const [currentEditId, setCurrentEditId] = React.useState(null);\n\n  const { data: userNotes, loading, error } = useFirebaseNode(\n    \"usersScience/\" + userEmail + \"/notes/\"\n  );\n  const screenSize = useMedia(\n    // Media queries\n    [\"(min-width: 810px)\", \"(min-width: 400px)\", \"(min-width: 100px)\"],\n    // Column counts (relates to above media queries by array index)\n    [\"large\", \"medium\", \"small\"],\n    // Default column count\n    \"large\"\n  );\n\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  if (!!loading || !userNotes) { return <Layout>...</Layout> }\n  if (!!error) { return <Layout>:-(</Layout> }\n\n  let notes = Object.keys(userNotes).map((item) => { return userNotes[item] });\n\n  // const uniqueThemes = !!data ? [...new Set(data.map((item) => item.theme))] : []; // [ 'A', 'B']\n\n  if (!!currentEditId) {\n    return <Layout>\n      <ScienceNotesEditor note={currentEditId === \"new\" ? { id: \"new\" } : notes.filter(note => note.id === currentEditId)[0]} screenSize={screenSize} />\n    </Layout>\n    //    return <SmallScreenCalculations />;\n  }\n\n\n  if (screenSize === \"medium\") {\n    return <Layout>\n      <Navbar bg=\"light\" expand=\"sm\" sticky=\"top\" className=\"mb-2\">\n        <Navbar.Brand >Notes</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={() => setCurrentEditId(\"new\")}>+</Nav.Link>\n            {/* <Nav.Link href=\"#link\">Link</Nav.Link>\n      <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n      </NavDropdown> */}\n          </Nav>\n\n          <Form inline onSubmit={handleSubmit(onSubmit)}>\n            <FormControl {...register(\"search_string\")} className=\"mr-2\" size=\"sm\" />\n            <Button variant=\"outline-secondary\" type=\"submit\"><SVGBootstrapIconSearch /></Button>\n          </Form>\n\n        </Navbar.Collapse>\n      </Navbar>\n      {!!notes && notes.map(note =>\n        <div key={note.id}>\n          <small className=\"line-clamp\">{ReactHtmlParser(note.content.last_edit)}</small>\n          <br />\n          <Button variant=\"outline-light\" size=\"sm\" onClick={() => setCurrentEditId(note.id)}> <SVGBootstrapIconPencilSquare /></Button>\n          <cite title=\"cited_reference\"><small>{note.content.cited_reference}</small></cite>\n          {\"   \"}\n          <cite title=\"plagiarism\"><small>{note.content.plagiarism}</small></cite>\n          \n          <hr />\n        </div>\n\n      )}\n    </Layout>\n    //    return <SmallScreenCalculations />;\n  }\n\n  return (\n    <Layout>\n\n      <Navbar bg=\"light\" expand=\"sm\" sticky=\"top\" className=\"mb-2\">\n        <Navbar.Brand >Notes</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={() => setCurrentEditId(\"new\")}>+</Nav.Link>\n            {/* <Nav.Link href=\"#link\">Link</Nav.Link>\n      <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n      </NavDropdown> */}\n          </Nav>\n          <Form inline onSubmit={handleSubmit(onSubmit)}>\n            <FormControl {...register(\"search_string\")} className=\"mr-2\" />\n            <Button variant=\"outline-secondary\" type=\"submit\"><SVGBootstrapIconSearch /></Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Container>\n        {!!notes && notes.map(note =>\n          <Card key={note.id} className=\"mb-1\">\n            <Card.Header>\n              <Button variant=\"outline-light\" size=\"sm\" onClick={() => setCurrentEditId(note.id)}> <SVGBootstrapIconPencilSquare /></Button>\n              <span className=\"ml-2\" >{cardTitle(note.content)}</span>\n            </Card.Header>\n            <Card.Body>\n              {/* <Card.Title>Special title treatment</Card.Title> */}\n              <blockquote className=\"blockquote mb-0\">\n                <small className=\"line-clamp\">{!!note?.content?.last_edit ? ReactHtmlParser(note.content.last_edit) : \"-\"}</small>\n\n                {!!note?.content?.cited_reference ?\n                  <footer className=\"blockquote-footer\">\n                    <cite title=\"Сited_Reference\"> {note.content.cited_reference}</cite>\n                  </footer>\n                  : null}\n\n                {!!note?.content?.plagiarism ?\n                  <footer className=\"blockquote-footer\">\n                    <cite title=\"Plagiarism\"> {note.content.plagiarism}</cite>\n                  </footer>\n                  : null}\n\n              </blockquote>\n              {/* <Card.Text>{note.content.h3}</Card.Text> */}\n\n            </Card.Body>\n          </Card>\n        )}\n      </Container>\n    </Layout>\n  );\n}\n\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          © {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}