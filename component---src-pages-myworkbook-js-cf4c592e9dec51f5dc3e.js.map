{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/myworkbook.js","webpack:///./src/mediatemplates/ShowXlTableWithPredefinedIndicators.js"],"names":["Header","siteTitle","className","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","defaultProps","Layout","children","data","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","MyWorkBook","userEmail","useSelector","selectApplication","email","replace","avatarUrl","user","useFirebaseNode","userPosts","loading","error","Object","keys","map","item","uniqueThemes","Set","theme","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","key","variant","quiz","id","type","val","quizString","ReactHtmlParser","xlArray","createProtoArray","comment","answer","date","htmlfeedback","content","deleted","firenode","mediaItem","datafirenode","records","mediaItems","ShowXlTableWithPredefinedIndicators","projectData","projectDataArray","tableWithData","doFindValuesForArrayOfArraysTable","striped","bordered","hover","size","column","columnIndex","row","rowIndex"],"mappings":"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","file":"component---src-pages-myworkbook-js-cf4c592e9dec51f5dc3e.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          Â© {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\nimport { useSelector } from \"react-redux\";\n\nimport Layout from \"../components/layout\";\n\n//import DeleteFireNodeButton from \"../components/DeleteFireNodeButton\";\n// import MarkDeleteFireNodeButton from \"../components/MarkDeleteFireNodeButton\";\n\nimport { selectApplication } from \"../features/application/applicationSlice\";\nimport { createProtoArray } from \"../features/spreadsheet/spreadsheetSlice\";\n\nimport ShowMedia, { GetSeriesCategoriesOptionsForApexChart, GetReadyScatterApexChart, GetReadyDatalineQuotesApexChart } from \"../mediatemplates/ShowMedia\";\nimport ShowXlTableArrayOfArrays from \"../mediatemplates/ShowXlTableArrayOfArrays\";\nimport ShowXlTableWithPredefinedIndicators from \"../mediatemplates/ShowXlTableWithPredefinedIndicators\";\nimport PrepareDataFromDictionaryForChart, { GetReadyProcessBalanceStackedBars } from \"../mediatemplates/PrepareDataFromDictionaryForChart\";\nimport MediaTemplatesAccountingWithProfitsCash from \"../mediatemplates/MediaTemplatesAccountingWithProfitsCash\";\n\n\n\n\nimport Alert from \"react-bootstrap/Alert\";\n\nimport ReactHtmlParser from 'react-html-parser'; //, { processNodes, convertNodeToElement, htmlparser2 }\n\nfunction isObject(val) {\n  if (val === null) { return false; }\n  return ((typeof val === 'function') || (typeof val === 'object'));\n}\n\n\nexport default function MyWorkBook() {\n  // const [data, setData] = React.useState(null);\n  const email = useSelector(selectApplication).email;\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n  const avatarUrl = useSelector(selectApplication).avatarUrl;\n  const user = useSelector(selectApplication).user;\n\n  const { data: userPosts, loading, error } = useFirebaseNode(\n    \"usersCraft/\" + userEmail + \"/posts/\"\n  );\n\n  if (!!loading || !userPosts) {\n    return <Layout>...</Layout>;\n  }\n  if (!!error) {\n    return <Layout>:-(</Layout>;\n  }\n  let data = Object.keys(userPosts).map((item) => {\n    return userPosts[item];\n  });\n  const uniqueThemes = !!data ? [...new Set(data.map((item) => item.theme))] : []; // [ 'A', 'B']\n\n  return (\n    <Layout>\n      <div className=\"media border p-3 mb-5\">\n        <img\n          src={avatarUrl}\n          alt=\"\"\n          className=\"m-3\"\n          style={{\n            verticalAlign: \"middle\",\n            width: \"60px\",\n            height: \"60px\",\n            borderRadius: \"50%\",\n            filter: \"grayscale(100%)\",\n            objectFit: \"cover\",\n          }}\n        />\n        <div className=\"media-body\">\n          <h4>\n            {user}{\" \"}\n            <small>\n              <i>\n                {new Intl.DateTimeFormat(\"ru\", {\n                  weekday: \"short\",\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"numeric\",\n                  hour: \"numeric\",\n                  minute: \"numeric\",\n                }).format(new Date())}\n              </i>\n            </small>\n          </h4>\n          <p>Ð Ð°Ð±Ð¾ÑÐ°Ñ ÑÐµÑÑÐ°Ð´Ñ</p>\n        </div>\n      </div>\n      <div>\n        {!!uniqueThemes &&\n          uniqueThemes.map((theme) => (\n            <div key={theme}>\n              <Alert variant=\"primary\">{theme}</Alert>\n              {data\n                .filter((quiz) => quiz.theme === theme)\n                .map((quiz) => {\n                  return (\n                    <div key={quiz.id}>\n                      <Alert variant=\"secondary\" className=\"mt-3\">\n                        {!!quiz.avatarUrl ? (\n                          <img\n                            src={quiz.avatarUrl}\n                            alt=\"\"\n                            className=\"m-2\"\n                            style={{\n                              verticalAlign: \"middle\",\n                              width: \"50px\",\n                              height: \"50px\",\n                              borderRadius: \"50%\",\n                              filter: \"grayscale(100%)\",\n                              objectFit: \"cover\",\n                            }}\n                          />\n                        ) : null}\n                        {quiz.title}\n                      </Alert>\n                      <div>\n                        {quiz.type === \"accountingwithprofitscash\" && isObject(quiz.quizString) ? <ShowXlTableArrayOfArrays xlArray={createProtoArray(quiz.quizString, 0, 0)} /> : ReactHtmlParser(quiz.quizString)}\n                        {ReactHtmlParser(`<br><span>ÐÑÐ²ÐµÑ: ${quiz.type === \"calculation\" ? quiz.comment : quiz.answer}</span>\n                          <span class=\"ml-5\">ÐÐ°ÑÐ°/Ð²ÑÐµÐ¼Ñ: ${quiz.date}</span><br>\n                          ${!!quiz.user ? \"Ð ÐµÑÐµÐ½Ð¾: \" + quiz.user : \"\"}\n                          `)}\n                      </div>\n                      {/* <DeleteFireNodeButton nodeRef={\"usersCraft/\" + userEmail + \"/posts/\"} id={quiz.id}/> \n                      <MarkDeleteFireNodeButton nodeRef={\"usersCraft/\" + userEmail + \"/posts/\"} id={quiz.id}/>  */}\n\n                      {quiz?.htmlfeedback && <div>{ReactHtmlParser(quiz.htmlfeedback)}</div>}\n\n                      {quiz.type === \"spreadsheet\" && !!quiz?.content && <ShowXlTableArrayOfArrays xlArray={createProtoArray(quiz.content, 0, 0)} />}\n\n                      {quiz.type === \"calculation\" && <ShowXlTableWithPredefinedIndicators quiz={quiz} xlArray={createProtoArray(quiz.content, 0, 0)} />}\n\n                      {quiz.type === \"balancestackedbars\" && <GetReadyProcessBalanceStackedBars quiz={quiz} />}\n\n                      {(quiz.type === \"balancestackedbarswithpredefinedindicators\" ||\n                        quiz.type === \"arraycategoriesbarapexchartwithpredefinedindicators\" ||\n                        quiz.type === \"arraycategorieslineapexchartwithpredefinedindicators\"\n                      ) && quiz?.deleted !== true && <PrepareDataFromDictionaryForChart quiz={quiz} />}\n\n                      {(quiz.type === \"html\" || quiz.type === \"markdown\") && <div>{ReactHtmlParser(quiz.content)}</div>}\n\n                      {(quiz.type === \"datetimebarapexchart\" || quiz.type === \"datetimelineapexchart\" ||\n                        quiz.type === \"arraycategorieslineapexchart\" || quiz.type === \"arraycategoriesbarapexchart\")\n                        && quiz?.deleted !== true && <GetSeriesCategoriesOptionsForApexChart firenode={quiz.content} mediaItem={quiz.type} />\n                      }\n\n                      {(quiz.type === \"scatterquotesapexchart\" || quiz.type === \"scatterquotesapexchartoptions\" ||\n                        quiz.type === \"scatterapexchart\") && quiz?.deleted !== true && <GetReadyScatterApexChart firenode={quiz.content} />\n                      }\n\n                      {(quiz.type === \"datalinequotesapexchart\" || quiz.type === \"datalinequotesapexchartoptions\" ||\n                        quiz.type === \"datetimeareanocategoriesapexchart\") && quiz?.deleted !== true && <GetReadyDatalineQuotesApexChart firenode={quiz.content} />\n                      }\n\n\n                      {quiz.type === \"media\" ? <ShowMedia datafirenode={\"/usersCraft/\" + userEmail + \"/data/\" + quiz.content} /> : null}\n\n                      {quiz.type === \"accountingwithprofitscash\" ? <MediaTemplatesAccountingWithProfitsCash records={quiz.content} mediaItems={quiz.mediaItems} /> : null}\n\n\n                    </div>\n                  );\n                })}\n            </div>\n          ))}\n      </div>\n    </Layout>\n  );\n}\n\n","import React from \"react\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\n\nimport { doFindValuesForArrayOfArraysTable } from \"../features/data/dataSlice\";\n\nimport Table from \"react-bootstrap/Table\";\n\n\n\nexport default function ShowXlTableWithPredefinedIndicators({ quiz, xlArray }) {\n  const { data: projectData, loading, error } = useFirebaseNode('openmediadata/' + quiz.answer);\n\n  if (!!loading || !projectData) { return <div>...</div> }\n  if (!!error) { return <div>:-(</div> }\n\n  let projectDataArray = Object.keys(projectData)\n    .map((item) => { return projectData[item] })\n\n  // console.log(quiz);\n  // console.log(projectDataArray);\n\n  let tableWithData = doFindValuesForArrayOfArraysTable(projectDataArray, xlArray);\n  // console.log(tableWithData);\n\n\n  return <Table striped bordered hover size=\"sm\">\n    <thead>\n      <tr>\n        {tableWithData[0].map((column, columnIndex) => (\n          <th key={columnIndex} className=\"text-center\">\n            {tableWithData[0][columnIndex]}\n          </th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {tableWithData.map((row, rowIndex) => {\n        if (rowIndex > 0) {\n          return <tr key={rowIndex}>\n            {row.map((column, columnIndex) => (\n              <td key={rowIndex + columnIndex} >\n            <small className={\"ml-1\"}> {row[columnIndex]}</small>   {/* <small>{row[columnIndex]}</small>  */}\n              </td>\n            ))}\n          </tr>\n        }\n      })}\n    </tbody>\n  </Table>\n}\n\n\n"],"sourceRoot":""}