{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-pascaligo.min.js"],"names":["e","n","t","i","Prism","replace","languages","pascaligo","comment","string","pattern","greedy","RegExp","lookbehind","inside","keyword","builtin","number","operator","punctuation","reduce","forEach"],"mappings":"kFAQC,IAAUA,EACLC,EAGAC,EAyCAC,EArDN,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAEGH,EAmDTI,MAlDIH,EAAI,iCAAiCI,QAAQ,aAAa,WAC5D,MAAO,oDAELH,EAAIF,EAAEM,UAAUC,UAAY,CAC9BC,QAAS,0BACTC,OAAQ,CACNC,QAAS,8CACTC,QAAQ,GAEV,aAAc,CAAC,CACbD,QAASE,OAAO,oCAAoCP,QAAQ,WAAW,WACrE,OAAOJ,KACL,KACJY,YAAY,EACZC,OAAQ,MACP,CACDJ,QAASE,OAAO,sBAAsBP,QAAQ,WAAW,WACvD,OAAOJ,KACL,KACJa,OAAQ,MACP,CACDJ,QAASE,OAAO,gBAAgBP,QAAQ,WAAW,WACjD,OAAOJ,MAETY,YAAY,EACZC,OAAQ,OAEVC,QAAS,CACPL,QAAS,mIACTG,YAAY,GAEd,QAAW,CACTH,QAAS,8BACTG,YAAY,GAEdG,QAAS,CACPN,QAAS,4DACTG,YAAY,GAEd,SAAY,gBACZI,OAAQ,CAAC,6BAA8B,4CACvCC,SAAU,2EACVC,YAAa,4BAEXhB,EAAI,CAAC,UAAW,UAAW,UAAW,WAAY,eAAeiB,QAAO,SAAUpB,EAAGC,GACvF,OAAOD,EAAEC,GAAKC,EAAED,GAAID,IACnB,IACHE,EAAE,cAAcmB,SAAQ,SAAUrB,GAChCA,EAAEc,OAASX","file":"279-512c6d61a98650b11ff2.js","sourcesContent":["require(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n!function (e) {\n  var n = \"(?:\\\\w+(?:<braces>)?|<braces>)\".replace(/<braces>/g, function () {\n    return \"\\\\((?:[^()]|\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\))*\\\\)\";\n  }),\n      t = e.languages.pascaligo = {\n    comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n    string: {\n      pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n      greedy: !0\n    },\n    \"class-name\": [{\n      pattern: RegExp(\"(\\\\btype\\\\s+\\\\w+\\\\s+is\\\\s+)<type>\".replace(/<type>/g, function () {\n        return n;\n      }), \"i\"),\n      lookbehind: !0,\n      inside: null\n    }, {\n      pattern: RegExp(\"<type>(?=\\\\s+is\\\\b)\".replace(/<type>/g, function () {\n        return n;\n      }), \"i\"),\n      inside: null\n    }, {\n      pattern: RegExp(\"(:\\\\s*)<type>\".replace(/<type>/g, function () {\n        return n;\n      })),\n      lookbehind: !0,\n      inside: null\n    }],\n    keyword: {\n      pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n      lookbehind: !0\n    },\n    \"boolean\": {\n      pattern: /(^|[^&])\\b(?:True|False)\\b/i,\n      lookbehind: !0\n    },\n    builtin: {\n      pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n      lookbehind: !0\n    },\n    \"function\": /\\w+(?=\\s*\\()/i,\n    number: [/%[01]+|&[0-7]+|\\$[a-f\\d]+/i, /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i],\n    operator: /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n  },\n      i = [\"comment\", \"keyword\", \"builtin\", \"operator\", \"punctuation\"].reduce(function (e, n) {\n    return e[n] = t[n], e;\n  }, {});\n  t[\"class-name\"].forEach(function (e) {\n    e.inside = i;\n  });\n}(Prism);"],"sourceRoot":""}