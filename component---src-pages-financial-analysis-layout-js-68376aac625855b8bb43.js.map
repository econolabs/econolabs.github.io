{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Container.js","webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js","webpack:///./src/hooks/useDictionary.js","webpack:///./src/components/LocalForageFormik.js","webpack:///./src/pages/financial_analysis_layout.js","webpack:///./node_modules/react-bootstrap/esm/ButtonGroup.js"],"names":["Container","forwardRef","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","prefix","suffix","createElement","displayName","defaultProps","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","byteToHex","push","toString","substr","buf","offset_","offset","toLowerCase","options","rnds","random","i","useDictionary","allDictionaryCsv","LocalForageFormik","useState","isReady","setReady","formInitialValues","setFormInitialValues","currentTask","setCurrentTask","formDictionaryTitles","setFormDictionaryTitles","formDictionaryTypes","setFormDictionaryTypes","dictionary","useEffect","allDictionaryItems","edges","forEach","item","node","keys","formDictionaryTitlesObject","formDictionaryTypesObject","formFields","rows","filter","dictionaryItem","dictionaryId","comment","type","Promise","all","map","key","userCraft","getItem","then","value","catch","error","console","log","arr","Object","assign","initialValues","currenttask","columns","length","OneColumnFormikForm","ManyColumnsFormikForm","formColumns","formik","useFormik","onSubmit","values","actions","dataObjects","rowsItem","valuesKey","includes","nameBlocks","split","keyIninitialValues","element","currentObject","period","context","uuidv4","matches","valueKey","setItem","foundInitialValues","dictionaryIdObject","uid","setFieldValue","style","margin","maxWidth","padding","handleSubmit","Form","Group","Row","controlId","Label","column","sm","col","index","Col","FormControl","name","onChange","handleChange","onBlur","handleBlur","touched","errors","Button","disabled","isSubmitting","variant","page","setPage","siteTitle","ButtonGroup","vertical","size","with","onClick","toggle","_props$as","rest","baseClass","role"],"mappings":"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","file":"component---src-pages-financial-analysis-layout-js-68376aac625855b8bb43.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.function.bind\";\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction bytesToUuid(buf, offset_) {\n  var offset = offset_ || 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (byteToHex[buf[offset + 0]] + byteToHex[buf[offset + 1]] + byteToHex[buf[offset + 2]] + byteToHex[buf[offset + 3]] + '-' + byteToHex[buf[offset + 4]] + byteToHex[buf[offset + 5]] + '-' + byteToHex[buf[offset + 6]] + byteToHex[buf[offset + 7]] + '-' + byteToHex[buf[offset + 8]] + byteToHex[buf[offset + 9]] + '-' + byteToHex[buf[offset + 10]] + byteToHex[buf[offset + 11]] + byteToHex[buf[offset + 12]] + byteToHex[buf[offset + 13]] + byteToHex[buf[offset + 14]] + byteToHex[buf[offset + 15]]).toLowerCase();\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return bytesToUuid(rnds);\n}\n\nexport default v4;","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst useDictionary = () => { //allDataCsv\n  const data = useStaticQuery(graphql`\n  query MyDictionaryQuery {\n    allDictionaryCsv {\n      totalCount\n      edges {\n        node {\n        title\n        dictionaryId\n        comment\n        type\n        }\n       }\n     }\n   }    \n  `)\n  return data.allDictionaryCsv\n}\n\nexport default useDictionary;","import React, { useState, useEffect } from \"react\";\nimport { useFormik } from 'formik';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { userCraft } from \"../pages/login\"\nimport useDictionary from \"../hooks/useDictionary\";\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst getLocalForageDataByKeys = (keys) => {\n    return Promise.all([\"currenttask\", ...keys].map(key => {\n        return userCraft.getItem(key)\n            .then(value => {\n                return { [key]: value }\n            })\n            .catch(error => {\n                console.log(error)\n                return { [key]: null }\n            })\n    }))\n        .then(arr => { return Object.assign(...arr) })\n}\n\nfunction LocalForageFormik(props) {\n    const [isReady, setReady] = useState(false);\n    const [formInitialValues, setFormInitialValues] = useState({});\n    const [currentTask, setCurrentTask] = useState(null);\n    const [formDictionaryTitles, setFormDictionaryTitles] = useState({});\n    const [formDictionaryTypes, setFormDictionaryTypes] = useState({});\n    const dictionary = useDictionary();\n\n    useEffect(() => {\n        // userCraft.clear().then(function() { console.log('Database is now empty.');})\n        // .catch(function(err) { console.log(err); });\n\n        let allDictionaryItems = [];\n        dictionary.edges.forEach(item => {\n            allDictionaryItems.push(item.node);\n        });\n\n\n        let formDictionaryTitlesObject = {}\n        let formDictionaryTypesObject = {}\n        props.formFields?.rows && props.formFields.rows.forEach(item => {\n            formDictionaryTitlesObject[item] = allDictionaryItems.filter(dictionaryItem => dictionaryItem.dictionaryId === item)[0].comment || \"Показатель\";\n            formDictionaryTypesObject[item] = allDictionaryItems.filter(dictionaryItem => dictionaryItem.dictionaryId === item)[0].type || \"text\";\n        });\n        setFormDictionaryTitles(formDictionaryTitlesObject);\n        setFormDictionaryTypes(formDictionaryTypesObject);\n\n\n        getLocalForageDataByKeys(props.formFields?.rows ? props.formFields?.rows : [])\n            .then(initialValues => {\n                //     console.log(initialValues);\n                let { currenttask: currenttask, ...formInitialValues } = initialValues;\n                //     console.log(currenttask, formInitialValues);\n                setCurrentTask(currenttask);\n                setFormInitialValues(formInitialValues);\n                setReady(true)\n            }).catch(error => {\n                console.log(error) // do sth with error\n            })\n    }, [])\n\n    //  console.log(props);\n\n    if (isReady && props.formFields?.columns && props.formFields.columns.length === 1) return <Container>\n        <OneColumnFormikForm\n            formDictionaryTitles={formDictionaryTitles}\n            formDictionaryTypes={formDictionaryTypes}\n            formInitialValues={formInitialValues}\n            currentTask={currentTask} />\n    </Container>\n\n\n    if (isReady && props.formFields?.columns && props.formFields.columns.length > 1) return <ManyColumnsFormikForm\n        formDictionaryTitles={formDictionaryTitles}\n        formDictionaryTypes={formDictionaryTypes}\n        formInitialValues={formInitialValues}\n        formColumns={props.formFields.columns}\n        currentTask={currentTask}\n    />\n\n    return null\n}\n\nexport default LocalForageFormik\n\nfunction ManyColumnsFormikForm(props) {\n    const [isReady, setReady] = useState(false);\n\n    let currentTask = props.currentTask;\n\n    const formik = useFormik({\n        initialValues: {},\n        //   validationSchema: validationSchema,\n        onSubmit(values, actions) {\n            //      console.log(actions);\n            let dataObjects = {};\n            Object.keys(props.formInitialValues).map(rowsItem => {\n                //    console.log(rowsItem);\n                dataObjects[rowsItem] = { ...props.formInitialValues[rowsItem] };\n                Object.keys(values).map(valuesKey => {\n                    if (valuesKey.includes(rowsItem)) {\n                        let nameBlocks = valuesKey.split('_|_');\n                        //        console.log(nameBlocks[1]);\n                        //        console.log(values[valuesKey]);\n\n                        let keyIninitialValues = null\n                        !!props.formInitialValues[rowsItem] && Object.keys(props.formInitialValues[rowsItem]).forEach(element => {\n                            let currentObject = props.formInitialValues[rowsItem][element];\n                            if ((currentObject.currenttask === currentTask) && (currentObject.period === nameBlocks[1])) {\n                                keyIninitialValues = element;\n                            }\n                        });\n                        if (!!keyIninitialValues) {\n                            dataObjects[rowsItem][keyIninitialValues] =\n                            {\n                                currenttask: currentTask,\n                                period: nameBlocks[1],\n                                context: 'Default',\n                                value: values[valuesKey]\n                            };\n                            console.log(dataObjects[rowsItem]);\n                        } else {\n                            dataObjects[rowsItem][uuidv4()] =\n                            {\n                                currenttask: currentTask,\n                                period: nameBlocks[1],\n                                context: 'Default',\n                                value: values[valuesKey]\n                            };\n                            console.log(dataObjects[rowsItem]);\n                        }\n                    }\n                })\n            })\n            //  console.log(dataObjects);\n\n            let matches = []\n            for (let i in Object.keys(dataObjects)) {\n                let valueKey = Object.keys(dataObjects)[i];\n                // matches will be an array of promises\n                matches.push(userCraft.setItem(valueKey, dataObjects[valueKey]))\n            }\n            Promise.all(matches).then(() => { setReady(false); setReady(true) }) //console.log('Form data saved!')\n\n        }\n    });\n\n    useEffect(() => {\n        //    console.log(props);\n        let foundInitialValues = {};\n\n        Object.keys(props.formInitialValues || {}).forEach(dictionaryId => {\n            let dictionaryIdObject = props.formInitialValues[dictionaryId];\n            Object.keys(dictionaryIdObject || {}).forEach(uid => {\n                if (!!dictionaryIdObject[uid]?.currenttask && dictionaryIdObject[uid].currenttask === currentTask) {\n                    //        console.log(dictionaryIdObject[uid].currenttask);\n                    let period = dictionaryIdObject?.[uid]?.period;\n                    let value = dictionaryIdObject?.[uid]?.value;\n                    foundInitialValues[dictionaryId + '_|_' + period] = value\n                }\n            })\n        });\n        //    console.log(foundInitialValues);\n\n        Object.keys(foundInitialValues || {}).forEach(item => {\n            formik.setFieldValue(item, foundInitialValues[item])\n        });\n\n        setReady(true);\n\n    }, [])\n\n\n    if (isReady) return <div\n        style={{\n            margin: `0 auto`,\n            maxWidth: 800,\n            padding: '2rem'\n        }}>\n        <small>{currentTask}</small>\n        <form className=\"baseForm\" onSubmit={formik.handleSubmit}>\n\n\n            <Form.Group as={Row} controlId=\"formName0\">\n                <Form.Label column sm=\"4\">Показатели</Form.Label>\n                {props.formColumns.map((col, index) =>\n                    <Form.Label column sm=\"2\" key={index} className=\"text-center\">{col}</Form.Label>\n                )}\n            </Form.Group>\n\n            {Object.keys(props.formInitialValues).map((item, index) => {\n                if (item === 'currenttask') return null\n                return <div key={index}>\n                    <Form.Group as={Row} controlId=\"formName\">\n                        <Form.Label column sm=\"4\">{props.formDictionaryTitles[item]}</Form.Label>\n                        {props.formColumns.map((col, index) =>\n                            <Col sm=\"2\" key={col}>\n                                <FormControl\n                                    type={props.formDictionaryTypes[item]}\n                                    name={item + '_|_' + col}\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values[item + '_|_' + col]}\n                                    className={formik.touched[item + '_|_' + col] && formik.errors[item + '_|_' + col] ? \"error\" : null}\n                                />\n                                <small>\n                                    {formik.touched[item + '_|_' + col] && formik.errors[item + '_|_' + col] ? <span className=\"error-message\">{formik.errors[item + '_|_' + col]}</span> : <span>{\"  \"}</span>}\n                                </small>\n                            </Col>\n                        )}\n                    </Form.Group>\n\n                </div>\n            }\n            )}\n\n            <Button type=\"submit\" disabled={formik.isSubmitting} variant=\"outline-secondary\" className=\"mb-5\">Сохранить</Button>\n        </form>\n    </div>\n\n    return null\n}\n\nfunction OneColumnFormikForm(props) {\n    const [isReady, setReady] = useState(false);\n\n    let currentTask = props.currentTask;\n\n    const formik = useFormik({\n        initialValues: {},\n        //   validationSchema: validationSchema,\n        onSubmit(values, actions) {\n            //   console.log(values);\n            //      console.log(actions);\n            let dataObjects = {};\n            Object.keys(props.formInitialValues).map(rowsItem => {\n                console.log(rowsItem);\n                dataObjects[rowsItem] = { ...props.formInitialValues[rowsItem] };\n                console.log(rowsItem);\n                Object.keys(values).map(valuesKey => {\n                    if (valuesKey.includes(rowsItem)) {\n                        //   console.log(props.formInitialValues[rowsItem]);\n                        let keyIninitialValues = null\n                        !!props.formInitialValues[rowsItem] && Object.keys(props.formInitialValues[rowsItem]).forEach(element => {\n                            let currentObject = props.formInitialValues[rowsItem][element];\n                            if (currentObject.currenttask === currentTask) { keyIninitialValues = element }\n                        });\n                        if (!!keyIninitialValues) {\n                            dataObjects[rowsItem][keyIninitialValues] =\n                            {\n                                currenttask: currentTask,\n                                context: 'Default',\n                                value: values[valuesKey]\n                            };\n                            console.log(dataObjects[rowsItem]);\n                        } else {\n                            dataObjects[rowsItem][uuidv4()] =\n                            {\n                                currenttask: currentTask,\n                                context: 'Default',\n                                value: values[valuesKey]\n                            };\n                            console.log(dataObjects[rowsItem]);\n                        }\n                    }\n                })\n            })\n            //  console.log(dataObjects);\n\n            let matches = []\n            for (let i in Object.keys(dataObjects)) {\n                let valueKey = Object.keys(dataObjects)[i];\n                // matches will be an array of promises\n                matches.push(userCraft.setItem(valueKey, dataObjects[valueKey]))\n            }\n            Promise.all(matches).then(() => { setReady(false); setReady(true) }) //console.log('Form data saved!')\n\n            // let matches = []\n            // for (let i in Object.keys(values)) {\n            //     let valueKey = Object.keys(values)[i];\n            //     // matches will be an array of promises\n            //     matches.push(userCraft.setItem(valueKey, values[valueKey]))\n            // }\n            // Promise.all(matches).then(() => { setReady(false); actions.setSubmitting(false); setReady(true) }) //console.log('Form data saved!');\n        }\n    });\n\n    // If you're curious, you can run this Effect\n    useEffect(() => {\n        // console.log({ formik });\n\n        Object.keys(props.formInitialValues || {}).forEach(dictionaryId => {\n            let dictionaryIdObject = props.formInitialValues[dictionaryId];\n            Object.keys(dictionaryIdObject || {}).forEach(uid => {\n\n                if (!!dictionaryIdObject[uid]?.currenttask && dictionaryIdObject[uid].currenttask === currentTask) {\n                    // console.log(dictionaryIdObject[uid].currenttask);\n                    let value = dictionaryIdObject?.[uid]?.value;\n                    formik.setFieldValue(dictionaryId, value);\n                    //         console.log(dictionaryId, value, currentTask);\n                }\n            })\n        });\n        setReady(true);\n    }, [])\n\n    //   console.log(props)\n\n    if (!isReady) return null\n\n    return <div\n        style={{\n            margin: `0 auto`,\n            maxWidth: 800,\n            padding: '2rem'\n        }}>\n        <small>{currentTask}</small>\n        <form className=\"baseForm\" onSubmit={formik.handleSubmit}>\n\n            {Object.keys(props.formInitialValues).map((item, index) => {\n                return <div key={index}>\n                    <Form.Group as={Row} controlId={'formName' + item}>\n                        <Form.Label column sm=\"4\">{props.formDictionaryTitles[item]}</Form.Label>\n                        <Col sm=\"8\">\n                            <FormControl\n                                type={props.formDictionaryTypes[item]}\n                                /* This name property is used to access the value of the form element via values.nameOfElement */\n                                name={item}\n                                /*      placeholder={item.dictionaryId}\n                                     Set onChange to handleChange */\n                                onChange={formik.handleChange}\n                                /* Set onBlur to handleBlur */\n                                onBlur={formik.handleBlur}\n                                /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\n                                value={formik.values[item]}\n                                /* Check if the name field (this field) has been touched and if there is an error, if so add the .error class styles defined in the CSS (make the input box red) */\n                                className={formik.touched[item] && formik.errors[item] ? \"error\" : null}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <small>\n                        {formik.touched[item] && formik.errors[item] ? <span className=\"error-message\">{formik.errors[item]}</span> : <span>{\"  \"}</span>}\n                    </small>\n                </div>\n            }\n            )}\n\n            <Button type=\"submit\" disabled={formik.isSubmitting} variant=\"outline-secondary\" className=\"mb-5\">Сохранить</Button>\n        </form>\n    </div>\n}","import React, { useState } from \"react\";\n\n// import Comp_gold_rule from './comp_gold_rule';\n\nimport LocalForageFormik from '../components/LocalForageFormik';\n\nimport Header from '../components/header';\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\n\nexport default () => {\n    const [page, setPage] = useState(2);\n    return <>\n        <Header siteTitle={\"Econolabs\"} />\n\n        <Row>\n            <Col sm=\"3\">\n                <ButtonGroup vertical className=\"m-5\" size=\"sm\" style={{ with: \"100%\" }}>\n                    {/* <Button variant=\"outline-secondary\" onClick={() => setPage(1)}>Золотое правило</Button> */}\n                    <Button variant=\"outline-secondary\" onClick={() => setPage(2)}>Общие сведения</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setPage(3)}>Золотое правило</Button>\n                </ButtonGroup>\n            </Col>\n            <Col sm=\"9\"><Container>\n                {/* {page === 1 ? <Comp_gold_rule /> : null} */}\n                {page === 2 ? <LocalForageFormik\n                    formFields={{\n                        rows: [\"currenttask\", \"currentcompanyfullname\", \"currentcompanyreporturl\", \"currentcompanyunitofmoney\"],\n                        columns: [\"Общие сведения\"]\n                    }}\n                /> : null}\n                {page === 3 ? <LocalForageFormik\n                    formFields={{\n                        rows: [\"code2110_minfin_ru_66n\", \"code1100_minfin_ru_66n\", \"code1200_minfin_ru_66n\", \"code1300_minfin_ru_66n\", \"code1400_minfin_ru_66n\", \"code1500_minfin_ru_66n\"],\n                        columns: [\"2017\", \"2018\", \"2019\"]\n                    }}\n                /> : null}\n            </Container></Col>\n        </Row>\n\n    </>\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"sourceRoot":""}