{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["SecondPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","m","module","exports","require","default","loader","enqueue","React","createContext","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","_ref2","children","data","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","css","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","_ref","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"8IAeeA,UATI,kBACjBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CAAKC,MAAM,aACXJ,OAAAC,EAAA,EAAAD,CAAA,qCACAA,OAAAC,EAAA,EAAAD,CAAA,8BACAA,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,CAAMC,GAAG,KAAT,kDCXJ,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6HCctBK,QAAOC,QAELC,IAAMC,cAAc,sCChB/CC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KAAAQ,EAAAR,EAAAM,EAAAC,GAEME,EAAa,IAAIC,IAAWC,KAErBR,EAASM,EAAWN,+HCUlBD,EAAA,WAAAU,GAAkB,IAAfC,EAAeD,EAAfC,SACVC,EAAIC,EAAAD,KAWV,OACA9B,OAAAC,EAAA,EAAAD,CAAA,OACEgC,IAAKA,YAAF,yCAGUb,YAAO,GAHjB,gBAIcA,YAAO,KAJrB,MAOHnB,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAM3B,GAAE,KACNN,OAAAC,EAAA,EAAAD,CAAA,MACEgC,IAAKA,YAAF,iBACgBb,YAAO,GADvB,6CAMDW,EAAKI,KAAKC,aAAa/B,QAG7BJ,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CACE3B,GAAE,UACF0B,IAAGI,GAFL,SAQCP,2JChCUQ,UAjBU,SAAAD,GAAiC,IAA9BE,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,cACpC,OAAKA,EAGEzB,IAAM0B,cAAcC,IAApBzC,OAAA0C,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,qFCKX,SAASC,EAATR,GAAiD,IAAlCS,EAAkCT,EAAlCS,YAAaC,EAAqBV,EAArBU,KAAMC,EAAeX,EAAfW,KAAM3C,EAASgC,EAAThC,MAC9B8B,EADuCc,EAAAlB,KACvCI,KAcFe,EAAkBJ,GAAeX,EAAKC,aAAaU,YAEzD,OACE7C,OAAAC,EAAA,EAAAD,CAACkD,EAAAC,EAAD,CACEC,eAAgB,CACdN,QAEF1C,MAAOA,EACPiD,cAAa,QAAUnB,EAAKC,aAAa/B,MACzC2C,KAAM,CACJ,CACEO,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASnD,GAEX,CACEoD,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASrB,EAAKC,aAAasB,QAE7B,CACEH,KAAI,gBACJC,QAASnD,GAEX,CACEkD,KAAI,sBACJC,QAASN,IAEXS,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-page-2-js-7ceb9d400bfa304ea2c2.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\nconst typography = new Typography(kirkhamTheme)\nexport default typography\nexport const rhythm = typography.rhythm","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n\nimport React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  return (\n  <div\n    css={css`\n      margin: 0 auto;\n      max-width: 700px;\n      padding: ${rhythm(2)};\n      padding-top: ${rhythm(1.5)};\n    `}\n  >\n    <Link to={`/`}>\n      <h3\n        css={css`\n          margin-bottom: ${rhythm(2)};\n          display: inline-block;\n          font-style: normal;\n        `}\n      >\n         {data.site.siteMetadata.title}\n      </h3>\n    </Link>\n    <Link\n      to={`/about/`}\n      css={css`\n        float: right;\n      `}\n    >\n      About\n    </Link>\n    {children}\n  </div>\n)\n  }\n  \n\n// import React from \"react\"\n// import PropTypes from \"prop-types\"\n// import { useStaticQuery, graphql } from \"gatsby\"\n\n// import Header from \"./header\"\n// import \"./layout.css\"\n\n// const Layout = ({ children }) => {\n//   const data = useStaticQuery(graphql`\n//     query SiteTitleQuery {\n//       site {\n//         siteMetadata {\n//           title\n//         }\n//       }\n//     }\n//   `)\n\n//   return (\n//     <>\n//       <Header siteTitle={data.site.siteMetadata.title} />\n//       <div\n//         style={{\n//           margin: `0 auto`,\n//           maxWidth: 960,\n//           padding: `0px 1.0875rem 1.45rem`,\n//           paddingTop: 0,\n//         }}\n//       >\n//         <main>{children}</main>\n//         <footer>\n//           Â© {new Date().getFullYear()}, Built with\n//           {` `}\n//           <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n//         </footer>\n//       </div>\n//     </>\n//   )\n// }\n\n// Layout.propTypes = {\n//   children: PropTypes.node.isRequired,\n// }\n\n// export default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}