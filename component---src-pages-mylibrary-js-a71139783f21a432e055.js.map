{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/react-bootstrap/esm/BreadcrumbItem.js","webpack:///./node_modules/react-bootstrap/esm/Breadcrumb.js","webpack:///./src/pages/mylibrary.js","webpack:///./src/mediatemplates/ScienceNotesEditor.js"],"names":["Header","siteTitle","className","style","margin","to","color","textDecoration","href","src","alt","verticalAlign","width","height","borderRadius","filter","objectFit","defaultProps","Layout","children","data","useStaticQuery","site","siteMetadata","title","maxWidth","padding","Date","getFullYear","author","_excluded","BreadcrumbItem","forwardRef","_ref","ref","bsPrefix","active","_ref$as","as","Component","_ref$linkAs","linkAs","LinkComponent","SafeAnchor","linkProps","target","props","prefix","createElement","undefined","displayName","Breadcrumb","listProps","label","Item","fireNodes","id","type","source","fireNodeId","MyLibrary","userEmail","useSelector","selectApplication","email","replace","useFirebaseNode","userLibrary","loading","error","console","log","libraryItems","Object","keys","map","item","MyLibraryLayout","React","useState","useImmer","libraryContent","updateLibraryContent","level1","level2","level3","level4","level5","libraryState","updateLibraryState","onSave","length","updates","firebase","database","update","then","updateLibrary","command","option","draft","Container","Row","Col","minWidth","onClick","ShowBooks","books","addBook","book_title","push","key","ShowChapters","chapters","addChapter","chapter_title","ShowSubChapters","subchapters","addSubChapter","subchapter_title","ShowIdeas","ideas","addIdea","idea_title","ShowScienceNotes","sciencenotes","open","setOpen","useForm","register","handleSubmit","book","Button","variant","aria-controls","aria-expanded","size","Collapse","in","Form","onSubmit","Group","controlId","Label","Control","rows","block","chapter","subchapter","idea","sciencenote","ShowScienceNote","userNote","screenSize","useMedia","currentEditId","setCurrentEditId","ScienceNotesEditor","note","ScienceNoteCard","content","currentFullMode","setCurrentFullMode","toggleMode","ReactHtmlParser","last_edit","cited_reference","date","plagiarism","h6","h5","h4","h3","h2","h1","Body","user","avatarUrl","savedAnswer","setSavedAnswer","methods","defaultValues","currentField","setCurrentField","tags","idNote","child","old_editions","val","keyItem","postObject","deleted","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","setTimeout","window","location","reload","aria-label","ActiveField","name","disabled","useFormContext"],"mappings":"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","file":"component---src-pages-mylibrary-js-a71139783f21a432e055.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar  navbar-light bg-light \"> {/* navbar-dark bg-primary */}\n\n    <h3 style={{ margin: 0 }}>\n      <Link to=\"/\" style={{ color: `gray`, textDecoration: `none`, }}>{siteTitle}</Link>\n    </h3>\n    <a className=\"navbar-brand\" href=\"https://vk.com/id151078439\">\n      <img\n        src=\"https://sun9-37.userapi.com/c317630/v317630439/76a0/Bz6QTfBog0I.jpg?ava=1\"\n        //  width=\"30\"\n        //  height=\"45\"\n        alt=\"\"\n        style={{\n          verticalAlign: 'middle',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          filter: 'grayscale(100%)',\n          objectFit: 'cover'\n        }} />\n    </a>\n  </nav>\n\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 800,\n          padding: '2rem'\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <span style={{color: 'darkgray'}}>\n          © {new Date().getFullYear()}, {\" \"}\n          <a href=\"https://vk.com/id151078439\" style={{color: 'darkgray'}}>{data.site.siteMetadata.author}</a>\n          </span>         \n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"active\", \"children\", \"className\", \"as\", \"linkAs\", \"linkProps\", \"href\", \"title\", \"target\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  active: false,\n  linkProps: {}\n};\nvar BreadcrumbItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'li' : _ref$as,\n      _ref$linkAs = _ref.linkAs,\n      LinkComponent = _ref$linkAs === void 0 ? SafeAnchor : _ref$linkAs,\n      linkProps = _ref.linkProps,\n      href = _ref.href,\n      title = _ref.title,\n      target = _ref.target,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(prefix, className, {\n      active: active\n    }),\n    \"aria-current\": active ? 'page' : undefined\n  }), active ? children : /*#__PURE__*/React.createElement(LinkComponent, _extends({}, linkProps, {\n    href: href,\n    title: title,\n    target: target\n  }), children));\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"listProps\", \"children\", \"label\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nvar defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nvar Breadcrumb = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      listProps = _ref.listProps,\n      children = _ref.children,\n      label = _ref.label,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'nav' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    \"aria-label\": label,\n    className: className,\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"ol\", _extends({}, listProps, {\n    className: classNames(prefix, listProps == null ? void 0 : listProps.className)\n  }), children));\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nBreadcrumb.Item = BreadcrumbItem;\nexport default Breadcrumb;","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useFirebaseNode } from \"../hooks/useFirebaseNode\";\nimport { useSelector } from \"react-redux\";\nimport { useImmer } from \"use-immer\";\nimport firebase from \"gatsby-plugin-firebase\";\n\nimport Layout from \"../components/layout\";\n\nimport { selectApplication } from \"../features/application/applicationSlice\";\nimport useMedia from \"../hooks/useMedia\";\n\nimport ScienceNotesEditor, { ScienceNoteCard } from \"../mediatemplates/ScienceNotesEditor\";\nimport BookEditor from \"../mediatemplates/BookEditor\";\n\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\n\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\n\nimport { SVGBootstrapIconPencilSquare, SVGBootstrapIconSearch, SVGBootstrapIconEnvelopeOpen } from \"../svgs\";\n\n\nimport ReactHtmlParser from 'react-html-parser'; //, { processNodes, convertNodeToElement, htmlparser2 }\n\nimport \"../mediatemplates/ScienceNotes.css\";\n\nlet fireNodes = [\n  { id: 1, type: \"book\", title: \"Книга 1\" },\n  { id: 2, type: \"book\", title: \"Книга 2\" },\n  { id: 3, type: \"book\", title: \"Книга 3\" },\n\n  { id: 4, type: \"chapter\", title: \"Глава 1 Книги 1\", source: \"Книга 1\" },\n  { id: 5, type: \"chapter\", title: \"Глава 2 Книги 1\", source: \"Книга 1\" },\n  { id: 6, type: \"chapter\", title: \"Глава 3 Книги 1\", source: \"Книга 1\" },\n\n  { id: 13, type: \"subchapter\", title: \"Параграф 1 Главы 1 Книги 1\", source: \"Глава 1 Книги 1\" },\n  { id: 14, type: \"subchapter\", title: \"Параграф 2 Главы 1 Книги 1\", source: \"Глава 1 Книги 1\" },\n  { id: 15, type: \"subchapter\", title: \"Параграф 3 Главы 1 Книги 1\", source: \"Глава 1 Книги 1\" },\n\n  { id: 16, type: \"idea\", title: \"Идея 1 Параграфа 1 Главы 1 Книги 1\", source: \"Параграф 1 Главы 1 Книги 1\" },\n  { id: 17, type: \"idea\", title: \"Идея 2 Параграфа 1 Главы 1 Книги 1\", source: \"Параграф 1 Главы 1 Книги 1\" },\n  { id: 18, type: \"idea\", title: \"Идея 3 Параграфа 1 Главы 1 Книги 1\", source: \"Параграф 1 Главы 1 Книги 1\" },\n\n  { id: 19, type: \"sciencenote\", title: \"Note 1\", source: \"Идея 1 Параграфа 1 Главы 1 Книги 1\", fireNodeId: \"-Mcryv4ypZu5k136cd1h\" },\n  { id: 20, type: \"sciencenote\", title: \"Note 2\", source: \"Идея 1 Параграфа 1 Главы 1 Книги 1\", fireNodeId: \"-Mcs53WMJfo-bpk9_vd5\" },\n  { id: 21, type: \"sciencenote\", title: \"Note 3\", source: \"Идея 1 Параграфа 1 Главы 1 Книги 1\", fireNodeId: \"-Mcz_KoaEbhmU2yvGvJI\" },\n\n  { id: 7, type: \"chapter\", title: \"Глава 1 Книги 2\", source: \"Книга 2\" },\n  { id: 8, type: \"chapter\", title: \"Глава 2 Книги 2\", source: \"Книга 2\" },\n  { id: 9, type: \"chapter\", title: \"Глава 3 Книги 2\", source: \"Книга 2\" },\n  { id: 10, type: \"chapter\", title: \"Глава 1 Книги 3\", source: \"Книга 3\" },\n  { id: 11, type: \"chapter\", title: \"Глава 2 Книги 3\", source: \"Книга 3\" },\n  { id: 12, type: \"chapter\", title: \"Глава 3 Книги 3\", source: \"Книга 3\" },\n]\n\nexport default function MyLibrary() {\n  const email = useSelector(selectApplication).email;\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n\n  const { data: userLibrary, loading, error } = useFirebaseNode(\n    \"usersScience/\" + userEmail + \"/library/\"\n  );\n\n  console.log(userLibrary);\n\n  if (!!loading) { return <Layout>...</Layout> }\n  if (!!error) { return <Layout>:-(</Layout> }\n\n\n\n  let libraryItems = !!userLibrary ? Object.keys(userLibrary).map((item) => { return userLibrary[item] }) : null;\n\n  return <MyLibraryLayout libraryItems={libraryItems} />\n}\n\nfunction MyLibraryLayout({ libraryItems }) {\n  // const [data, setData] = React.useState(null);\n  const email = useSelector(selectApplication).email;\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n  //const avatarUrl = useSelector(selectApplication).avatarUrl;\n  //const user = useSelector(selectApplication).user;\n  const [currentEditId, setCurrentEditId] = React.useState(null);\n  const [currentFullMode, setCurrentFullMode] = React.useState(null);\n\n  const [libraryContent, updateLibraryContent] = useImmer(!!libraryItems ? libraryItems : fireNodes);\n\n  const [libraryState, updateLibraryState] = useImmer({\n    level1: \"Книги\",\n    level2: \"Книга\",\n    level3: \"Главы\",\n    level4: \"Параграфы\",\n    level5: \"Идеи\"\n  });\n\n  function onSave() {\n    if (email.length > 6) {\n      var updates = {};\n      updates[\"usersScience/\" + userEmail + \"/library/\"] = libraryContent;\n      return firebase\n        .database()\n        .ref()\n        .update(updates)\n        .then(() => {\n          console.log('Success!!!')\n          //      DoSavedSuccessfully(true);\n          //      doEditPostTitleComment(false);\n        });\n    }\n  }\n\n\n  function addBook(book_title) {\n    updateLibraryContent(draft => {\n      draft.push({\n        id: firebase.database().ref(\"usersScience/\" + userEmail + \"/library/\").push().key,\n        type: \"book\",\n        title: book_title\n      })\n    });\n    onSave();\n  }\n\n  function addChapter(chapter_title) {\n    updateLibraryContent(draft => {\n      draft.push({\n        id: firebase.database().ref(\"usersScience/\" + userEmail + \"/library/\").push().key,\n        type: \"chapter\",\n        title: chapter_title,\n        source: libraryState.level2\n      })\n    });\n    onSave();\n  }\n\n  function addSubChapter(subchapter_title) {\n    updateLibraryContent(draft => {\n      draft.push({\n        id: firebase.database().ref(\"usersScience/\" + userEmail + \"/library/\").push().key,\n        type: \"subchapter\",\n        title: subchapter_title,\n        source: libraryState.level3\n      })\n    });\n    onSave();\n  }\n\n  function addIdea(idea_title) {\n    updateLibraryContent(draft => {\n      draft.push({\n        id: firebase.database().ref(\"usersScience/\" + userEmail + \"/library/\").push().key,\n        type: \"idea\",\n        title: idea_title,\n        source: libraryState.level4\n      })\n    });\n    onSave();\n  }\n\n  function addScienceNote(sciencenote_title) {\n    updateLibraryContent(draft => {\n      draft.push({\n        id: firebase.database().ref(\"usersScience/\" + userEmail + \"/library/\").push().key,\n        type: \"sciencenote\",\n        title: sciencenote_title,\n        source: libraryState.level5\n      })\n    });\n    onSave();\n  }\n\n\n  function updateLibrary(command = null, option = null) {\n    if (command === 'ShowAllBooks') {\n      updateLibraryState(draft => {\n        draft.level1 = 'Книги';\n        draft.level2 = 'Книга';\n        draft.level3 = 'Главы';\n        draft.level4 = 'Параграфы';\n        draft.level5 = 'Идеи'\n      })\n    }\n\n    if (command === 'ShowAllChapters') {\n      updateLibraryState(draft => {\n        draft.level3 = 'Главы';\n        draft.level4 = 'Параграфы';\n        draft.level5 = 'Идеи';\n      })\n    }\n\n    if (command === 'ShowAllSubChapters') {\n      updateLibraryState(draft => {\n        draft.level4 = 'Параграфы';\n        draft.level5 = 'Идеи';\n      })\n    }\n\n    if (command === 'ShowAllIdeas') {\n      updateLibraryState(draft => {\n        draft.level5 = 'Идеи';\n      })\n    }\n\n\n\n\n    if (command === 'SelectBook') {\n      updateLibraryState(draft => {\n        draft.level2 = option;\n      })\n    }\n\n    if (command === 'SelectChapter') {\n      updateLibraryState(draft => {\n        draft.level3 = option;\n      })\n    }\n\n    if (command === 'SelectSubChapter') {\n      updateLibraryState(draft => {\n        draft.level4 = option;\n      })\n    }\n\n    if (command === 'SelectIdea') {\n      updateLibraryState(draft => {\n        draft.level5 = option;\n      })\n    }\n\n  }\n\n\n\n\n\n\n\n  // if (!!currentEditId) {\n  //   return <Layout>\n  //     <ScienceNotesEditor note={currentEditId === \"new\" ? { id: \"new\" } : notes.filter(note => note.id === currentEditId)[0]} screenSize={screenSize} />\n  //   </Layout>\n  //   //    return <SmallScreenCalculations />;\n  // }\n\n  console.log(libraryState);\n\n  // if (screenSize !== \"large\") {\n  //   return <Layout>\n  //     Small Library\n  //   </Layout>  \n  // }\n\n  return (\n    <Layout>\n      <Container>\n        <Row>\n          <Col>\n            <Breadcrumb style={{ minWidth: \"30rem\" }}>\n              <Breadcrumb.Item onClick={() => updateLibrary('ShowAllBooks')}>{libraryState.level1}</Breadcrumb.Item>\n              <Breadcrumb.Item onClick={() => updateLibrary('ShowAllChapters')}>{libraryState.level2}</Breadcrumb.Item>\n              <Breadcrumb.Item onClick={() => updateLibrary('ShowAllSubChapters')}>{libraryState.level3}</Breadcrumb.Item>\n              <Breadcrumb.Item onClick={() => updateLibrary('ShowAllIdeas')}>{libraryState.level4}</Breadcrumb.Item>\n              <Breadcrumb.Item active >{libraryState.level5}</Breadcrumb.Item>\n            </Breadcrumb>\n            {libraryState.level1 === \"Книги\" && libraryState.level2 === \"Книга\" ?\n              <ShowBooks\n                books={libraryContent.filter(item => item.type === \"book\")}\n                updateLibrary={updateLibrary}\n                addBook={addBook}\n              />\n              : null}\n            {libraryState.level2 !== \"Книга\" && libraryState.level3 === \"Главы\" ?\n              <ShowChapters\n                chapters={libraryContent.filter(item => item.type === \"chapter\" && item.source === libraryState.level2)}\n                updateLibrary={updateLibrary}\n                addChapter={addChapter}\n              />\n              : null}\n            {libraryState.level3 !== \"Главы\" && libraryState.level4 === \"Параграфы\" ?\n              <ShowSubChapters\n                subchapters={libraryContent.filter(item => item.type === \"subchapter\" && item.source === libraryState.level3)}\n                updateLibrary={updateLibrary}\n                addSubChapter={addSubChapter}\n              />\n              : null}\n            {libraryState.level4 !== \"Параграфы\" ?\n              <ShowIdeas\n                ideas={libraryContent.filter(item => item.type === \"idea\" && item.source === libraryState.level4)}\n                updateLibrary={updateLibrary}\n                addIdea={addIdea}\n              />\n              : null}\n\n\n          </Col>\n          <Col>\n            {/* <BookEditor /> */}\n            {libraryState.level5 !== \"Идеи\" ?\n              <ShowScienceNotes\n                sciencenotes={libraryContent.filter(item => item.type === \"sciencenote\" && item.source === libraryState.level5)}\n                updateLibrary={updateLibrary}\n              />\n              : <div>Выберите пункт</div>}\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n}\n\nfunction ShowBooks({ books = [], updateLibrary = null, addBook }) {\n  const [open, setOpen] = React.useState(false);\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    addBook(data.book_title);\n    setOpen(false);\n  }\n\n  console.log(books)\n\n  return <Container>\n    {!!books && books.map(book => <div key={book.id} onClick={() => updateLibrary(\"SelectBook\", book.title)}>\n      {book.title}\n    </div>)}\n\n    <Button\n      onClick={() => setOpen(!open)}\n      variant=\"outline-secondary\"\n      aria-controls=\"add_book_collapse\"\n      aria-expanded={open}\n      size=\"sm\"\n    >\n      +\n    </Button>\n    <Collapse in={open}>\n      <div id=\"add_book_collapse\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n\n          <Form.Group controlId={\"book_name\"}>\n            <Form.Label className=\"small text-muted\">Добавить книгу</Form.Label>\n            <Form.Control\n              {...register(\"book_title\")}\n              as=\"textarea\"\n              rows=\"2\"\n            />\n            {/* <Form.Text className=\"text-muted\">Пример: =NPV(0.1;100,200,300)-500</Form.Text> */}\n          </Form.Group>\n          <Button\n            variant=\"outline-secondary\"\n\n            type=\"submit\"\n            size=\"sm\"\n            block\n          >\n            Сохранить\n          </Button>\n        </Form>\n      </div>\n    </Collapse>\n\n  </Container>\n}\n\nfunction ShowChapters({ chapters = [], updateLibrary = null, addChapter }) {\n  const [open, setOpen] = React.useState(false);\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    addChapter(data.chapter_title);\n    setOpen(false);\n  }\n\n  console.log(chapters)\n  return <Container>\n    {!!chapters && chapters.map(chapter => <div key={chapter.id} onClick={() => updateLibrary('SelectChapter', chapter.title)}>\n      {chapter.title}\n    </div>)}\n    <Button\n      onClick={() => setOpen(!open)}\n      variant=\"outline-secondary\"\n      aria-controls=\"add_chapter_collapse\"\n      aria-expanded={open}\n      size=\"sm\"\n    >\n      +\n    </Button>\n    <Collapse in={open}>\n      <div id=\"add_chapter_collapse\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n\n          <Form.Group controlId={\"chapter_name\"}>\n            <Form.Label className=\"small text-muted\">Добавить главу</Form.Label>\n            <Form.Control\n              {...register(\"chapter_title\")}\n              as=\"textarea\"\n              rows=\"2\"\n            />\n            {/* <Form.Text className=\"text-muted\">Пример: =NPV(0.1;100,200,300)-500</Form.Text> */}\n          </Form.Group>\n          <Button\n            variant=\"outline-secondary\"\n            type=\"submit\"\n            size=\"sm\"\n            block\n          >\n            Сохранить\n          </Button>\n        </Form>\n      </div>\n    </Collapse>\n  </Container>\n}\n\nfunction ShowSubChapters({ subchapters = [], updateLibrary = null, addSubChapter }) {\n  const [open, setOpen] = React.useState(false);\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    addSubChapter(data.subchapter_title);\n    setOpen(false);\n  }\n\n\n  //  console.log(subchapters)\n\n  return <Container>\n    {!!subchapters && subchapters.map(subchapter => <div key={subchapter.id} onClick={() => updateLibrary('SelectSubChapter', subchapter.title)}>\n      {subchapter.title}\n    </div>)}\n    <Button\n      onClick={() => setOpen(!open)}\n      variant=\"outline-secondary\"\n      aria-controls=\"add_subchapter_collapse\"\n      aria-expanded={open}\n      size=\"sm\"\n    >\n      +\n    </Button>\n    <Collapse in={open}>\n      <div id=\"add_subchapter_collapse\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n\n          <Form.Group controlId={\"subchapter_name\"}>\n            <Form.Label className=\"small text-muted\">Добавить параграф</Form.Label>\n            <Form.Control\n              {...register(\"subchapter_title\")}\n              as=\"textarea\"\n              rows=\"2\"\n            />\n            {/* <Form.Text className=\"text-muted\">Пример: =NPV(0.1;100,200,300)-500</Form.Text> */}\n          </Form.Group>\n          <Button\n            variant=\"outline-secondary\"\n            type=\"submit\"\n            size=\"sm\"\n            block\n          >\n            Сохранить\n          </Button>\n        </Form>\n      </div>\n    </Collapse>\n\n  </Container>\n}\n\nfunction ShowIdeas({ ideas = [], updateLibrary = null, addIdea }) {\n  const [open, setOpen] = React.useState(false);\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    addIdea(data.idea_title);\n    setOpen(false);\n  }\n\n  console.log(ideas)\n  return <Container>\n    {!!ideas && ideas.map(idea => <div key={idea.id} onClick={() => updateLibrary('SelectIdea', idea.title)}>\n      {idea.title}\n    </div>)}\n    <Button\n      onClick={() => setOpen(!open)}\n      variant=\"outline-secondary\"\n      aria-controls=\"add_idea_collapse\"\n      aria-expanded={open}\n      size=\"sm\"\n    >\n      +\n    </Button>\n    <Collapse in={open}>\n      <div id=\"add_idea_collapse\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n\n          <Form.Group controlId={\"idea_name\"}>\n            <Form.Label className=\"small text-muted\">Добавить идею</Form.Label>\n            <Form.Control\n              {...register(\"idea_title\")}\n              as=\"textarea\"\n              rows=\"2\"\n            />\n            {/* <Form.Text className=\"text-muted\">Пример: =NPV(0.1;100,200,300)-500</Form.Text> */}\n          </Form.Group>\n          <Button\n            variant=\"outline-secondary\"\n            type=\"submit\"\n            size=\"sm\"\n            block\n          >\n            Сохранить\n          </Button>\n        </Form>\n      </div>\n    </Collapse>\n  </Container>\n}\n\nfunction ShowScienceNotes({ sciencenotes = [], updateLibrary = null }) {\n  console.log(sciencenotes)\n  return <Container className=\"mt-5\">\n    {!!sciencenotes && sciencenotes.map(sciencenote => <div key={sciencenote.id} > {/* onClick={() => updateLibrary('SelectIdea', sciencenote.title)} */}\n      <ShowScienceNote sciencenote={sciencenote} />\n    </div>)}\n  </Container>\n}\n\nfunction ShowScienceNote({ sciencenote }) {\n  const email = useSelector(selectApplication).email;\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n  const { data: userNote, loading, error } = useFirebaseNode(\n    \"usersScience/\" + userEmail + \"/notes/\" + sciencenote.fireNodeId\n  );\n  const screenSize = useMedia(\n    // Media queries\n    [\"(min-width: 810px)\", \"(min-width: 400px)\", \"(min-width: 100px)\"],\n    // Column counts (relates to above media queries by array index)\n    [\"large\", \"medium\", \"small\"],\n    // Default column count\n    \"large\"\n  );\n  const [currentEditId, setCurrentEditId] = React.useState(null);\n\n  if (!!loading || !userNote) { return <div>...</div> }\n  if (!!error) { return <div>:-(</div> }\n\n  if (!!currentEditId) {\n    return <ScienceNotesEditor note={currentEditId === \"new\" ? { id: \"new\" } : userNote } screenSize={screenSize} />\n  }\n\n  return <ScienceNoteCard note={userNote} setCurrentEditId={setCurrentEditId} />\n}\n\n\n\n\n\n\n\n\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useForm, FormProvider, useFormContext } from \"react-hook-form\";\nimport firebase from \"gatsby-plugin-firebase\";\nimport ReactHtmlParser from 'react-html-parser'; //, { processNodes, convertNodeToElement, htmlparser2 }\n\nimport { selectApplication } from \"../features/application/applicationSlice\";\n\n//import CreatableSelectComponent from \"../components/CreatableSelectComponent\";\n\nimport useMedia from \"../hooks/useMedia\";\n\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { SVGBootstrapIconPencilSquare, SVGBootstrapIconSearch, SVGBootstrapIconEnvelopeOpen } from \"../svgs\";\n\nfunction cardTitle(content) {\n    if (!!content?.h6) { return content.h6 }\n    if (!!content?.h5) { return content.h5 }\n    if (!!content?.h4) { return content.h4 }\n    if (!!content?.h3) { return content.h3 }\n    if (!!content?.h2) { return content.h2 }\n    if (!!content?.h1) { return content.h1 }\n    return \"Заголовок\"\n}\n\n\nexport function ScienceNoteCard({ note, setCurrentEditId = null }) {\n    const [currentFullMode, setCurrentFullMode] = React.useState(false);\n\n    const screenSize = useMedia(\n        // Media queries\n        [\"(min-width: 810px)\", \"(min-width: 400px)\", \"(min-width: 100px)\"],\n        // Column counts (relates to above media queries by array index)\n        [\"large\", \"medium\", \"small\"],\n        // Default column count\n        \"large\"\n    );\n\n    function toggleMode() {\n        setCurrentFullMode((currentFullMode) => !currentFullMode)\n    }\n\n    if (screenSize !== \"large\") {\n        return <div key={note.id}>\n            <small className={currentFullMode ? \"\" : \"line-clamp\"} >{ReactHtmlParser(note.content.last_edit)}</small>\n            <br />\n            <Button variant=\"outline-light\" size=\"sm\" onClick={() => setCurrentEditId(note.id)}> <SVGBootstrapIconPencilSquare /></Button>\n            <Button variant=\"outline-light\" size=\"sm\" onClick={() => toggleMode()}> <SVGBootstrapIconEnvelopeOpen /></Button>\n            <cite title=\"cited_reference\"><small>{note.content.cited_reference}</small></cite>\n            {\"   \"}\n            <cite title=\"plagiarism\"><small>{note.date + \"   \"}  {note.content.plagiarism}</small></cite>\n\n            <hr />\n        </div>\n    }\n\n    return <Card key={note.id} className=\"mb-1\">\n        <Card.Header>\n            <Button variant=\"outline-light\" size=\"sm\" onClick={() => setCurrentEditId(note.id)}> <SVGBootstrapIconPencilSquare /></Button>\n            <Button variant=\"outline-light\" size=\"sm\" onClick={() => toggleMode()}> <SVGBootstrapIconEnvelopeOpen /></Button>\n            <span className=\"ml-2\" >{cardTitle(note.content)}</span>\n        </Card.Header>\n        <Card.Body>\n            {/* <Card.Title>Special title treatment</Card.Title> */}\n            <blockquote className=\"blockquote mb-0\">\n                <small className={currentFullMode ? \"\" : \"line-clamp\"}>{!!note?.content?.last_edit ? ReactHtmlParser(note.content.last_edit) : \"-\"}</small>\n\n                {!!note?.content?.cited_reference ?\n                    <footer className=\"blockquote-footer\">\n                        <cite title=\"Сited_Reference\"> {note.content.cited_reference}</cite>\n                    </footer>\n                    : null}\n\n                {!!note?.content?.plagiarism ?\n                    <footer className=\"blockquote-footer\">\n                        <cite title=\"Plagiarism\">{note.date + \"   \"} {note.content.plagiarism} </cite>\n                    </footer>\n                    : null}\n\n            </blockquote>\n            {/* <Card.Text>{note.content.h3}</Card.Text> */}\n\n        </Card.Body>\n    </Card>\n}\n\n\n\n\n// let formFields = [\n//     { id: 0, name: 'h1' },\n//     { id: 1, name: 'h2' },\n//     { id: 2, name: 'h3' },\n//     { id: 3, name: 'h4' },\n//     { id: 4, name: 'h5' },\n//     { id: 5, name: 'h6' },\n//     { id: 6, name: 'last_edit' },\n//     { id: 7, name: 'cited_reference' }\n// ]\n\nfunction isObject(val) { if (val === null) { return false; } return ((typeof val === 'function') || (typeof val === 'object')); }\n\nexport default function ScienceNotesEditor({ note, screenSize }) {\n    const email = useSelector(selectApplication).email;\n    const user = useSelector(selectApplication).user;\n    const avatarUrl = useSelector(selectApplication)?.avatarUrl;\n    const [savedAnswer, setSavedAnswer] = useState(null);\n    const methods = useForm({ defaultValues: !!note?.content ? note.content : {} });\n    const { handleSubmit } = methods;\n    const [currentField, setCurrentField] = useState('last_edit');\n    const [tags, setTags] = useState([]);\n\n    function updateTags(newtags) {\n        setTags(tags => [...newtags]);\n    }\n\n    //  console.log(note);\n\n\n    const onSubmit = data => {\n        console.log(data);\n\n        if (email.length > 6) {\n            let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\n            let idNote = !!note?.id && note.id !== \"new\" ? note.id : firebase.database().ref(\"usersScience/\" + userEmail).child(\"notes\").push().key;\n\n            let old_editions = isObject(note?.content?.old_editions) ?\n                [...Object.keys(note.content.old_editions).map((keyItem) => { return note.content.old_editions[keyItem] }), data.last_edit]\n                : [data.last_edit];\n\n            console.log(old_editions);\n\n            let postObject = {\n                id: idNote, //Math.floor(Math.random() * 1001),\n                //         title: props.text,\n                //         theme: currentProjectTitle,\n                //         //    //     answer: value,\n                //         comment: currentProjectMediaAndDataAndTemplatesURL, //Тема\n                type: 'sciencenotes',\n                content: { ...data, old_editions, tags },\n                //         quizString: 'Рассчитано по отчетности ' + currentProjectTitle + ' по адресу ' + currentProjectSourseDataURL,\n                deleted: false,\n                email: email,\n                user: user,\n                avatarUrl: !!avatarUrl ? avatarUrl : null,\n                date: new Intl.DateTimeFormat(\"ru\", {\n                    weekday: \"short\",\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"numeric\",\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                }).format(new Date()), //Date().toJSON()\n            };\n\n            console.log(postObject);\n\n            var updates = {};\n            updates[\"usersScience/\" + userEmail + \"/notes/\" + idNote] = postObject;\n\n            return firebase.database().ref().update(updates).then(() => {\n                setSavedAnswer(true);\n                setTimeout(window.location.reload(), 8000);\n            });\n\n        }\n    }\n\n\n\n\n    return <FormProvider {...methods}>\n\n        {screenSize === \"large\" ?\n            <Container>\n                <ButtonGroup aria-label=\"Basic example\" size=\"sm\">\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h1\")}>h1</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h2\")}>h2</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h3\")}>h3</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h4\")}>h4</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h5\")}>h5</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"h6\")}>h6</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"last_edit\")}>Last Edit</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"cited_reference\")}>Cited Reference</Button>\n                    <Button variant=\"outline-secondary\" onClick={() => setCurrentField(\"plagiarism\")}>Plagiarism</Button>\n                </ButtonGroup>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    {(() => {\n                        switch (currentField) {\n                            case \"h1\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 1\"} />;\n                            case \"h2\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 2\"} />;\n                            case \"h3\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 3\"} />;\n                            case \"h4\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 4\"} />;\n                            case \"h5\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 5\"} />;\n                            case \"h6\": return <ActiveField key={currentField} name={currentField} label={\"Заголовок 6\"} />;\n                            case \"last_edit\": return <ActiveField key={currentField} name={currentField} label={\"Текст\"} />;\n                            case \"cited_reference\": return <ActiveField key={currentField} name={currentField} label={\"Источник\"} />;\n                            case \"plagiarism\": return <ActiveField key={currentField} name={currentField} label={\"Уникальность\"} />;\n                        }\n                    })()}\n\n                    {/* <CreatableSelectComponent tags={note.content.tags} updateTags={updateTags} /> */}\n\n                    <Button\n                        variant=\"outline-secondary\"\n                        type=\"submit\"\n                        size=\"sm\"\n                        block\n                        disabled={savedAnswer}\n                    >\n                        Сохранить\n                    </Button>\n                </Form>\n\n\n\n            </Container> :\n            <Container>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <ActiveField name={\"h6\"} label={\"Заголовок\"} />\n                    <ActiveField name={\"last_edit\"} label={\"Текст\"} />\n                    <ActiveField name={'cited_reference'} label={\"Источник\"} />\n                    <ActiveField name={'plagiarism'} label={\"Уникальность\"} />\n                    <Button\n                        variant=\"outline-secondary\"\n                        type=\"submit\"\n                        size=\"sm\"\n                        block\n                        disabled={savedAnswer}\n                    >\n                        Сохранить\n                    </Button>\n\n                </Form>\n\n            </Container>\n        }\n\n\n\n        {/* {formFields.map((item) =>\n                <ActiveField key={item.name} name={item.name} />\n            )} */}\n\n    </FormProvider>\n}\n\nfunction ActiveField({ name, label = null }) {\n    const methods = useFormContext();\n    return <Form.Group controlId={\"field_\" + name}>\n        <Form.Label className=\"small text-muted\">{!!label ? label : name}</Form.Label>\n        <Form.Control\n            {...methods.register(name)}\n            as=\"textarea\"\n            rows=\"3\"\n        />\n        {/* <Form.Text className=\"text-muted\">Пример: =NPV(0.1;100,200,300)-500</Form.Text> */}\n    </Form.Group>\n}\n"],"sourceRoot":""}